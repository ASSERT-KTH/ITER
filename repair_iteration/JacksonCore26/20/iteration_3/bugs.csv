bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    +    1;    _inputPtr  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
2	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  end  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    _inputPtr  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
3	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end  +  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
4	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end));  _inputEnd  =  end  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end));  _inputEnd  =  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end));  _inputEnd  =  end  +  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    +    1;    _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
6	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
7	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_SINGLE_QUOTES);  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_SINGLE_QUOTES);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_SINGLE_QUOTES);	          _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOW_UNQUOTED_NAMES);    	non-compiled	[CE]  unclosed  string  literal	59	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    1;    _inputPtr  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
9	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    _inputPtr  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    1;    _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
11	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    1;    _inputPtr  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
13	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    _inputPtr  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
14	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  1;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  _inputPtr  =  end  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    _inputPtr  =  end  -  1;  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
15	[BUG]  [BUGGY]  _inputPtr  =  start;  int  end  =  _inputPtr.length();  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  int  end  =  _inputPtr.length();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  int  end  =  _inputPtr.length();	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	64	None	replace
16	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length();  }  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length();  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length();  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
17	[BUG]  [BUGGY]  int  end  =  _inputPtr.length();  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  int  end  =  _inputPtr.length();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	int  end  =  _inputPtr.length();	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	64	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  1;  int  startPtr  =  end  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
19	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  end  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  int  startPtr  =  end  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
20	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);  int  startPtr  =  start  -  1;  [CE]  cannot  find  symbol  _inputRowStart  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);  int  startPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	5	None	replace
21	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( "Already  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
22	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( "Already  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
23	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Aready  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( "Aready  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
24	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Aready  closed,  can  not  feed  more  input   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( "Aready  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( "Aready  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputEnd  -  _inputPtr);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	51	1	replace
26	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputPtr);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	51	1	replace
27	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtrStart);  [CE]  cannot  find  symbol  _inputPtrStart  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtrStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputPtrStart);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputPtrStart	51	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    start;    _inputPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
29	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    _inputPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  start  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    start;    _inputPtr  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
31	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  start  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  start  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    _inputPtr  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  int  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    start;    int  _inputPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
33	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  int  _inputPtr  =  end  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  int  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    int  _inputPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
34	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  end  -  begin;  [CE]  cannot  find  symbol  begin  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  _inputPtr  =  end  -  begin;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    _inputPtr  =  end  -  begin;	  	non-compiled	[CE]  cannot  find  symbol  begin	17	None	add
35	[BUG]  [BUGGY]  _inputPtr  =  start;  int  end  =  _inputPtr.length;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  int  end  =  _inputPtr.length;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  int  end  =  _inputPtr.length;	  _inputPtr    =    end;    int    end    =    _inputPtr.length;    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	63	None	replace
36	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length;  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  end  =  _inputPtr.length;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	63	None	replace
37	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length;  }  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	63	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputPtr  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  _inputPtr  +  1;	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
39	[BUG]  [BUGGY]  _inputPtr  =  _inputPtr  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputPtr  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  _inputPtr  +  1;	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputBuffer.length  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  _inputBuffer.length  +  1;	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
41	[BUG]  [BUGGY]  _inputPtr  =  _inputBuffer.length  +  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputBuffer.length  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  _inputBuffer.length  +  1;	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
42	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
43	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  end  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  end  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
44	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  not  a  statement	37	None	replace
45	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  >>  _inputEnd);  _inputPtr  =  end;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  >>  _inputEnd);  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  end)  >>  _inputEnd);  _inputPtr  =  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  not  a  statement	37	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
47	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
49	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
51	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
53	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  +=  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
54	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  ';'  expected	33	None	replace
55	[BUG]  [BUGGY]  ((  _inputPtr  -  start)  >=  _inputEnd));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  -  start)  >=  _inputEnd));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  -  start)  >=  _inputEnd));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  not  a  statement	33	None	replace
56	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  not  a  statement	33	None	replace
57	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  not  a  statement	33	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    start;    _inputPtr  =  end;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	61	1	add
59	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  end;  _inputPtr  =  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    _inputPtr  =  end;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	61	1	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  start;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    start;    _inputPtr  =  start;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	61	1	add
61	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  start;  _inputPtr  =  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  start;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    _inputPtr  =  start;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	61	1	add
62	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
63	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
64	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	53	None	replace
65	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _iorigBufferLen  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _iorigBufferLen	53	None	replace
66	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputBufferLen  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	53	None	replace
67	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]                    AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	53	None	replace
68	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  0)  {  throw  new  JsonParserException( " ");  }  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  0)  {  throw  new  JsonParserException( " ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  0)  {  throw  new  JsonParserException( " ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  unclosed  string  literal	24	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputEnd  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputEnd  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	36	1	replace
70	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputEnd  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputEnd  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	36	1	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _origBufferLen);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputEnd  -  _origBufferLen);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowStart);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
72	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _origBufferLen);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _origBufferLen);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _origBufferLen);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowStart);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
73	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	15	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
75	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
76	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
77	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
78	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
79	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
80	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
81	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
82	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
83	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  <  =  _inputEnd);  _inputPtr  =  end;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  <  =  _inputEnd);  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end;  ((  _inputPtr  +  1)  <  =  _inputEnd);  _inputPtr  =  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    4;    _inputPtr  =  start  +  4;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
85	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    _inputPtr  =  start  +  4;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
86	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4);  _inputPtr  =  start  +  4;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4);  _inputPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  =  start  +  4);  _inputPtr  =  start  +  4;	  	non-compiled	[CE]  ')'  expected	41	None	add
87	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _origBufferLen  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	41	None	add
88	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _inputPtr  =  start  +  4;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _inputPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  =  start  +  4)  >=  _inputEnd);  _inputPtr  =  start  +  4;	  	non-compiled	[CE]  not  a  statement	41	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
90	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  start;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
92	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  start;  _inputPtr  =  end;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  start;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  start;  _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
94	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
95	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  End;  _inputPtr  =  end;  [CE]  cannot  find  symbol  End  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  _inputPtr  =  End;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    _inputPtr  =  End;  _inputPtr  =  end;	  	non-compiled	[CE]  cannot  find  symbol  End	12	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
97	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
99	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    _inputPtr  =  end  +  1;  _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
100	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _origBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	52	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
102	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _origBufferLen  =  end  -  start;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
104	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -  start;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
105	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _origBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputBufferLen  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputBufferLen);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	52	None	replace
106	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  context  not  an  ARRAY,  but "+getMessage());	          _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
107	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
108	[BUG]  [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1);  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1);  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  +  1)  >=  start  +  1);  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputBufferStart);  [CE]  cannot  find  symbol  _inputBufferStart  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputBufferStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputBufferStart);	  _inputPtr    =    start    -    (_inputEnd    -    _inputBufferLen);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferStart	31	None	replace
111	[BUG]  [BUGGY]  ||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
112	[BUG]  [BUGGY]  ||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
113	[BUG]  [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
114	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
115	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");	  	compilable	  [FE]  JsonParseException  	56	1	add
116	[BUG]  [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");	  	compilable	  [FE]  JsonParseException  	56	1	add
117	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.. ");	  	compilable	  [FE]  JsonParseException  	56	1	add
118	[BUG]  [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.   ");  _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    _reportError( "Current  token(   "+_currInputProcessed+   ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.. ");	  	compilable	  [FE]  JsonParseException  	56	1	add
119	[BUG]  [BUGGY]  ||(_inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ||(_inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	||(_inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
120	[BUG]  [BUGGY]  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
121	[BUG]  [BUGGY]  ((  _inputPtr  =  start  +  1)  >>  _inputEnd);  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  =  start  +  1)  >>  _inputEnd);  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  =  start  +  1)  >>  _inputEnd);  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
122	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  =  end  -  1);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  =  end  -  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  =  end  -  1);	  _inputPtr    =    start    -    1;    ((    _inputPtr    =    start    -    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
123	[BUG]  [BUGGY]  ((  _inputPtr  =  start  -  1);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  =  start  -  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  =  start  -  1);	  _inputPtr    =    start    -    1;    ((    _inputPtr    =    start    -    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
124	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
125	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
126	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start,  end);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ",  start,  end);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
127	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  start,  end);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ",  start,  end);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
129	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
130	[BUG]  [BUGGY]  _inputPtr  =  _inputBuffer.read();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputBuffer.read();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  _inputBuffer.read();	  _inputPtr    =    in.read();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
131	[BUG]  [BUGGY]  _inputPtr  =  _inputStream.read();  [CE]  cannot  find  symbol  _inputStream  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  _inputStream.read();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  _inputStream.read();	  _inputPtr    =    in.read();    	non-compiled	[CE]  cannot  find  symbol  _inputStream	60	None	replace
132	[BUG]  [BUGGY]  _inputPtr  =  buf.read();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  buf.read();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  buf.read();	  _inputPtr    =    in.read();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
133	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input.  Please  try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
134	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input.  Please  try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  this  is  an  error. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input.  Please  check  that  this  is  an  error. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
136	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  this  is  an  error. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  this  is  an  error. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input.  Please  check  that  this  is  an  error. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
137	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;	  	non-compiled	[CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)	4	None	add
138	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;	  	non-compiled	[CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)	4	None	add
139	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  Integer  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  Integer  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    Integer  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;	  	non-compiled	[CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)	4	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  _inputPtr  =  start  -  1;  int  endPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    _inputPtr  =  start  -  1;  int  endPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
141	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  _inputPtr  =  start  -  1;  int  endPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  _inputPtr  =  start  -  1;  int  endPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    _inputPtr  =  start  -  1;  int  endPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
142	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  end;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd)?    _inputBufferLen    :    start;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
143	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  <  _inputEnd)?  _inputBufferLen  :  start;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  <  _inputEnd)?  _inputBufferLen  :  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end;  ((  _inputPtr  +  1)  <  _inputEnd)?  _inputBufferLen  :  start;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd)?    _inputBufferLen    :    start;    	non-compiled	[CE]  not  a  statement	39	None	replace
144	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd)?  _inputBufferLen  :  start;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd)?  _inputBufferLen  :  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd)?  _inputBufferLen  :  start;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd)?    _inputBufferLen    :    start;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
146	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
148	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
150	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    _inputPtr  =  end  -  1;  _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
151	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
152	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  end  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  end  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
153	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >>  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >>  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >>  _inputEnd)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
154	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
155	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
156	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
157	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
158	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _origBufferLen  =  start;  }  [CE]  unclosed  string  literal  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _origBufferLen  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _origBufferLen  =  start;  }	  	non-compiled	[CE]  unclosed  string  literal	23	None	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
160	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  ==  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  ==  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
162	[BUG]  [BUGGY]  if(start  ==  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  ==  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  ==  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
164	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
165	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    _inputPtr    =    end;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	14	None	replace
166	[BUG]  [BUGGY]  if(_inputPtr  >=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    _inputPtr    =    end;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	replace
167	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Can    not    feed    more    input.   ");    _reportError( "Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	43	1	add
168	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    _reportError( "Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	43	1	add
169	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Can    not    feed    more    input.   ");    if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }	  	compilable	  [FE]  JsonParseException  	43	1	add
170	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }	  	compilable	  [FE]  JsonParseException  	43	1	add
171	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]        JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    if(_origBufferLen  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	43	None	add
172	[BUG]  [BUGGY]  _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS,  starting  from  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS,  starting  from  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS,  starting  from  the  FEAT_MASK_ALLOWING_COMMENTS. ");	          _reportError(   "Current    token(   "+_ioContext.getMessage()    +   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
173	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  end;	  _inputPtr    =    end    -    start;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
174	[BUG]  [BUGGY]  _inputPtr  =  start  -  end;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  end;	  _inputPtr    =    end    -    start;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  -  start  +  1;	  _inputPtr    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
176	[BUG]  [BUGGY]  _inputPtr  =  end  -  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  start  +  1;	  _inputPtr    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  (_inputEnd  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  -  (_inputEnd  -  start);	  _inputPtr    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
178	[BUG]  [BUGGY]  _inputPtr  =  end  -  (_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  (_inputEnd  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  (_inputEnd  -  start);	  _inputPtr    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	18	1	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    2;    _inputPtr  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
180	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  _inputPtr  =  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    _inputPtr  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
181	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputBufferLen);  _inputPtr  =  start  +  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputBufferLen);  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  ==  _inputBufferLen);  _inputPtr  =  start  +  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
182	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _origBufferLen  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	8	None	add
183	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _origBufferLen  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	8	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
185	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
187	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  3;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  +  3;	  _inputPtr    =    start    +    2;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
189	[BUG]  [BUGGY]  _inputPtr  =  start  +  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  3;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  3;	  _inputPtr    =    start    +    2;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
191	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
193	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  start  -  1;  _inputPtr  =  end  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  start  -  1;  _inputPtr  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  end  -  1;  _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
195	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  _inputPtr  =  end  -  1;  _inputPtr  =  start  -  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    _inputPtr  =  end  -  1;  _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
197	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
198	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputRowStart)  >=  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	34	None	replace
199	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  -  _inputEnd)  >=  0);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	34	None	replace
200	[BUG]  [BUGGY]  ((  _inputPtr  -  start)  >=  _inputEnd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  -  start)  >=  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  -  start)  >=  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	34	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
202	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
204	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
205	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	add
206	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	1	add
207	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	non-compiled	[CE]  not  a  statement	41	None	add
208	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  +  4)  >=  _inputEnd)  {  _reportError( "Already  closed,  can  not  feed  more  input ");	  	non-compiled	[CE]  not  a  statement	41	None	add
209	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _inputPtr  =  start  +  4;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  +  4)  >=  _inputEnd)  {  _inputPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  +  4)  >=  _inputEnd)  {  _inputPtr  =  start  +  4;	  	non-compiled	[CE]  not  a  statement	41	None	add
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
211	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
212	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	add
213	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	add
214	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
215	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
216	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( ",Already  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
217	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    _reportError( ",Already  closed,  can  not  feed  more  input   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
218	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input   ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
219	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input   ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
220	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  1 ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  1 ",  start);	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
221	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  1 ",  start);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  1 ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  1 ",  start);	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
223	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  <  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  <  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
225	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  <  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  <  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  <  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
226	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	1	1	add
227	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  start)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	1	1	add
228	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _addError( "Can  not  feed  more  input.   ");  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _addError( "Can  not  feed  more  input.   ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    _addError( "Can  not  feed  more  input.   ");	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
229	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  null;  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  null;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  null;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	non-compiled	[CE]  incompatible  types	16	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
231	[BUG]  [BUGGY]  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputEnd  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputEnd  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
233	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputEnd  =  start;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputEnd  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputEnd  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
234	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
235	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _inputPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	51	1	replace
237	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _inputPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _inputPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputEnd);  _inputPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	51	1	replace
238	[BUG]  [BUGGY]  _inputPtr  =  input.read();  [CE]  cannot  find  symbol  input  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  input.read();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  input.read();	  _inputPtr    =    in.read();    	non-compiled	[CE]  cannot  find  symbol  input	60	None	replace
239	[BUG]  [BUGGY]  _inputPtr  =  start.read();  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start.read();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start.read();	  _inputPtr    =    in.read();    	non-compiled	[CE]  int  cannot  be  dereferenced	60	None	replace
240	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  int  endPtr  =  start  -  1;  [CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  startPtr  =  start  -  1;  int  endPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        int    startPtr    =    start    -    1;    int  startPtr  =  start  -  1;  int  endPtr  =  start  -  1;	  	non-compiled	[CE]  variable  startPtr  is  already  defined  in  method  feedInput(byte[],int,int)	4	None	add
241	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  int  end  =  _inputPtr.length  -  1;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  int  end  =  _inputPtr.length  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    int  end  =  _inputPtr.length  -  1;	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	19	None	add
242	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  +  1)  >=  end  -  1);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  +  1)  >=  end  -  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    ((  _inputPtr  +  1)  >=  end  -  1);	  	non-compiled	[CE]  not  a  statement	19	None	add
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  int  startPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    2;    int  startPtr  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
244	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  int  startPtr  =  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  int  startPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    int  startPtr  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
245	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  +  2)  >=  start  +  2);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  +  2)  >=  start  +  2);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  +  2)  >=  start  +  2);	  	non-compiled	[CE]  not  a  statement	8	None	add
246	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2);	  	non-compiled	[CE]  ')'  expected	8	None	add
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start;  _inputPtr  =  end;	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
248	[BUG]  [BUGGY]  _inputPtr  =  start;  _inputPtr  =  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  _inputPtr  =  end;	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
249	[BUG]  [BUGGY]  if(start  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
251	[BUG]  [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
253	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
254	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	25	1	add
255	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(start  <  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	25	1	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
257	[BUG]  [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
259	[BUG]  [BUGGY]  if(start  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
261	[BUG]  [BUGGY]  if(start  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
262	[BUG]  [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	47	None	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
264	[BUG]  [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
266	[BUG]  [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1));    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
267	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  _inputEnd)?  _inputBufferLen  :  start;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  _inputEnd)?  _inputBufferLen  :  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  _inputEnd)?  _inputBufferLen  :  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd)?    _inputBufferLen    :    start;    	non-compiled	[CE]  not  a  statement	39	None	replace
268	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1)&&(_inputEnd  <  =  end))  {  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1)&&(_inputEnd  <  =  end))  {  _inputPtr  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  start  +  1)&&(_inputEnd  <  =  end))  {  _inputPtr  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  start);	  _inputPtr    =    start    -    1;    ((    _inputPtr    =    start    -    1);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
270	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start);	  _inputPtr    =    start    -    1;    ((    _inputPtr    =    start    -    1);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
271	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _reportError( "Can  not  feed  more  input. ");  }  [CE]  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _reportError( "Can  not  feed  more  input. ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_origBufferLen  >  start)  {  _reportError( "Can  not  feed  more  input. ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  	24	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputEnd  -  start);  int  startPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
273	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  int  startPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  start);  int  startPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
274	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
275	[BUG]  [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
276	[BUG]  [BUGGY]  _inputPtr  =  end  -  start,  _origBufferLen;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start,  _origBufferLen;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  start,  _origBufferLen;	  _inputPtr    =    end    -    start;    	non-compiled	[CE]  ';'  expected	18	None	replace
277	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.n ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.n ");	          _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    	compilable	  [FE]  JsonParseException  	57	1	replace
278	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.n ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.n ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS.n ");	          _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    	compilable	  [FE]  JsonParseException  	57	1	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  +  2;	  _inputPtr    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
280	[BUG]  [BUGGY]  _inputPtr  =  end  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  +  2;	  _inputPtr    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
281	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");	  	non-compiled	[CE]  not  a  statement	10	None	add
282	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  >  0))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	non-compiled	[CE]  not  a  statement	10	None	add
283	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
284	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    ((  _inputPtr  +  1)  >=  end)  &&(_inputEnd  <  =  _inputEnd))  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
285	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_NAMES);  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_NAMES);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_NAMES);	          _reportError(   "Current    token(   "+_currInputProcessed+   ")not    an    instance    of    the    FEAT_MASK_ALLOW_UNQUOTED_NAMES);    	non-compiled	[CE]  unclosed  string  literal	59	None	replace
286	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)-  _inputEnd;  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)-  _inputEnd;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)-  _inputEnd;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	34	None	replace
287	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputStart  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputStart  -  _inputRowStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputStart  -  _inputRowStart);	  _inputPtr    =    start    -    1;    _inputPtr    =    start    -    2;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	7	None	replace
288	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
289	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
290	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
291	[BUG]  [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
293	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
295	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start  +  1)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start  +  1)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
297	[BUG]  [BUGGY]  if(_inputPtr  >=  start  +  1)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start  +  1)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start  +  1)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
298	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start  +  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Already  closed,  can  not  feed  more  input   ",  start  +  1);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
299	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start  +  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input   ",  start  +  1);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	46	1	replace
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
301	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
302	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _origBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	52	None	replace
303	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  ';'  expected	52	None	replace
304	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	52	None	replace
305	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _origBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	52	None	replace
306	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)  <  _inputEnd;  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	53	None	replace
307	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _iorigBufferLen  =  end  -  start;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)>  _inputEnd);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  ';'  expected	53	None	replace
308	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  _inputRowStart)+  start;  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	53	None	replace
309	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Unexpected  closed,  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Unexpected  closed,  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  closed  	22	1	replace
310	[BUG]  [BUGGY]  _reportError( "Unexpected  closed,  can  not  feed  more  input ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Unexpected  closed,  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Unexpected  closed,  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  closed  	22	1	replace
311	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }  [CE]  incomparable  types:  int  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    _inputPtr    =    end;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	14	None	replace
312	[BUG]  [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    _inputPtr    =    end;    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	14	None	replace
313	[BUG]  [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  null)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
314	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputEnd    =    start    +    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
315	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  end  +  1)  {  _inputEnd  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputEnd    =    start    +    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
317	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
318	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	61	1	add
319	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	61	1	add
320	[BUG]  [BUGGY]  if(start  ==  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  ==  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  ==  0)  {  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	15	None	replace
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
322	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
323	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >=  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  >=  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
324	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >=  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >=  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  >=  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
325	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
326	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  ==  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
327	[BUG]  [BUGGY]  _inputPtr  =  start  -  (end  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (end  -  _inputBufferLen);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (end  -  _inputBufferLen);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	30	None	replace
328	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");	          _reportError(   "Current    token(   "+_ioContext.getMessage()    +   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  int  startPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end    -    start;    int  startPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
330	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  int  startPtr  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  int  startPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    int  startPtr  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
331	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  int  end  =  _inputPtr.length();  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  int  end  =  _inputPtr.length();  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    int  end  =  _inputPtr.length();	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	17	None	add
332	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd);  _inputPtr  =  end;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd);  _inputPtr  =  end;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end;  ((  _inputPtr  +  start)  <  =  _inputEnd);  _inputPtr  =  end;	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
333	[BUG]  [BUGGY]  _reportError( "Current  token( "+FEAT_MASK_ALLOWING_COMMENTS.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [CE]  cannot  find  symbol  FEAT_MASK_ALLOWING_COMMENTS  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+FEAT_MASK_ALLOWING_COMMENTS.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+FEAT_MASK_ALLOWING_COMMENTS.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");	          _reportError(   "Current    token(   "+_ioContext.getMessage()    +   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS.   ");    	non-compiled	[CE]  cannot  find  symbol  FEAT_MASK_ALLOWING_COMMENTS	58	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputEnd  -  start);	  _inputPtr    =    start    -    1;    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
335	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  start);	  _inputPtr    =    start    -    1;    _inputPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
337	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
339	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    1;    if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
341	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	34	1	replace
342	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  ';'  expected	34	None	replace
343	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	34	None	replace
344	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
345	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
346	[BUG]  [BUGGY]  if(end  >  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  >  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  >  0)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    =    start    +    1)    >=    _inputEnd);    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
347	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    _inputPtr    =    start;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
348	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  ((  _inputPtr  =  start  +  4);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    ((  _inputPtr  =  start  +  4);	  	non-compiled	[CE]  ')'  expected	41	None	add
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  5;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    4;    _inputPtr  =  start  +  5;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
350	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  5;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  _inputPtr  =  start  +  5;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    _inputPtr  =  start  +  5;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  int  startPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    4;    int  startPtr  =  start  +  4;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
352	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  int  startPtr  =  start  +  4;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  4;  int  startPtr  =  start  +  4;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    4;    int  startPtr  =  start  +  4;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
354	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    start;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    start;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
356	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
357	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  start;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    start;    if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
358	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
359	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
360	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input.  Try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
361	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input.  Try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	44	1	replace
362	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  _inputEnd)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    >=    _inputEnd);    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
363	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _iorigBufferLen  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _iorigBufferLen	53	None	replace
364	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _iorigBufferLen  =  end  -  start;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  ';'  expected	53	None	replace
365	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _iorigBufferLen  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _iorigBufferLen	53	None	replace
366	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _iorigBufferLen  [FE]                    AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _iorigBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputPtr);  _iorigBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _iorigBufferLen    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _iorigBufferLen	53	None	replace
367	[BUG]  [BUGGY]  _inputPtr  =  end  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  (_inputEnd  -  _inputBufferLen);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowPtr);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	32	None	replace
368	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
369	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
370	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
371	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputBufferLen  =  end  -  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputBufferLen  =  end  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _inputBufferLen  =  end  -  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
372	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
373	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_origBufferLen  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
374	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
375	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
376	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	23	1	add
377	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  throw  new  JsonParseException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
378	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
379	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputBufferLen  =  end  -  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
380	[BUG]  [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputEnd  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;  if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputEnd  =  end  -  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        +        1;        _inputPtr    =    start    +    1;    if(end  <  =  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _inputEnd  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
381	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  _inputEnd)  {  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;  }	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    <    =    _inputEnd);    _inputPtr    =    start    -    1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
382	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  int  end  =  _inputPtr.length();  _inputPtr  =  end  +  1;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  +  1;  int  end  =  _inputPtr.length();  _inputPtr  =  end  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    +    1;    int  end  =  _inputPtr.length();  _inputPtr  =  end  +  1;	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	10	None	add
383	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  not  a  statement	33	None	replace
384	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  end)  >=  _inputEnd));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  end)  >=  _inputEnd));  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  1;  ((  _inputPtr  -  end)  >=  _inputEnd));	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd));    	non-compiled	[CE]  not  a  statement	33	None	replace
385	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
386	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  end)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  end)?  start  +  1  :  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  end)?  start  +  1  :  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    <    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
387	[BUG]  [BUGGY]  _inputPtr  =  start  -  (end  -  _inputStart);  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (end  -  _inputStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (end  -  _inputStart);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputStart	30	None	replace
388	[BUG]  [BUGGY]  _inputPtr  =  start  -  (end  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (end  -  _inputRowStart);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (end  -  _inputRowStart);	  _inputPtr    =    start    -    (_inputEnd    -    _inputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	30	None	replace
389	[BUG]  [BUGGY]  _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ",  FEAT_MASK_ALLOW_UNQUOTED_NAMES);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ",  FEAT_MASK_ALLOW_UNQUOTED_NAMES);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ",  FEAT_MASK_ALLOW_UNQUOTED_NAMES);	          _reportError(   "Current    token(   "+_ioContext.getMessage()    +   ")not    an    instance    of    the    FEAT_MASK_ALLOWING_COMMENTS   ");    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
390	[BUG]  [BUGGY]  if(_inputPtr!=  end)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  end)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  end)  {  _inputPtr  =  end;  _inputPtr  =  _inputPtr.length();  _inputPtr  =  end;  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    _inputPtr    =    end;    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
391	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd)?    _inputBufferLen    :    start;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
392	[BUG]  [BUGGY]  if(_inputPtr!=  end)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr!=  end)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr!=  end)  {  _inputPtr  =  end;  int  end  =  _inputPtr.length();  }	  _inputPtr    =    end;    int    end    =    _inputPtr.length();    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	64	None	replace
393	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  JsonParseException  	22	1	replace
394	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  JsonParseException  	22	1	replace
395	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Too  few  inputs  available:  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  JsonParseException  	22	1	replace
396	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [FE]  JsonParseException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  JsonParseException  	22	1	replace
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
398	[BUG]  [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  _inputPtr    =    start    +    1;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
400	[BUG]  [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(start  >=  0)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  else  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }	  _inputPtr    =    start    +    1;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
401	[BUG]  [BUGGY]  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
402	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  _inputEnd)  {  _inputPtr  =  start  +  1;  }  else  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    start)    >=    _inputEnd)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
403	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
404	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  _inputPtr    =    end;    ((    _inputPtr    +    end)    <    =    _inputEnd);    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
405	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  start;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	17	None	add
406	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  start;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    ((  _inputPtr  -  start)  >=  _inputBufferLen);  _inputPtr  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	17	None	add
407	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  end  -  start;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  end  -  start;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
408	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputLen);  _inputPtr  =  end  -  start;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  start;  ((  _inputPtr  -  start)  >=  _inputLen);  _inputPtr  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end    -    start;    ((  _inputPtr  -  start)  >=  _inputLen);  _inputPtr  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	17	None	add
409	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  =  start  -  1);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end  -  1;  ((  _inputPtr  =  start  -  1);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  1;  ((  _inputPtr  =  start  -  1);	  _inputPtr    =    start    -    1;    ((    _inputPtr    =    start    -    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  0;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
411	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  }  else  {  _inputPtr  =  0;  }	  _inputPtr    =    end;    ((    _inputPtr    +    1)    >=    end));    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
412	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  JsonParseException  	46	1	replace
413	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  start);  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  start);  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    	compilable	  [FE]  JsonParseException  	46	1	replace
414	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    _inputEnd)?    start    +    1    :    start    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
415	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  _inputEnd);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	non-compiled	[CE]  ';'  expected	52	None	replace
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  start);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
417	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  _origBufferLen  =  end  -  start;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start);  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start);  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
419	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _origBufferLen  =  end  -  start;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputPtr  -  start)-  1;  _origBufferLen  =  end  -  start;	  _inputPtr    =    start    -    1;    ((    _inputPtr    -    start)    >=    _inputEnd);    _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	52	1	replace
420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
421	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  <  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  <  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
423	[BUG]  [BUGGY]  if(_inputPtr  <  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  <  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  <  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  else  {  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
425	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  else  {  _inputPtr  =  0;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  end)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  else  {  _inputPtr  =  0;  }	  _inputPtr    =    end;    int    end    =    _inputPtr;    _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	15	1	replace
426	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_ioContext.isResourceManaged())  {  _reportError( "Can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Can    not    feed    more    input.   ");    if(_ioContext.isResourceManaged())  {  _reportError( "Can  not  feed  more  input.   ");  }	  	compilable	  [FE]  JsonParseException  	43	1	add
427	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_ioContext.isResourceManaged())  {  _reportError( "Can  not  feed  more  input.   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_ioContext.isResourceManaged())  {  _reportError( "Can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    if(_ioContext.isResourceManaged())  {  _reportError( "Can  not  feed  more  input.   ");  }	  	compilable	  [FE]  JsonParseException  	43	1	add
428	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_inputProcessed  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  if(_inputProcessed  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Can    not    feed    more    input.   ");    if(_inputProcessed  >  0)  {  _reportError( "Can  not  feed  more  input.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	43	None	add
429	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
430	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  >  end)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	45	1	add
431	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
432	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  else  {  throw  new  JsonParseException( " ");  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  start);  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  else  {  throw  new  JsonParseException( " ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    start);    if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  }  else  {  throw  new  JsonParseException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	int  startPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
434	[BUG]  [BUGGY]  int  startPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  int  startPtr  =  start  -  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	int  startPtr  =  start  -  1;	  _inputPtr    =    start    -    1;    int    startPtr    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
435	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  could  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Too  few  inputs  available:  could  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	24	1	replace
436	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  could  not  feed  more  input. ");  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError( "Too  few  inputs  available:  could  not  feed  more  input. ");  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Too  few  inputs  available:  could  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	24	1	replace
437	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  start  +  1))  {  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputPtr    =    start    +    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
438	[BUG]  [BUGGY]  int  end  =  _inputPtr.length;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  int  end  =  _inputPtr.length;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	int  end  =  _inputPtr.length;	  _inputPtr    =    end;    int    end    =    _inputPtr.length;    	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	63	None	replace
439	[BUG]  [BUGGY]  _inputPtr  =  end;  _inputEnd  =  _inputPtr.length;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  end;  _inputEnd  =  _inputPtr.length;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end;  _inputEnd  =  _inputPtr.length;	  _inputPtr    =    end;    int    end    =    _inputPtr.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
440	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(start  <  =  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
441	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
442	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(start  >  0)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	21	1	add
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
444	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
445	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        end;        _inputPtr    =    end;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
447	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  >  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  else  {  _inputEnd  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
448	[BUG]  [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    end;    _inputPtr  =  end;  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        end;        _inputPtr    =    end;    if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  end;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
449	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(end  <  =  0)  {  _inputPtr  =  end;  _inputPtr  =  0;  }	  _inputPtr    =    end;    _inputPtr    =    end;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
450	[BUG]  [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  ((  _inputPtr  +  1)  >=  start  +  1))  {  _inputEnd  =  start  +  1;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	((  _inputPtr  +  1)  >=  start  +  1))  {  _inputEnd  =  start  +  1;	  _inputPtr    =    start    +    1;    ((    _inputPtr    +    1)    >=    start    +    1)    {    _inputEnd    =    start    +    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
451	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputBufferLen);  _inputPtr  =  start  +  2;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputBufferLen);  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  >=  _inputBufferLen);  _inputPtr  =  start  +  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
452	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _inputPtr  =  start  +  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  >=  _inputEnd);  _inputPtr  =  start  +  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
453	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _inputPtr  =  start  +  2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr  =  start  +  2;  ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _inputPtr  =  start  +  2;  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    2;    ((  _inputPtr  =  start  +  2)  ==  _inputEnd);  _inputPtr  =  start  +  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
455	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
456	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  int  start  =  _inputPtr;  _inputPtr  =  start  +  1;  }  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  int  start  =  _inputPtr;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  int  start  =  _inputPtr;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	49	None	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
458	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	if(_inputPtr  >=  start)  {  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  }	  _inputPtr    =    start    +    1;    int    start    =    _inputPtr;    _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	49	1	replace
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
460	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  0)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
462	[BUG]  [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;      [BUGGY]  _inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;  if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }  [BUGGY]      _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr        =        start        -        1;        _inputPtr    =    start    -    2;    if(start  >  end)  {  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
