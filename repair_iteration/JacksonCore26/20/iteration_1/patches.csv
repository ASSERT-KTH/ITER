bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
2	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    _inputPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
3	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  =  start  -  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  =  start  -  1);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  =  start  -  1);	  	non-compiled	[CE]  ')'  expected	5	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
5	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  int  startPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    int  startPtr  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
7	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  _inputPtr  =  start  -  2;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    _inputPtr  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  2;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  +  2;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
9	[BUG]  [BUGGY]  _inputPtr  =  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  2;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  2;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  +  1;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
11	[BUG]  [BUGGY]  _inputPtr  =  end  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  +  1;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end;    _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
13	[BUG]  [BUGGY]  _inputPtr  =  end;  _inputPtr  =  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    _inputPtr  =  end;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
14	[BUG]  [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length();  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    int  end  =  _inputPtr.length();  _inputPtr  =  end;	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	1	None	add
15	[BUG]  [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr;  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    int  end  =  _inputPtr;  _inputPtr  =  end;	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	1	None	add
16	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    ((  _inputPtr  +  1)  >=  end));  _inputPtr  =  end;	  	non-compiled	[CE]  not  a  statement	1	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  -  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  -  start;	  _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
18	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  -  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  start;	  _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  end  -  1;	  _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
20	[BUG]  [BUGGY]  _inputPtr  =  end  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  end  -  1;	  _inputPtr    =    end;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
21	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Already  closed,  can  not  feed  more  input ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	8	1	replace
22	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	8	1	replace
23	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	8	1	replace
24	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	8	1	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
26	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    _inputPtr  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
27	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  =  start  +  1)  >=  _inputEnd);  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
28	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  1)  <  _inputEnd)?  start  +  1  :  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
29	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  1)  >=  _inputEnd)?  start  +  1  :  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
30	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputRowStart);	  _inputPtr    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	6	None	replace
31	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputBufferLen);	  _inputPtr    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	6	None	replace
32	[BUG]  [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowPtr);  [CE]  cannot  find  symbol  _inputRowPtr  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  (_inputEnd  -  _inputRowPtr);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  -  (_inputEnd  -  _inputRowPtr);	  _inputPtr    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputRowPtr	6	None	replace
33	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd));  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd));  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd));	  	non-compiled	[CE]  not  a  statement	5	None	add
34	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);	  	non-compiled	[CE]  not  a  statement	5	None	add
35	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  start)  >=  _inputEnd)  {  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
36	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputEnd  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputEnd  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
37	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  end;	  	non-compiled	[CE]  not  a  statement	1	None	add
38	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    ((  _inputPtr  +  end)  <  =  _inputEnd);  _inputPtr  =  end;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    ((  _inputPtr  +  end)  <  =  _inputEnd)?  _inputBufferLen  :  start;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  start;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    ((  _inputPtr  +  end)  >=  _inputEnd);  _inputPtr  =  start;	  	non-compiled	[CE]  not  a  statement	1	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  4;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr  =  start  +  4;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
42	[BUG]  [BUGGY]  _inputPtr  =  start  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  4;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  start  +  4;	  _inputPtr    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
43	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_reportError( "Can  not  feed  more  input. ");	      	compilable	  [FE]  JsonParseException  	8	1	replace
44	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_reportError( "Can  not  feed  more  input. ");	      	compilable	  [FE]  JsonParseException  	8	1	replace
45	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  start);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	        _reportError( "Already  closed,  can  not  feed  more  input ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	7	1	add
46	[BUG]  [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  start);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Already  closed,  can  not  feed  more  input ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	7	1	add
47	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  1)  >=  start  +  1));  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
48	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    ((  _inputPtr  +  1)  >=  start  +  1)  {  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
49	[BUG]  [BUGGY]  _inputPtr  =  start  +  1;  int  start  =  _inputPtr;  _inputPtr  =  start  +  1;  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  +  1;  int  start  =  _inputPtr;  _inputPtr  =  start  +  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    +    1;    int  start  =  _inputPtr;  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
50	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  start  -  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _inputPtr  =  start  -  1;	  	non-compiled	[CE]  not  a  statement	5	None	add
51	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  <  =  _inputEnd);  _inputPtr  =  start  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
52	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _origBufferLen  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	5	None	add
53	[BUG]  [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _iorigBufferLen  =  end  -  start;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  start  -  1;  ((  _inputPtr  -  start)  >=  _inputEnd);  _iorigBufferLen  =  end  -  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    start    -    1;    ((  _inputPtr  -  start)  >=  _inputEnd);  _iorigBufferLen  =  end  -  start;	  	non-compiled	[CE]  not  a  statement	5	None	add
54	[BUG]  [BUGGY]      _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ");  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS ");	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
55	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Current  context  not  an  ARRAY  but "+getMessage());	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
56	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	        _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");	  	compilable	  [FE]  JsonParseException  	7	1	add
57	[BUG]  [BUGGY]      _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");	  	compilable	  [FE]  JsonParseException  	7	1	add
58	[BUG]  [BUGGY]      _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Current  token( "+_ioContext.getMessage()  + ")not  an  instance  of  the  FEAT_MASK_ALLOWING_COMMENTS. ");	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
59	[BUG]  [BUGGY]      _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_UNQUOTED_NAMES);  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]      _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_UNQUOTED_NAMES);  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	        _reportError( "Current  token( "+_currInputProcessed+ ")not  an  instance  of  the  FEAT_MASK_ALLOW_UNQUOTED_NAMES);	  	non-compiled	[CE]  unclosed  string  literal	7	None	add
60	[BUG]  [BUGGY]  _inputPtr  =  in.read();  [CE]  cannot  find  symbol  in  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  in.read();  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr  =  in.read();	  _inputPtr    =    end;    	non-compiled	[CE]  cannot  find  symbol  in	2	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	add	_inputPtr    =    end;    _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
62	[BUG]  [BUGGY]  _inputPtr  =  end;  _inputPtr  =  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  _inputPtr  =  start;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    _inputPtr  =  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
63	[BUG]  [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length;  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length;  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    int  end  =  _inputPtr.length;	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	1	None	add
64	[BUG]  [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length();  [CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;    [BUGGY]  _inputPtr  =  end;  int  end  =  _inputPtr.length();  [BUGGY]    _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	109	109	1	replace	_inputPtr    =    end;    int  end  =  _inputPtr.length();	  	non-compiled	[CE]  variable  end  is  already  defined  in  method  feedInput(byte[],int,int)	1	None	add
