bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
2	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
4	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
6	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
8	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _origBufferLen  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
9	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
10	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
11	[BUG]  [BUGGY]  _inputStart  =  end  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputStart  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputStart  =  end  -  start;	  _inputEnd    =    end    -    start;    _inputStart    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	66	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
13	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
15	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
16	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputStart  =  end  -  start;  _inputEnd  =  start  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputStart  =  end  -  start;  _inputEnd  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputStart  =  end  -  start;  _inputEnd  =  start  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	3	None	add
17	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  _inputStart  =  start  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  _inputStart  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    _inputEnd  =  end  -  start;  _inputStart  =  start  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	3	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputPtr  =  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
19	[BUG]  [BUGGY]  _inputPtr  =  start;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputPtr  =  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
20	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputEnd  -  _inputRowStart);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	59	None	replace
21	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtrStart);  [CE]  cannot  find  symbol  _inputPtrStart  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputEnd  -  _inputPtrStart);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  find  symbol  _inputPtrStart	59	None	replace
22	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
23	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
24	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  >=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  >=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  >=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
25	[BUG]  [BUGGY]  _icUTF8  +=  start;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  +=  start;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	72	None	replace
26	[BUG]  [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  find  symbol  icUTF8  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	83	None	replace
27	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  find  symbol  icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	83	None	replace
28	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (_inputEnd  -  _inputRowStart);	  _inputEnd    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	8	None	replace
29	[BUG]  [BUGGY]  _inputStart  =  end  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputStart  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputStart  =  end  +  1;	  _inputEnd    =    end    +    1;    _inputStart    =    end    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	44	None	replace
30	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  _inputStart  =  end  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  _inputStart  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  1;  _inputStart  =  end  +  1;	  _inputEnd    =    end    +    1;    _inputStart    =    end    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	44	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
32	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
33	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputStart  -  _inputPtr);  [CE]  cannot  find  symbol  _inputStart  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputStart  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputStart  -  _inputPtr);	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	53	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
35	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  *  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputEnd  *  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
37	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  *  _inputPtr);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  *  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputEnd  *  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	53	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    end;    _inputEnd  =  start  -  end;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
39	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  -  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    end;    _inputEnd  =  start  -  end;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    end;    _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
41	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  end  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    end;    _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
42	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  begin  -  end;  [CE]  cannot  find  symbol  begin  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  begin  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    end;    _inputEnd  =  begin  -  end;	  	non-compiled	[CE]  cannot  find  symbol  begin	22	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  +  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    end;    _inputEnd  =  start  +  end;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
44	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  +  end;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputEnd  =  start  +  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    end;    _inputEnd  =  start  +  end;	  	compilable	  [FE]  AssertionFailedError  	22	1	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
46	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
48	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
49	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputStart  =  end  -  1;  _inputEnd  =  start  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputStart  =  end  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputStart  =  end  -  1;  _inputEnd  =  start  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	13	None	add
50	[BUG]  [BUGGY]  _icUTF8  =  0;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  0;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	74	None	replace
51	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
52	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
53	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  0;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
54	[BUG]  [BUGGY]  ||(_inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(_inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(_inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
55	[BUG]  [BUGGY]  ||(_inputEnd  +  1)  >=  end);  _inputEnd  =  end  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(_inputEnd  +  1)  >=  end);  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(_inputEnd  +  1)  >=  end);  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
57	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
59	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
60	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputStart  =  end  -  start;  _inputEnd  =  end  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputStart  =  end  -  start;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputStart  =  end  -  start;  _inputEnd  =  end  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	1	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  end;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
62	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end;  _inputEnd  =  end  -  start;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end;  _inputEnd  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  end;  _inputEnd  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  -  (_inputPtr  -  _inputEnd);	  _inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	90	1	replace
64	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputPtr  -  _inputEnd);	  _inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	90	1	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
66	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
68	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
69	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputStart  =  end  +  1;  _inputEnd  =  end  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputStart  =  end  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputStart  =  end  +  1;  _inputEnd  =  end  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	40	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
71	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end;  _inputEnd  =  end  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end;  _inputEnd  =  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -(_inputEnd  -  _inputPtr);	  _origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	54	1	replace
73	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  _inputPtr);	  _origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	54	1	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  -(_inputPtr  -  _inputEnd);	  _origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	54	1	replace
75	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputPtr  -  _inputEnd);	  _origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	54	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
77	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
79	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
81	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
82	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputStart  =  end  -  1;  _inputEnd  =  end  -  2;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputStart  =  end  -  1;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputStart  =  end  -  1;  _inputEnd  =  end  -  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	16	None	add
83	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);	  _inputEnd    =    start    -    end;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	23	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -(_inputPtr  -  _currInputRowStart);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	37	1	replace
85	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputPtr  -  _currInputRowStart);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	37	1	replace
86	[BUG]  [BUGGY]  ||(_inputEnd  +  1)  >=  _inputBufferLen));  _inputEnd  =  end  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(_inputEnd  +  1)  >=  _inputBufferLen));  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(_inputEnd  +  1)  >=  _inputBufferLen));  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen));    _inputEnd    =    end    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
87	[BUG]  [BUGGY]  ||(_inputEnd  +  1)  >=  end));  _inputEnd  =  end  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(_inputEnd  +  1)  >=  end));  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(_inputEnd  +  1)  >=  end));  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen));    _inputEnd    =    end    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  (_inputEnd  -  _origBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -  (_inputEnd  -  _origBufferLen);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
89	[BUG]  [BUGGY]  _origBufferLen  =  end  -  (_inputEnd  -  _origBufferLen);  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  (_inputEnd  -  _origBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -  (_inputEnd  -  _origBufferLen);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
90	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  _inputRowStart);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	63	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  +  2;	  _inputEnd    =    end    +    2;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
92	[BUG]  [BUGGY]  _inputEnd  =  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  2;	  _inputEnd    =    end    +    2;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
93	[BUG]  [BUGGY]  _inputStart  =  start;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputStart  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputStart  =  start;	  _inputEnd    =    start;    _inputStart    =    start;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	26	None	replace
94	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputProcessed);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputProcessed);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  _currInputProcessed);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputPtr);    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  end  +  1;	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
96	[BUG]  [BUGGY]  _inputEnd  =  start  -  end  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  end  +  1;	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
97	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1L;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1L;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  start  +  1L;	  _inputEnd    =    end    -    start    +    1;    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  -(_inputPtr  -  _currInputRowStart);	  _origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
99	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputPtr  -  _currInputRowStart);	  _origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
101	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
103	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
104	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputStart  =  end  +  1;  _inputEnd  =  start  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputStart  =  end  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputStart  =  end  +  1;  _inputEnd  =  start  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	42	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  end;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
106	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  end;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
107	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_reportUnsupportedOperation();	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  UnsupportedOperationException  	65	1	replace
108	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_reportUnsupportedOperation();	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  UnsupportedOperationException  	65	1	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputPtr  =  end  -  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
110	[BUG]  [BUGGY]  _inputPtr  =  end  -  start;  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputPtr  =  end  -  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
111	[BUG]  [BUGGY]  _icUTF8  =  false;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  false;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  false;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	73	None	replace
112	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
113	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
114	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  =  false;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  +  3;	  _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
116	[BUG]  [BUGGY]  _inputEnd  =  start  +  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  3;	  _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
118	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
119	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputPtrStart);  [CE]  cannot  find  symbol  _currInputPtrStart  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  -  _currInputPtrStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputPtrStart	36	None	add
120	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	36	None	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
122	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  _inputPtr;	  _inputEnd    =    end    -    _inputPtr;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
124	[BUG]  [BUGGY]  _inputEnd  =  start  -  _inputPtr;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  _inputPtr;	  _inputEnd    =    end    -    _inputPtr;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
126	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
128	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
130	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
131	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
132	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  end  -  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
134	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputPtr;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  end  -  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  start  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  start  -  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
136	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  start  -  _inputPtr;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  start  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  start  -  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
137	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputBufferLen;  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputBufferLen;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  end  -  _inputBufferLen;	  	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	18	None	add
138	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputPtr.length;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputPtr.length;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  end  -  _inputPtr.length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	add
139	[BUG]  [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||(end  <  0  &&  _icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES))  {  _icUTF8  +=  start;	          if(end    <    =    0)    {    if(_icUTF8!=    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  +  1;	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
141	[BUG]  [BUGGY]  _origBufferLen  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  +  1;	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    1;    _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
143	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    1;    _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
145	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    1;    _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
147	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
148	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  _inputStart  =  start  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputStart  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    _inputStart  =  start  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	7	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	89	1	add
150	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	89	1	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	89	1	add
152	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	89	1	add
153	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputStart  -  _inputPtr);  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputStart  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  end  -  (_inputStart  -  _inputPtr);	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	89	None	add
154	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);	  	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	89	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    +    2;    _inputEnd  =  end  +  2;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
156	[BUG]  [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    +    2;    _inputEnd  =  end  +  2;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    +    2;    _inputEnd  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
158	[BUG]  [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  start  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    +    2;    _inputEnd  =  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    +    2;    _inputEnd  =  end  +  3;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
160	[BUG]  [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  3;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputEnd  =  end  +  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    +    2;    _inputEnd  =  end  +  3;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
161	[BUG]  [BUGGY]  _inputEnd  =  end  +  2;  _inputStart  =  end  +  2;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  2;  _inputStart  =  end  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    +    2;    _inputStart  =  end  +  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	32	None	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBufferLen    =    	compilable	  [FE]  AssertionFailedError  	69	1	replace
163	[BUG]  [BUGGY]  _origBufferLen  =  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBufferLen    =    	compilable	  [FE]  AssertionFailedError  	69	1	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  buf.length  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  buf.length  -  start;	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBufferLen    =    	compilable	  [FE]  AssertionFailedError  	69	1	replace
165	[BUG]  [BUGGY]  _origBufferLen  =  buf.length  -  start;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  buf.length  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  buf.length  -  start;	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBufferLen    =    	compilable	  [FE]  AssertionFailedError  	69	1	replace
166	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
167	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
168	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
169	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
170	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
171	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
172	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
173	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  _origBufferLen  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    _origBufferLen  =  end  -  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  end,  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  end,  _inputPtr);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
175	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  end,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  end,  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  end,  _inputPtr);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
177	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
178	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputEnd  -  _inputBufferLen);	  	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	47	None	add
179	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputStart  -  _inputPtr);  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  start  -  (_inputStart  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    _inputEnd  =  start  -  (_inputStart  -  _inputPtr);	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	47	None	add
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
181	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
183	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
184	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputStart  =  end  -  1;  _inputEnd  =  end  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputStart  =  end  -  1;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputStart  =  end  -  1;  _inputEnd  =  end  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	11	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
186	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -    start;    _origBufferLen  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
188	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    _origBufferLen  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -    start;    _origBufferLen  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
190	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  start  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  start  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    _origBufferLen  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
191	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  begin;  [CE]  cannot  find  symbol  begin  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  begin;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    _origBufferLen  =  end  -  begin;	  	non-compiled	[CE]  cannot  find  symbol  begin	34	None	add
192	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    _origBufferLen  =  end  -  start);	  	non-compiled	[CE]  ';'  expected	34	None	add
193	[BUG]  [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [CE]  cannot  find  symbol  icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	86	None	replace
194	[BUG]  [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_YAML_COMMENTS;  [CE]  cannot  find  symbol  icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_YAML_COMMENTS;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_YAML_COMMENTS;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	86	None	replace
195	[BUG]  [BUGGY]  _iorigBufferLen  =  end  -  start;  [CE]  cannot  find  symbol  _iorigBufferLen  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _iorigBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_iorigBufferLen  =  end  -  start;	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  find  symbol  _iorigBufferLen	80	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
197	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
199	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
201	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
203	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
205	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
206	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputEnd  -  _inputBufferLen);	  _inputEnd    =    end    -    (_inputEnd    -    _inputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	91	None	replace
207	[BUG]  [BUGGY]  _inputStart  =  end  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputStart  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputStart  =  end  -  1;	  _inputEnd    =    end    -    1;    _inputStart    =    end    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	15	None	replace
208	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  _inputStart  =  end  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  _inputStart  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  1;  _inputStart  =  end  -  1;	  _inputEnd    =    end    -    1;    _inputStart    =    end    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	15	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    _inputEnd  =  start;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
210	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;  _inputEnd  =  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    _inputEnd  =  start;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
211	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputStart  =  start;  _inputEnd  =  end;  [CE]  cannot  find  symbol  _inputStart  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputStart  =  start;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    _inputStart  =  start;  _inputEnd  =  end;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	27	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  end;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    _inputEnd  =  end;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
213	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  end;  _inputEnd  =  end;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  end;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    _inputEnd  =  end;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
214	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;  _inputStart  =  end;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;  _inputStart  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    _inputEnd  =  start;  _inputStart  =  end;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	27	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  end  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  end  -  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
216	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  end  -  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  end  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  end  -  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  -  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
218	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  -  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
219	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	76	None	replace
220	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	76	None	replace
221	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _inputPtr  =  start;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _inputPtr  =  start;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	76	None	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  start  +(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputPtr  =  start  +(_inputEnd  -  _inputPtr);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
223	[BUG]  [BUGGY]  _inputPtr  =  start  +(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  start  +(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputPtr  =  start  +(_inputEnd  -  _inputPtr);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputPtr  =  end;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
225	[BUG]  [BUGGY]  _inputPtr  =  end;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputPtr  =  end;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputPtr  =  end  -(_inputEnd  -  _inputPtr);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
227	[BUG]  [BUGGY]  _inputPtr  =  end  -(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputPtr  =  end  -(_inputEnd  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputPtr  =  end  -(_inputEnd  -  _inputPtr);	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	compilable	  [FE]  AssertionFailedError  	77	1	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    start    +    1;    _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
229	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
230	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd));  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd));  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  _inputPtr)  <  _inputEnd));  _inputEnd  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
231	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd);  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd);  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  _inputPtr)  <  _inputEnd);  _inputEnd  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
232	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd)?  start  +  1  :  start;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  _inputPtr)  <  _inputEnd)?  start  +  1  :  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  _inputPtr)  <  _inputEnd)?  start  +  1  :  start;	  	non-compiled	[CE]  not  a  statement	30	None	add
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -(_inputPtr  -  _inputEnd);	          _origBufferLen    =    end    -(_inputEnd    -    _inputPtrStart);    	compilable	  [FE]  AssertionFailedError  	49	1	replace
234	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputPtr  -  _inputEnd);	          _origBufferLen    =    end    -(_inputEnd    -    _inputPtrStart);    	compilable	  [FE]  AssertionFailedError  	49	1	replace
235	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowLen);  [CE]  cannot  find  symbol  _currInputRowLen  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  _currInputRowLen);	  _origBufferLen    =    start    -(_inputEnd    -    _currInputRowLen);    	non-compiled	[CE]  cannot  find  symbol  _currInputRowLen	50	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -  _inputPtr;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
237	[BUG]  [BUGGY]  _origBufferLen  =  end  -  _inputPtr;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -  _inputPtr;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -  start  +  1;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
239	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -  start  +  1;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -  1;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
241	[BUG]  [BUGGY]  _origBufferLen  =  end  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -  1;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
243	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
245	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  end;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputEnd  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  end;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
246	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputStart  =  start;  _inputEnd  =  start;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputStart  =  start;  _inputEnd  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    _inputStart  =  start;  _inputEnd  =  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	24	None	add
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  end;  _inputEnd  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
248	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  end;  _inputEnd  =  start;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  end;  _inputEnd  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  end;  _inputEnd  =  start;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
249	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
250	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
251	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
252	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
254	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
256	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
258	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
259	[BUG]  [BUGGY]  _inputEnd  =  end  -  start);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  start);	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start);    	non-compiled	[CE]  ';'  expected	6	None	replace
260	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
261	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
262	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
263	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
264	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
265	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  end;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  end;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
266	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
267	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
268	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
269	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
270	[BUG]  [BUGGY]  _inputEnd  =  start  -  (end  -  _inputPtrStart);  [CE]  cannot  find  symbol  _inputPtrStart  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (end  -  _inputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (end  -  _inputPtrStart);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputPtrStart	46	None	replace
271	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferStart);  [CE]  cannot  find  symbol  _inputBufferStart  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  _inputBufferStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputEnd  -  _inputBufferStart);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferStart	46	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
273	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
274	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);  [CE]  cannot  find  symbol  _currInputPtrStart  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputPtrStart	51	None	add
275	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputStart  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputStart  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputStart  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	51	None	add
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
277	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
279	[BUG]  [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    2;    _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
281	[BUG]  [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  start  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    2;    _inputEnd  =  start  -  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  3;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
283	[BUG]  [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  3;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  3;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
285	[BUG]  [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  (_inputPtr  -  _inputEnd);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
287	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (_inputPtr  -  _inputEnd);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
289	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
290	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  0,  _inputBuffer,  start,  _inputPtr,  end);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  0,  _inputBuffer,  start,  _inputPtr,  end);  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  0,  _inputBuffer,  start,  _inputPtr,  end);  }	  _inputEnd    =    start;    _inputEnd    =    end;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	28	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr!=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(_inputPtr!=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
292	[BUG]  [BUGGY]  if(_inputPtr!=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr!=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr!=  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
293	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	non-compiled	[CE]  ';'  expected	17	None	replace
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
295	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
296	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _input  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _input  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _input	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	non-compiled	[CE]  ';'  expected	17	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  (_inputEnd  -  _inputEnd);	  _inputEnd    =    start    -    end;    	compilable	  [FE]  AssertionFailedError  	23	1	replace
298	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (_inputEnd  -  _inputEnd);	  _inputEnd    =    start    -    end;    	compilable	  [FE]  AssertionFailedError  	23	1	replace
299	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _i  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _i  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _i	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	80	None	replace
300	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _io  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _io  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _io	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	80	None	replace
301	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  [CE]  incomparable  types:  int[]  and  int  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  incomparable  types:  int[]  and  int	80	None	replace
302	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputStart  =  start  -  end;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputStart  =  start  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    end;    _inputStart  =  start  -  end;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	22	None	add
303	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  _inputStart  =  end  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  _inputStart  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  end;  _inputStart  =  end  -  start;	  _inputEnd    =    end    -    start;    _inputStart    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	66	None	replace
304	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	75	None	replace
305	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	75	None	replace
306	[BUG]  [BUGGY]  if(_icUTF8!=  FEAT_MASK_ALLOW_NAMES)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  find  symbol  FEAT_MASK_ALLOW_NAMES  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  FEAT_MASK_ALLOW_NAMES)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  FEAT_MASK_ALLOW_NAMES)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  find  symbol  FEAT_MASK_ALLOW_NAMES	75	None	replace
307	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  _inputEnd    =    start;    _inputEnd    =    start;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  _inputEnd    =    start;    _inputEnd    =    start;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
309	[BUG]  [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  _inputEnd    =    start;    _inputEnd    =    start;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
310	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputProcessed;  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  end  -  _inputProcessed;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  end  -  _inputProcessed;	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	18	None	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
312	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
313	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
314	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
315	[BUG]  [BUGGY]  _inputEnd  =  end;  _inputStart  =  start;  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end;  _inputStart  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end;  _inputStart  =  start;	  _inputEnd    =    start;    _inputStart    =    start;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	26	None	replace
316	[BUG]  [BUGGY]  _inputEnd  =  start;  _inputStart  =  end;  [CE]  cannot  find  symbol  _inputStart  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start;  _inputStart  =  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start;  _inputStart  =  end;	  _inputEnd    =    start;    _inputStart    =    start;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	26	None	replace
317	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
318	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
319	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
320	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
321	[BUG]  [BUGGY]  _inputEnd  =  begin;  [CE]  cannot  find  symbol  begin  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  begin;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  begin;	  _inputEnd    =    start;    _inputEnd    =    begin;    	non-compiled	[CE]  cannot  find  symbol  begin	29	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  4;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  +  4;	  _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
323	[BUG]  [BUGGY]  _inputEnd  =  start  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  4;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  4;	  _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
324	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  _inputStart  =  end  -  start;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  _inputStart  =  end  -  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  _inputStart  =  end  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	1	None	add
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  end  -(_inputEnd  -  start);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputPtrStart);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
326	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  start);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputPtrStart);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
327	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
328	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
329	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
331	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
332	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
333	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
335	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
337	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
338	[BUG]  [BUGGY]  (end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  (end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	(end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8!=    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  not  a  statement	71	None	replace
339	[BUG]  [BUGGY]  ||  end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8!=    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
340	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  +=  start;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  +=  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  +=  start;	          if(end    <    =    0)    {    if(_icUTF8!=    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
341	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputPtrStart);  _  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputPtrStart);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputPtrStart);  _	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    	compilable	  [FE]  AssertionFailedError  	83	1	replace
343	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    	compilable	  [FE]  AssertionFailedError  	83	1	replace
344	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
345	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
346	[BUG]  [BUGGY]  (end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  (end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	(end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  not  a  statement	74	None	replace
347	[BUG]  [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  0;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
348	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  =  0;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
349	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputStart  -  _currInputRowStart);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputStart	37	None	replace
350	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBufferLen    =    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	69	None	replace
351	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [CE]  cannot  find  symbol  icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	86	None	replace
352	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _currInputProcessed    +=    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	82	None	replace
353	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	non-compiled	[CE]  ';'  expected	84	None	add
354	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }	  	non-compiled	[CE]  ';'  expected	84	None	add
355	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  	non-compiled	[CE]  ';'  expected	84	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
357	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
358	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  not  a  statement	55	None	replace
359	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen);  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  not  a  statement	55	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
361	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
362	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputEnd  =  start  -  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputEnd  =  start  -  1;	  	non-compiled	[CE]  not  a  statement	7	None	add
363	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  -  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  -  1;	  	non-compiled	[CE]  not  a  statement	7	None	add
364	[BUG]  [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  -  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    -    1;    ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  -  1;	  	non-compiled	[CE]  not  a  statement	7	None	add
365	[BUG]  [BUGGY]  if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  ';'  expected	76	None	replace
366	[BUG]  [BUGGY]  if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  null)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  ';'  expected	76	None	replace
367	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  -  _inputProcessed);  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  _origBufferLen  =  start  -(_inputEnd  -  _inputProcessed);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    _origBufferLen  =  start  -(_inputEnd  -  _inputProcessed);	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	53	None	add
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  *  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
369	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  end  -(_inputEnd  *  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  end  -(_inputEnd  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
371	[BUG]  [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
373	[BUG]  [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  start)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
374	[BUG]  [BUGGY]  (end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  (end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	(end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
375	[BUG]  [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
376	[BUG]  [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(end  -  _currInputPtr);	          _origBufferLen    =    start    -(_inputEnd    -    _currInputPtr);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	57	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  -(end  -  _currInputRowStart);	          _origBufferLen    =    start    -(_inputEnd    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
378	[BUG]  [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(end  -  _currInputRowStart);	          _origBufferLen    =    start    -(_inputEnd    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
379	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  _inputStart  =  start  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  _inputEnd  =  end  -  1;  _inputStart  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    _inputEnd  =  end  -  1;  _inputStart  =  start  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	13	None	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen));    _inputEnd    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
381	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >=  end)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen));    _inputEnd    =    end    +    1;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
382	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _inputBufferLen  =  start  +  1;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _inputBufferLen  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _inputBufferLen  =  start  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen));    _inputEnd    =    end    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	56	None	replace
383	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputStart  =  start;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  _inputEnd  =  start;  _inputStart  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    _inputEnd  =  start;  _inputStart  =  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	24	None	add
384	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	non-compiled	[CE]  ';'  expected	77	None	replace
385	[BUG]  [BUGGY]  if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	non-compiled	[CE]  ';'  expected	77	None	replace
386	[BUG]  [BUGGY]  if(_icUTF8  ==  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  ')')  {  _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	non-compiled	[CE]  ';'  expected	77	None	replace
387	[BUG]  [BUGGY]  _inputEnd  =  end  -  begin;  [CE]  cannot  find  symbol  begin  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  begin;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  begin;	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    begin;    	non-compiled	[CE]  cannot  find  symbol  begin	5	None	replace
388	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
390	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
391	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  _inputStart  =  start  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  _inputEnd  =  end  +  1;  _inputStart  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    _inputEnd  =  end  +  1;  _inputStart  =  start  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	42	None	add
392	[BUG]  [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  false;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _icUTF8  =  false;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
394	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
395	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
396	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
397	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
399	[BUG]  [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
400	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  _inputPtr);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  _inputPtr);  _inputPtr  =  start;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	replace
401	[BUG]  [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  _inputPtr);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  _inputPtr);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  _inputPtr);  _inputPtr  =  start;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	replace
402	[BUG]  [BUGGY]  if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  ')')  {  _inputEnd  =  start;  if(start  >  end)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _    	non-compiled	[CE]  ';'  expected	78	None	replace
403	[BUG]  [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputRowLen);  [CE]  cannot  find  symbol  _currInputRowLen  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(end  -  _currInputRowLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(end  -  _currInputRowLen);	  _origBufferLen    =    start    -(_inputEnd    -    _currInputRowLen);    	non-compiled	[CE]  cannot  find  symbol  _currInputRowLen	50	None	replace
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  -  1;	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
405	[BUG]  [BUGGY]  _origBufferLen  =  start  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -  1;	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
407	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
408	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
409	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  _	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
410	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    start    -    start;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
411	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    start    -    start;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
413	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
415	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
417	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  >  0)  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    if(end  >  0)  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
418	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
419	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
420	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
421	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
422	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
423	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
424	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
425	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
427	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _origBufferLen  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _origBufferLen  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
429	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _origBufferLen  =  start;  _origBufferLen  =  end;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _origBufferLen  =  start;  _origBufferLen  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _origBufferLen  =  start;  _origBufferLen  =  end;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
430	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	add
431	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	add
432	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	add
433	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  >  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	add
434	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
435	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
436	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
437	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  <  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
438	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
439	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
440	[BUG]  [BUGGY]  _inputEnd  =  end  -  2;  _inputStart  =  end  -  2;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  2;  _inputStart  =  end  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    2;    _inputStart  =  end  -  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	9	None	add
441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  -  start  +  2;	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
442	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  start  +  2;	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  -  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
444	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  end  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  -  end  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  -  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
446	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
448	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
449	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputPtr  -  _inputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputPtr  -  _inputRowStart);	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	68	None	replace
450	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_origBufferLen  =  start  -  end;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
451	[BUG]  [BUGGY]  _origBufferLen  =  start  -  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -  end;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -  end;	  _origBufferLen    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  2;	  _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
453	[BUG]  [BUGGY]  _inputEnd  =  start  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  2;	  _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	61	1	replace
455	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  AssertionFailedError  	61	1	replace
456	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
457	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
458	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
459	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
460	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  start)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
461	[BUG]  [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  start)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  start)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    start    -    1;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
462	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    start    -    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
463	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  else  {  _origBufferLen  =  start  +  1;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
464	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _origBufferLen  =  end  +  1;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
465	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  end  +  1;  if(end  <  1)  {  _origBufferLen  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
466	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _origBufferLen  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
467	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
468	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
469	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _	  	non-compiled	[CE]  ';'  expected	58	None	add
470	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
471	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(start  >  end)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
472	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    return;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	81	None	replace
473	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    return;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	81	None	replace
474	[BUG]  [BUGGY]  _inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  end;  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    return;    }    	non-compiled	[CE]  ';'  expected	81	None	replace
475	[BUG]  [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputRowEnd);  [CE]  cannot  find  symbol  _inputRowEnd  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (_inputEnd  -  _inputRowEnd);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (_inputEnd  -  _inputRowEnd);	  _inputEnd    =    start    -    1;    	non-compiled	[CE]  cannot  find  symbol  _inputRowEnd	8	None	replace
476	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
477	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  buf.length  :  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  buf.length  :  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  +  1)  >=  _inputBufferLen)?  buf.length  :  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
478	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  +  1)  >=  _inputBufferLen)?  start  +  1  :  start;	  	non-compiled	[CE]  not  a  statement	30	None	add
479	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputColumnStart);  [CE]  cannot  find  symbol  _currInputColumnStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  start  -(_inputEnd  -  _currInputColumnStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  start  -(_inputEnd  -  _currInputColumnStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputColumnStart	51	None	add
480	[BUG]  [BUGGY]  _origBufferLen  =  end  -(start  -  _inputPtrStart);  [CE]  cannot  find  symbol  _inputPtrStart  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(start  -  _inputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(start  -  _inputPtrStart);	          _origBufferLen    =    end    -(_inputEnd    -    _inputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputPtrStart	49	None	replace
481	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _o	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBuffer    	non-compiled	[CE]  ';'  expected	70	None	replace
482	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBuffer    	non-compiled	[CE]  ';'  expected	70	None	replace
483	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBuffer    	non-compiled	[CE]  ';'  expected	70	None	replace
484	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBuffer    	non-compiled	[CE]  ';'  expected	70	None	replace
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  3;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
486	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  3;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    _inputEnd  =  end  -  1;  _inputEnd  =  end  -  3;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
488	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
489	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
490	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
491	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
492	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start;  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
493	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start  +  1);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  -  (_inputEnd  -  start  +  1);	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
495	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start  +  1);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputEnd  -  start  +  1);	  _inputEnd    =    end    -    start    +    1;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
496	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  1;  }	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
497	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
498	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
499	[BUG]  [BUGGY]  ||  end  <  =  0)  {  _icUTF8  +=  start;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  =  0)  {  _icUTF8  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  =  0)  {  _icUTF8  +=  start;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
500	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);  [CE]  cannot  find  symbol  _currInputPtrStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  start  -(_inputEnd  -  _currInputPtrStart);	  _origBufferLen    =    start    -(_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtrStart	52	None	replace
501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
502	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
503	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
504	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	45	1	replace
505	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }  [CE]  incomparable  types:  int[]  and  int  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _    	non-compiled	[CE]  incomparable  types:  int[]  and  int	78	None	replace
506	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _    	non-compiled	[CE]  ')'  expected	78	None	replace
507	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  if(end  <  =  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  <  =  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    if(end  <  =  0)  {  _origBufferLen  =  end  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
508	[BUG]  [BUGGY]  _origBufferLen  =  end  -  start;  if(end  <  =  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -  start;  if(end  <  =  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -    start;    if(end  <  =  0)  {  _origBufferLen  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
509	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -(_inputPtr  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  -(_inputPtr  -  start);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
511	[BUG]  [BUGGY]  _inputEnd  =  end  -(_inputPtr  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -(_inputPtr  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -(_inputPtr  -  start);	  _inputEnd    =    start    -    (_inputEnd    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
512	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
513	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
514	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
515	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
516	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
517	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	1	add
518	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
519	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  0;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
520	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  =  0;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
521	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
522	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  end;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  start,  _inputBuffer,  0,  start);  _inputPtr  =  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  end;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	add
523	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _inputEnd  =  end  -  start;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrLen);  _inputEnd  =  end  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	2	None	replace
524	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrStart);  _inputEnd  =  end  -  start;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrStart);  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtrStart);  _inputEnd  =  end  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	2	None	replace
525	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  start;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _inputBufferLen  =  start  -  (_inputEnd  -  _inputPtr);  _inputEnd  =  end  -  start;  }	  _inputEnd    =    end    -    start;    _inputEnd    =    end    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	2	None	replace
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
527	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  1;  _inputEnd  =  end  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
529	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  1;  _inputEnd  =  end  -  2;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  1;  _inputEnd  =  end  -  2;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  1;  _inputEnd  =  end  -  2;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
530	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _icUTF8  +=  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  2;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _icUTF8  +=  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    2;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _icUTF8  +=  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =	  	non-compiled	[CE]  ';'  expected	16	None	add
531	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
532	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
533	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
534	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  end;  if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    end;    if(start  <  =  end)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
535	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  return;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    return;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	81	None	replace
536	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  start)  >=  _inputBufferLen);  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
537	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  start)  >=  _inputPtr));  _inputEnd  =  start  +  1;	  	non-compiled	[CE]  not  a  statement	30	None	add
538	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  <  =  end));  _inputPtr  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  <  =  end));  _inputPtr  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  start)  <  =  end));  _inputPtr  =  start  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
539	[BUG]  [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  <  =  end));  _inputBufferLen  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  +  1;  ((  _inputEnd  -  start)  <  =  end));  _inputBufferLen  =  start  +  1;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    start    +    1;    ((  _inputEnd  -  start)  <  =  end));  _inputBufferLen  =  start  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
540	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	55	None	replace
541	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    ((    _inputEnd    +    1)    >=    _inputBufferLen);    _inputEnd    =    end    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	55	None	replace
542	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    start,    _inputBuffer,    0,    start);    _inputPtr    =    start;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
543	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputStart  =  end  -  _inputPtr;  [CE]  cannot  find  symbol  _inputStart  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputStart  =  end  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputStart  =  end  -  _inputPtr;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	18	None	add
544	[BUG]  [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  last  -  _inputPtr;  [CE]  cannot  find  symbol  last  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  _inputPtr;  _inputEnd  =  last  -  _inputPtr;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    _inputPtr;    _inputEnd  =  last  -  _inputPtr;	  	non-compiled	[CE]  cannot  find  symbol  last	18	None	add
545	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
546	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        _inputEnd    =    start;    if(end  >  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	24	1	add
548	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  >  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    if(end  >  0)  {  _inputEnd  =  start;  _inputEnd  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	24	1	add
549	[BUG]  [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    _inputEnd  =  start;  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        _inputEnd    =    start;    if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
550	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    start;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
551	[BUG]  [BUGGY]  if(_inputEnd  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_inputEnd  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_inputEnd  <  =  0)  {  _inputEnd  =  start;  _inputEnd  =  end;  }	  _inputEnd    =    start;    _inputEnd    =    end;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
553	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end;  }  else  {  _origBufferLen  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  if(end  <  1)  {  _origBufferLen  =  end;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    if(end  <  1)  {  _origBufferLen  =  end;  }  else  {  _origBufferLen  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	84	1	add
554	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputStart  -  _currInputPtrStart);  [CE]  cannot  find  symbol  _inputStart  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputStart  -  _currInputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputStart  -  _currInputPtrStart);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputStart	38	None	replace
555	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _currInputProcessed  +=  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _currInputProcessed    +=    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	82	None	replace
556	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    start    -    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
558	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
560	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  start  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    start    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  start  -  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
561	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	non-compiled	[CE]  ';'  expected	17	None	replace
562	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
563	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  2;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    2;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
564	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
565	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
566	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
568	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
570	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    if(end  <  1)  {  _inputEnd  =  start  +  1;  if(end  <  1)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
572	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  <  1)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  <  1)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
574	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  <  1)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  <  1)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  <  1)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
576	[BUG]  [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    1;    _inputEnd  =  end  -  1;  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        1;        _inputEnd    =    end    -    1;    if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
577	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
578	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
579	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	compilable	  [FE]  AssertionFailedError  	85	1	replace
580	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
581	[BUG]  [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8  ==  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    1;    _origBuffer    	non-compiled	[CE]  ';'  expected	70	None	replace
582	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  =  0;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  =  0;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
583	[BUG]  [BUGGY]  ||  end  <  =  0)  {  _icUTF8  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  =  0)  {  _icUTF8  =  0;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  =  0)  {  _icUTF8  =  0;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
584	[BUG]  [BUGGY]  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  find  symbol  icUTF8  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    this.icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    	non-compiled	[CE]  cannot  find  symbol  icUTF8	83	None	replace
585	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
586	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
587	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	58	1	add
588	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end	  	non-compiled	[CE]  ')'  expected	58	None	add
589	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _origBufferLen    =    end    -    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _origBufferLen  =  end  -  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _	  	non-compiled	[CE]  ';'  expected	58	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  /  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  /  2;	  _inputEnd    =    end    +    2;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
591	[BUG]  [BUGGY]  _inputEnd  =  end  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  /  2;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  /  2;	  _inputEnd    =    end    +    2;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
592	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  =  start;  }	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    =    start;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
593	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputBufferLen  -  _inputPtr);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputBufferLen  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputBufferLen  -  _inputPtr);	  _inputEnd    =    end    -    (_inputEnd    -    _inputPtr);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	90	None	replace
594	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_NAMES;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_NAMES;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	76	None	replace
595	[BUG]  [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_SINGLE_QUOTES;  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _icUTF8  =  FEAT_MASK_ALLOW_SINGLE_QUOTES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_icUTF8  =  FEAT_MASK_ALLOW_SINGLE_QUOTES;	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf,    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	76	None	replace
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	88	1	replace
597	[BUG]  [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  AssertionFailedError  	88	1	replace
598	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    if(end    <    1)    {    _inputEnd    =    end    +    1;    }    else    {    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  end  -  (_inputEnd  -  start);	  _inputEnd    =    end    -    start;    _inputEnd    =    start    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
600	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputEnd  -  start);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputEnd  -  start);	  _inputEnd    =    end    -    start;    _inputEnd    =    start    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
601	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
602	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
603	[BUG]  [BUGGY]  _inputEnd  =  end  -  (_inputStart  -  _inputPtrStart);  [CE]  cannot  find  symbol  _inputStart  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  (_inputStart  -  _inputPtrStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  end  -  (_inputStart  -  _inputPtrStart);	  _inputEnd    =    end    -    (_inputEnd    -    _inputPtrStart);    	non-compiled	[CE]  cannot  find  symbol  _inputStart	91	None	replace
604	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  =  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  =  false;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  =  false;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
605	[BUG]  [BUGGY]  ||  end  <  0)  {  _icUTF8  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  0)  {  _icUTF8  =  false;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  0)  {  _icUTF8  =  false;  }	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
606	[BUG]  [BUGGY]  ||  end  <  =  0)  {  _icUTF8  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  ||  end  <  =  0)  {  _icUTF8  =  false;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	||  end  <  =  0)  {  _icUTF8  =  false;	          if(end    <    =    0)    {    if(_icUTF8    ==    FEAT_MASK_ALLOW_UNQUOTED_NAMES)    {    _icUTF8    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
607	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  if(end  <  =  0)  {  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  if(end  <  =  0)  {  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    if(end  <  =  0)  {  _inputEnd  =  start  +  1;  _inputEnd  =  start  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
609	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  start  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    start    +    1;    if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  start  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
610	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  end  -  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  find  symbol  icUTF8  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  _inputEnd  =  end  -  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    _inputEnd  =  end  -  start  +  1;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  	non-compiled	[CE]  cannot  find  symbol  icUTF8	20	None	add
611	[BUG]  [BUGGY]  _inputEnd  =  end  -  start  +  1;  ((  _inputEnd  -  start  +  1)  >=  _inputBufferLen);  _inputPtr  =  start;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  end  -  start  +  1;  ((  _inputEnd  -  start  +  1)  >=  _inputBufferLen);  _inputPtr  =  start;  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd    =    end    -    start    +    1;    ((  _inputEnd  -  start  +  1)  >=  _inputBufferLen);  _inputPtr  =  start;	  	non-compiled	[CE]  not  a  statement	20	None	add
612	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	68	None	replace
613	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  start  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  start  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  start  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	68	None	replace
614	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }	  _inputEnd    =    end    -    1;    if(end    >    0)    {    _inputEnd    =    end    -    1;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
615	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    +    1;    _inputEnd    =    end    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
617	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
618	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    if(end  <  =  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
619	[BUG]  [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    +    1;    _inputEnd  =  end  +  1;  if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        +        1;        _inputEnd    =    end    +    1;    if(end  >  0)  {  _inputEnd  =  end  +  1;  _inputEnd  =  end  +  1;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	40	None	add
620	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _inputBufferLen);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen  =  end  -(_inputEnd  -  _inputBufferLen);	  _origBufferLen    =    end    -(_inputEnd    -    _currInputPtr);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	39	None	replace
621	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
622	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  end  -  1;  _inputEnd  =  end  -  1;  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _inputRowStart);  _inputPtr  =	  _inputEnd    =    end    -    1;    _inputEnd    =    end    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
623	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	80	None	replace
624	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _iorigBufferLen  =  end  -  start;  }  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
625	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_NULL_NAMES;  _iorigBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_NULL_NAMES;  _iorigBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_NULL_NAMES;  _iorigBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _iorigBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	80	None	replace
626	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
628	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
629	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  end  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    end    -    start;    if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
630	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [CE]  cannot  assign  a  value  to  final  variable  _icUTF8  [FE]        AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _icUTF8	79	None	replace
631	[BUG]  [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  >  0)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  }  }	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
632	[BUG]  [BUGGY]  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(_icUTF8!=  FEAT_MASK_ALLOW_UNQUOTED_NAMES)  {  _inputEnd  =  end  -  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBu	  _inputEnd    =    end    -    start;    if(end    >    0)    {    _inputEnd    =    end    -    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
633	[BUG]  [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    start    -(_inputEnd    -    _inputPtr);    if(end  <  =  0)  {  _origBufferLen  =  start  -(_inputEnd  -  _inputPtr);  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
634	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  bu  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  bu  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  bu	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
635	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  buf  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  buf  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	if(end  <  =  0)  {  _inputEnd  =  start;  }  else  {  _icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  _origBufferLen  =  end  -  start;  System.arraycopy(buf,  0,  buf	  _inputEnd    =    start;    if(start    >    end)    {    _inputEnd    =    start;    }    else    {    _icUTF8    =    FEAT_MASK_ALLOW_UNQUOTED_NAMES;    _origBufferLen    =    end    -    start;    System.arraycopy(buf,    0,    buf    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (end  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd  =  start  -  (end  -  _inputPtr);	  _inputEnd    =    start    -    end;    	compilable	  [FE]  AssertionFailedError  	23	1	replace
637	[BUG]  [BUGGY]  _inputEnd  =  start  -  (end  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd  =  start  -  (end  -  _inputPtr);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd  =  start  -  (end  -  _inputPtr);	  _inputEnd    =    start    -    end;    	compilable	  [FE]  AssertionFailedError  	23	1	replace
638	[BUG]  [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  length  -(_inputEnd  -  _currInputRowStart);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _origBufferLen  =  end  -(_inputEnd  -  _currInputRowStart);  _origBufferLen  =  length  -(_inputEnd  -  _currInputRowStart);  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_origBufferLen    =    end    -(_inputEnd    -    _currInputRowStart);    _origBufferLen  =  length  -(_inputEnd  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  length	36	None	add
639	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  <  =  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
640	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
641	[BUG]  [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    start;    if(start  >  end)  {  _inputEnd  =  start;  }  else  {  System.arraycopy(buf,  start,  _inputBuffer,  start,  end);  _inputPtr  +=  start;  }  if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        start;        if(start    >    end)    {    _inputEnd    =    start;    }    else    {    System.arraycopy(buf,    start,    _inputBuffer,    start,    end);    _inputPtr    +=    start;    }    if(end  >  0)  {  System.arraycopy(buf,  start,  _inputBuffer,  0,  end);  _inputPtr  +=  start;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	add
642	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	add	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
644	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    if(end  >  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
645	[BUG]  [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;      [BUGGY]  _inputEnd    =    end    -    start;    _inputEnd  =  start  -  start;  if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }  [BUGGY]      _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	110	110	1	replace	_inputEnd        =        end        -        start;        _inputEnd    =    start    -    start;    if(end  <  =  0)  {  _inputEnd  =  end  -  start;  _inputEnd  =  start  -  start;  }  else  {  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
