name,outcome,runtime,stacktrace
com.google.javascript.jscomp.IntegrationTest#testSingletonGetter1,PASS,1144929132,
com.google.javascript.jscomp.IntegrationTest#testExpose,PASS,558599622,
com.google.javascript.jscomp.IntegrationTest#testCollapseProperties2,PASS,389357914,
com.google.javascript.jscomp.IntegrationTest#testCollapseObjectLiteral1,PASS,420322635,
com.google.javascript.jscomp.IntegrationTest#testCollapseObjectLiteral2,PASS,395375603,
com.google.javascript.jscomp.IntegrationTest#testHiddenSideEffect,PASS,559960372,
com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2,PASS,463015356,
com.google.javascript.jscomp.IntegrationTest#testIssue724,FAIL,607279670,junit.framework.AssertionFailedError: Expected: isFunction=function(a){var b={};return a&&"[object Function]"===b.b.a(a)} Result: isFunction=function(a){return a&&"[object Function]"===(void 0).a(a)} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: input0] [input_id: InputId: input0] EXPR_RESULT 1 [source_file: input0] ASSIGN 1 [source_file: input0] NAME isFunction 1 [source_file: input0] FUNCTION  1 [source_file: input0] NAME  1 [source_file: input0] PARAM_LIST 1 [source_file: input0] NAME a 1 [source_file: input0] BLOCK 1 [source_file: input0] VAR 1 [source_file: input0] NAME b 1 [source_file: input0] OBJECTLIT 1 [source_file: input0] RETURN 1 [source_file: input0] AND 1 [source_file: input0] NAME a 1 [source_file: input0] SHEQ 1 [source_file: input0] STRING [object Function] 1 [source_file: input0] CALL 1 [source_file: input0] GETPROP 1 [source_file: input0] GETPROP 1 [source_file: input0] NAME b 1 [source_file: input0] STRING b 1 [source_file: input0] STRING a 1 [source_file: input0] NAME a 1 [source_file: input0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0] EXPR_RESULT 1 [source_file: i0] ASSIGN 1 [source_file: i0] NAME isFunction 1 [source_file: i0] FUNCTION  1 [source_file: i0] NAME  1 [source_file: i0] PARAM_LIST 1 [source_file: i0] NAME a 1 [source_file: i0] BLOCK 1 [source_file: i0] RETURN 1 [source_file: i0] AND 1 [source_file: i0] NAME a 1 [source_file: i0] SHEQ 1 [source_file: i0] STRING [object Function] 1 [source_file: i0] CALL 1 [source_file: i0] GETPROP 1 [source_file: i0] VOID 1 [source_file: i0] NUMBER 0.0 1 [source_file: i0] STRING a 1 [source_file: i0] NAME a 1 [source_file: i0]   Subtree1: BLOCK 1 [source_file: input0] VAR 1 [source_file: input0] NAME b 1 [source_file: input0] OBJECTLIT 1 [source_file: input0] RETURN 1 [source_file: input0] AND 1 [source_file: input0] NAME a 1 [source_file: input0] SHEQ 1 [source_file: input0] STRING [object Function] 1 [source_file: input0] CALL 1 [source_file: input0] GETPROP 1 [source_file: input0] GETPROP 1 [source_file: input0] NAME b 1 [source_file: input0] STRING b 1 [source_file: input0] STRING a 1 [source_file: input0] NAME a 1 [source_file: input0]   Subtree2: BLOCK 1 [source_file: i0] RETURN 1 [source_file: i0] AND 1 [source_file: i0] NAME a 1 [source_file: i0] SHEQ 1 [source_file: i0] STRING [object Function] 1 [source_file: i0] CALL 1 [source_file: i0] GETPROP 1 [source_file: i0] VOID 1 [source_file: i0] NUMBER 0.0 1 [source_file: i0] STRING a 1 [source_file: i0] NAME a 1 [source_file: i0]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:92) at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:74) at com.google.javascript.jscomp.IntegrationTest.testIssue724(IntegrationTest.java:1687) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.IntegrationTest#testIssue550,PASS,408928169,
com.google.javascript.jscomp.IntegrationTest#testNamelessParameter,PASS,911788994,
com.google.javascript.jscomp.IntegrationTest#testNegativeZero,PASS,561074697,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject0,PASS,273461411,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testIssue724,FAIL,312433222,junit.framework.AssertionFailedError: Expected: function local(){var getType;getType={};return functionToCheck&&getType.toString.apply(functionToCheck)==="[object Function]"} Result: function local(){var JSCompiler_object_inline_toString_0;JSCompiler_object_inline_toString_0=void 0,true;return functionToCheck&&JSCompiler_object_inline_toString_0.apply(functionToCheck)==="[object Function]"} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION local 1 [source_file: expected0] NAME local 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME getType 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME getType 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] RETURN 1 [source_file: expected0] AND 1 [source_file: expected0] NAME functionToCheck 1 [source_file: expected0] SHEQ 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME getType 1 [source_file: expected0] STRING toString 1 [source_file: expected0] STRING apply 1 [source_file: expected0] NAME functionToCheck 1 [source_file: expected0] STRING [object Function] 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION local 1 [source_file: testcode] NAME local 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_toString_0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_toString_0 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] TRUE 1 [source_file: testcode] RETURN 1 [source_file: testcode] AND 1 [source_file: testcode] NAME functionToCheck 1 [source_file: testcode] SHEQ 1 [source_file: testcode] CALL 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME JSCompiler_object_inline_toString_0 1 [source_file: testcode] STRING apply 1 [source_file: testcode] NAME functionToCheck 1 [source_file: testcode] STRING [object Function] 1 [source_file: testcode]   Subtree1: NAME getType 1 [source_file: expected0]   Subtree2: NAME JSCompiler_object_inline_toString_0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testSameLocal(InlineObjectLiteralsTest.java:360) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testIssue724(InlineObjectLiteralsTest.java:344) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1,PASS,269113113,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1a,PASS,283060691,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject2,PASS,399897234,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject3,PASS,305928729,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject4,PASS,361848560,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject5,PASS,346907888,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject6,PASS,290213321,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject7,PASS,280970337,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject8,PASS,363664010,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject9,PASS,348940687,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject10,FAIL,315871770,junit.framework.AssertionFailedError: Expected: function local(){var x={};var b=f();x={a:a,b:b};if(x.a)g(x.b)+x.c} Result: function local(){var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_c_2;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,JSCompiler_object_inline_c_2=void 0,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)+JSCompiler_object_inline_c_2} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION local 1 [source_file: expected0] NAME local 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME b 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY a 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING_KEY b 1 [source_file: expected0] NAME b 1 [source_file: expected0] IF 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING a 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME g 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING b 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING c 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION local 1 [source_file: testcode] NAME local 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME b 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] NAME a 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] NAME b 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] TRUE 1 [source_file: testcode] IF 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME g 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode]   Subtree1: BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME b 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY a 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING_KEY b 1 [source_file: expected0] NAME b 1 [source_file: expected0] IF 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING a 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME g 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING b 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME x 1 [source_file: expected0] STRING c 1 [source_file: expected0]   Subtree2: BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME b 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] NAME a 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] NAME b 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] TRUE 1 [source_file: testcode] IF 1 [source_file: testcode] NAME JSCompiler_object_inline_a_0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME g 1 [source_file: testcode] NAME JSCompiler_object_inline_b_1 1 [source_file: testcode] NAME JSCompiler_object_inline_c_2 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject10(InlineObjectLiteralsTest.java:174) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject11,PASS,349259352,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject12,FAIL,264015359,junit.framework.AssertionFailedError: Expected: function local(){var a;a={x:1,y:2};f(a.x,a.y2)} Result: function local(){var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION local 1 [source_file: expected0] NAME local 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] STRING_KEY y 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING x 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING y2 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION local 1 [source_file: testcode] NAME local 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] TRUE 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode]   Subtree1: BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] STRING_KEY y 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING x 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING y2 1 [source_file: expected0]   Subtree2: BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] TRUE 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NAME JSCompiler_object_inline_y2_2 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject12(InlineObjectLiteralsTest.java:215) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject13,PASS,304845201,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject14,PASS,347290765,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject15,PASS,297938165,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject16,PASS,285447991,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject17,PASS,275649663,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject18,PASS,373600690,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject19,PASS,411090867,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject20,PASS,408946299,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject21,PASS,506342474,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject22,FAIL,374488165,junit.framework.AssertionFailedError: Expected: function local(){var a;for(;1;){f(a.x,a.y);a={x:1,y:1}}} Result: function local(){var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;for(;1;){f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1);JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=1,true}} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION local 1 [source_file: expected0] NAME local 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] FOR 1 [source_file: expected0] EMPTY 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EMPTY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING x 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING y 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] STRING_KEY y 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION local 1 [source_file: testcode] NAME local 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] FOR 1 [source_file: testcode] EMPTY 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EMPTY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] TRUE 1 [source_file: testcode]   Subtree1: BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] FOR 1 [source_file: expected0] EMPTY 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EMPTY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING x 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING y 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] STRING_KEY x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] STRING_KEY y 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] FOR 1 [source_file: testcode] EMPTY 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EMPTY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] COMMA 1 [source_file: testcode] COMMA 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_x_0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_object_inline_y_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] TRUE 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355) at com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject22(InlineObjectLiteralsTest.java:288) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject23,PASS,538546285,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject24,PASS,264658985,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject25,PASS,354409403,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject26,PASS,267616936,
com.google.javascript.jscomp.InlineObjectLiteralsTest#testBug545,PASS,267251976,
