bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  staleVars);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  null,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  null);	  NodeTraversal.traverse(compiler,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
3	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  Context.traverse(compiler,  externs,  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externs,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externs,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  Context.traverse(compiler,  staleVars,  this);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  staleVars,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  staleVars,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  Context.traverse(compiler,  staleVars,  root,  this);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  staleVars,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  staleVars,  root,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  root,  this);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  root,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  root);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  root);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externs);	  NodeTraversal.traverse(compiler,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  false);	  NodeTraversal.traverse(compiler,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  staleVars);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  VAR_PREFIX);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
17	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
18	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  staleVars));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  staleVars));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  staleVars));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
19	[BUG]  [BUGGY]  Context.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
20	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NO_GLOBAL_EXPECTED_ERROR));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NO_GLOBAL_EXPECTED_ERROR));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NO_GLOBAL_EXPECTED_ERROR));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
21	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  name));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  name));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  name));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
22	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  root));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  root));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
23	[BUG]  [BUGGY]  new  InliningBehavior().process(compiler,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(compiler,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(compiler,  callback);	  new    InliningBehavior().process(compiler,    root);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  compiler);	  new    InliningBehavior().process(compiler,    root);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  new  InliningBehavior().process(compiler,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(compiler,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(compiler,  root,  callback);	  new    InliningBehavior().process(compiler,    root);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    null,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  null,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  null,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  null,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    null,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externs,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    null,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.CALL);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.CALL);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.CALL);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.CALL);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.CALL);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.CALL);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.GETPROP);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.GETPROP);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
35	[BUG]  [BUGGY]  staleVars.add(callback,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  root);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
36	[BUG]  [BUGGY]  staleVars.add(callback,  callback.sourceName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.sourceName);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.sourceName);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  staleVars.add(callback,  callback.node);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.node);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.node);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  staleVars.add(callback,  callback.referenceName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.referenceName);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.referenceName);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  staleVars.add(callback,  callback.references);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.references);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.references);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  this,  callback);	  NodeTraversal.traverse(compiler,    this,    root);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
41	[BUG]  [BUGGY]  Context.traverse(compiler,  this,  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  this,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  this,  root);	  NodeTraversal.traverse(compiler,    this,    root);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externs,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externals,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  callback);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  callback);	  new    InliningBehavior().process(externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  new  InliningBehavior().process(callback,  externs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(callback,  externs);	  new    InliningBehavior().process(externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  new  InliningBehavior().process(null,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(null,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(null,  callback);	  new    InliningBehavior().process(externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  callback,  root);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  callback,  root);	  new    InliningBehavior().process(externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  callback,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  callback,  callback);	  new    InliningBehavior().process(externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  process);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  process);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  callback,  process);	  NodeTraversal.traverse(compiler,    callback,    process);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  process);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  process);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  null,  process);	  NodeTraversal.traverse(compiler,    callback,    process);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
51	[BUG]  [BUGGY]  staleVars.add(callback).process(null,  externs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(null,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(null,  externs);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  staleVars.add(callback).process(null,  externs,  root);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(null,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(null,  externs,  root);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  staleVars.add(callback).process(root,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(root,  callback);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  staleVars.add(callback).process(null,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(null,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(null,  root,  callback);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
55	[BUG]  [BUGGY]  staleVars.add(callback.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getName());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  staleVars.add(callback.getReferenceName()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getReferenceName()  +  1);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getReferenceName()  +  1);	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  staleVars.add(callback.getReferenceName(),  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getReferenceName(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getReferenceName(),  callback);	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  staleVars.add(callback.getReferenceName()  + ": ");  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getReferenceName()  + ": ");  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getReferenceName()  + ": ");	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
59	[BUG]  [BUGGY]  staleVars.add(callback.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getSimpleName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getSimpleName());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
60	[BUG]  [BUGGY]  staleVars.add(callback.getDeclaration());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getDeclaration());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getDeclaration());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  staleVars.add(callback.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getFirstChild());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getFirstChild());	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
62	[BUG]  [BUGGY]  staleVars.add(callback.replaceChild(root,  callback.removeFirstChild()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.replaceChild(root,  callback.removeFirstChild()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.replaceChild(root,  callback.removeFirstChild()));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
63	[BUG]  [BUGGY]  staleVars.add(callback.removeLastChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.removeLastChild());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.removeLastChild());	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  staleVars.add(callback.replaceChild(null,  callback.removeFirstChild()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.replaceChild(null,  callback.removeFirstChild()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.replaceChild(null,  callback.removeFirstChild()));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  staleVars.add(callback.process(externs,  root.removeFirstChild()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.process(externs,  root.removeFirstChild()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.process(externs,  root.removeFirstChild()));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  staleVars.add(callback.getLastChild());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getLastChild());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getLastChild());	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  staleVars.add(callback.references,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  callback);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  staleVars.add(callback.references,  root);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  root);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
69	[BUG]  [BUGGY]  staleVars.add(callback.references,  callback.references);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  callback.references);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  callback.references);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
70	[BUG]  [BUGGY]  staleVars.add(callback.getReferences());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getReferences());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getReferences());	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
71	[BUG]  [BUGGY]  staleVars.add(callback.references,  callback.node);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  callback.node);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  callback.node);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
72	[BUG]  [BUGGY]  staleVars.add(callback.references,  callback.sourceName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  callback.sourceName);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  callback.sourceName);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
73	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  root,  callback);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  root,  callback);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
74	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  externs,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  externs,  root);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
75	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  callback);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
76	[BUG]  [BUGGY]  staleVars.add(callback).process(root,  externs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(root,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(root,  externs);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
77	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  parent);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  parent);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
78	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  externs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  externs);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  VAR_PREFIX);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  false);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  staleVars,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  staleVars,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  staleVars,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  root,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  root,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  root,  this);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  root,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  staleVars,  this);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  staleVars,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  staleVars,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
90	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX  +  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX  +  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX  +  VAR_PREFIX));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
91	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX),  callback);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX),  callback);	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
92	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.sourceName));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.sourceName));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.sourceName));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
93	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX),  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX),  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX),  VAR_PREFIX);	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
94	[BUG]  [BUGGY]  parser.report(JSError.make(callback,  INLINE_PREFIX));  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  parser.report(JSError.make(callback,  INLINE_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	parser.report(JSError.make(callback,  INLINE_PREFIX));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
95	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  callback);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
96	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  root,  safeNameIdSupplier);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
97	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  root,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  root,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  root,  staleVars);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  externs);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  externs);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
99	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  staleVars);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
100	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  root,  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  root,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  root,  false);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
101	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  null);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
102	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
103	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  Callback.TRANSIENT,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  Callback.TRANSIENT,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  Callback.TRANSIENT,  callback);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  callback);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  callback);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
105	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  externs);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  externs);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
106	[BUG]  [BUGGY]  Compiler  compiler  =  callback.traverse(compiler,  root,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Compiler  compiler  =  callback.traverse(compiler,  root,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Compiler  compiler  =  callback.traverse(compiler,  root,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
107	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
108	[BUG]  [BUGGY]  staleVars.addAll(callback.cloneTree());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback.cloneTree());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback.cloneTree());	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
109	[BUG]  [BUGGY]  staleVars.addAll(callback.references);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback.references);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback.references);	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
110	[BUG]  [BUGGY]  staleVars.addAll(callback,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback,  callback);	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
111	[BUG]  [BUGGY]  staleVars.addAll(callback.getParent());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback.getParent());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback.getParent());	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
112	[BUG]  [BUGGY]  staleVars.addAll(callback.removeFirstChild());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback.removeFirstChild());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback.removeFirstChild());	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback.getType());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback.getType());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback.getType());	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(SafeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(SafeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(SafeNameIdSupplier.getType()  ==  Token.EXPR_RESULT,  callback);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  VAR_PREFIX);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
118	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  staleVars);	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
119	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  null);	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  true);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  true);	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
121	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  true);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  true);	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  null);	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
123	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
124	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  false);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  false);	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  this,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  this,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  this,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  this,  staleVars);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  this,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  this,  staleVars);	  NodeTraversal.traverse(compiler,    root,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback,  this);	  NodeTraversal.traverse(compiler,    root,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
128	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  externs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  externs);	  NodeTraversal.traverse(compiler,    externs,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
129	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback);	  NodeTraversal.traverse(compiler,    externs,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
130	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getSourceName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getSourceName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getSourceName());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
131	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getCharset());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getCharset());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getCharset());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
132	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.toString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.toString());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.toString());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
133	[BUG]  [BUGGY]  compiler.report(callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()!=  Token.EXPR_RESULT);	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
134	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getLineno());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getLineno());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getLineno());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getModule());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getModule());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getModule());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
136	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback.sourceName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback.sourceName);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback.sourceName);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
137	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  root);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
138	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  false);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  false);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
140	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback.prefix);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback.prefix);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback.prefix);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
141	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  null);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
142	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningObjectLiterals(),  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningObjectLiterals(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningObjectLiterals(),  callback);	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
143	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningReferenceLiterals());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningReferenceLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningReferenceLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
144	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  new  InliningObjectLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
145	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  new  InliningObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  new  InliningObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  null,  new  InliningObjectLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningElementLiterals());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningElementLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningElementLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
147	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  compiler);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  compiler);	  new    InliningBehavior().process(compiler,    externs);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
148	[BUG]  [BUGGY]  new  InliningBehavior().process(null,  externs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(null,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(null,  externs);	  new    InliningBehavior().process(compiler,    externs);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
149	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  null,  this);	  NodeTraversal.traverse(compiler,    callback,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
150	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  this,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  this,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  this,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
151	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  null);	  NodeTraversal.traverse(compiler,    callback,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
152	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  callback,  this);	  NodeTraversal.traverse(compiler,    callback,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  this,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  this,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  this,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
154	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.VAR  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.VAR  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.VAR  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
160	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  root),  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  root),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  root),  callback);	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
161	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  callback));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
162	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  parent));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  parent));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  parent));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
163	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  externs));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  externs));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  externs));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
164	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback.node));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback.node));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  callback.node));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
165	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback.getReferenceName()));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  callback.getReferenceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  callback.getReferenceName()));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
166	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  callback,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  Context.traverse(compiler,  staleVars,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  staleVars,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  staleVars,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  Context.traverse(compiler,  externs,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externs,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externs,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  Context.traverse(compiler,  Callback.class,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  Callback.class,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  Callback.class,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  Context.traverse(compiler,  callsback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callsback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callsback,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
172	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
173	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  staleVars));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  staleVars));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  staleVars));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
174	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  root,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  root,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  root,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
175	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.sourceName));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.sourceName));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.sourceName));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
176	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getName()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getName()));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
177	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getType()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getType()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getType()));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
178	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    externs,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
182	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.FUNCTION  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.FUNCTION  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.FUNCTION  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
183	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getReferenceName(),  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getReferenceName(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getReferenceName(),  callback);	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
184	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.toString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.toString());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.toString());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
185	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getLocalName());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getLocalName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getLocalName());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
186	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getId());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getId());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getId());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
187	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAssignedValue());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAssignedValue());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAssignedValue());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
188	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  callback,  staleVars);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
189	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  callback,  safeNameIdSupplier);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
190	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  callback,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  callback,  null);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
191	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  callback,  false);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  callback,  false);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
192	[BUG]  [BUGGY]  Compiler.traverse(compiler,  callback,  root);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Compiler.traverse(compiler,  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Compiler.traverse(compiler,  callback,  root);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
193	[BUG]  [BUGGY]  new  InliningBehavior().process(compiler,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(compiler,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(compiler,  externs,  callback);	  new    InliningBehavior().process(externs,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
194	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  externs,  callback);	  new    InliningBehavior().process(externs,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
195	[BUG]  [BUGGY]  new  InliningBehavior().process(null,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(null,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(null,  externs,  callback);	  new    InliningBehavior().process(externs,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
196	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  parent,  callback);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  parent,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  parent,  callback);	  new    InliningBehavior().process(externs,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
197	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  root);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  root);	  staleVars.add(new    ReferenceCollectingCallback(callback),    callback);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
198	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  compiler);	  staleVars.add(new    ReferenceCollectingCallback(callback),    callback);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
204	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  staleVars);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
205	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback,  VAR_PREFIX);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback,  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback,  VAR_PREFIX);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  ')'  expected	91	None	replace
206	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  null);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
207	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  new  InliningBehavior());	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
208	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback,  null);	  NodeTraversal.traverse(compiler,    root,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
209	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  null,  staleVars);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  null,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  null,  staleVars);	  NodeTraversal.traverse(compiler,    root,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  null,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  null,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  null,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
211	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  callback);	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
212	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getQualifiedName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getQualifiedName());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
213	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getKey());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getKey());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getKey());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
214	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  callback);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    externs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
215	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  callback);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    externs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
216	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  externs);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  externs);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    externs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
217	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  root);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  root);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    externs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  internals);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  internals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  internals);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    externs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
219	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  node,  callback);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
220	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  node);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  node);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
221	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  node,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  node,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  node,  this);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
222	[BUG]  [BUGGY]  Traversal.traverse(compiler,  node,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  node,  callback);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
223	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  true);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  true);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  true);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
224	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
225	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  true);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  true);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  true);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
226	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  false);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  null,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  null,  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
227	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  null);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  false,  null);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
228	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  new  InliningBehavior(),  false);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  new  InliningBehavior(),  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  new  InliningBehavior(),  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
229	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback());	  NodeTraversal.traverse(compiler,    callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
230	[BUG]  [BUGGY]  staleVars.add(callback.clone());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.clone());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.clone());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
231	[BUG]  [BUGGY]  staleVars.add(callback.cloneNode());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.cloneNode());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.cloneNode());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
232	[BUG]  [BUGGY]  staleVars.add(callback.cloneTree(),  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.cloneTree(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.cloneTree(),  callback);	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
233	[BUG]  [BUGGY]  staleVars.add(callback.clonePosition());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.clonePosition());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.clonePosition());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
234	[BUG]  [BUGGY]  staleVars.add(callback.cloneReference());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.cloneReference());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.cloneReference());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
235	[BUG]  [BUGGY]  staleVars.add(callback.toString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.toString());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.toString());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
236	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externs,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externs,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
237	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  VAR_PREFIX);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
238	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  staleVars,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  staleVars,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  staleVars,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
239	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
240	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
241	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  root);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  root);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
242	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  expr,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  expr,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  expr,  staleVars);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  expr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  expr);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  expr);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  expr);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  expr);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  expr);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  expr,  callback);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  expr,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  expr,  callback);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
246	[BUG]  [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback(callback));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback(callback));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  new  ReferenceCollectingCallback(callback));	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
247	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback());	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
248	[BUG]  [BUGGY]  staleVars.add(compiler,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(compiler,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(compiler,  new  ReferenceCollectingCallback());	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
249	[BUG]  [BUGGY]  staleVars.add(null,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(null,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(null,  new  ReferenceCollectingCallback());	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
250	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  classback,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  classback,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  classback,  callback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    classback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
251	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  classback,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  classback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  classback,  callback);	  NodeTraversal.traverse(compiler,    classback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
252	[BUG]  [BUGGY]  new  InliningBehavior().process(extrs,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(extrs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(extrs,  root);	  new    InliningBehavior().process(root,    externs);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
253	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  externs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  externs);	  new    InliningBehavior().process(root,    externs);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
254	[BUG]  [BUGGY]  compiler.report(callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  new  InliningBehavior());	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
255	[BUG]  [BUGGY]  compiler.report(callback,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  1);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  1);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
256	[BUG]  [BUGGY]  compiler.report(null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(null);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
257	[BUG]  [BUGGY]  compiler.report(callback,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  0);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  0);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
258	[BUG]  [BUGGY]  compiler.report(callback,  -1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  -1);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  -1);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
259	[BUG]  [BUGGY]  compiler.report(callback,  INLINE_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  INLINE_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  INLINE_PREFIX);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
260	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback);	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
261	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  callback,  new  InliningBehavior());	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
262	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  null,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  null,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  null,  new  InliningBehavior());	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
263	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(1));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(1));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(1));	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
264	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  staleVars);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  this,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
265	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  this,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
266	[BUG]  [BUGGY]  new  InliningBehavior().process(references,  callback);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(references,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(references,  callback);	  new    InliningBehavior().process(references,    root);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
267	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  references);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  references);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  references);	  new    InliningBehavior().process(references,    root);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
268	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  reference);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  reference);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  reference);	  new    InliningBehavior().process(references,    root);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
269	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  root,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  root,  false);	  NodeTraversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  >=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  >=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  >=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
271	[BUG]  [BUGGY]  Preconditions.checkState(!callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(!callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(!callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(root.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(root.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(root.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
273	[BUG]  [BUGGY]  Context.checkState(callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.checkState(callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.checkState(callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
274	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  staleVars,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  staleVars,  this);	  NodeTraversal.traverse(compiler,    staleVars,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
275	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  this,  staleVars);	  NodeTraversal.traverse(compiler,    staleVars,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
279	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.NAME  ||  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.NAME  ||  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.NAME  ||  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME,  true);  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME,  true);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME,  true);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
282	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  branch,  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  branch,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  branch,  callback);	  NodeTraversal.traverse(compiler,    branch,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
283	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  branch);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  branch);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  branch);	  NodeTraversal.traverse(compiler,    branch,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
284	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  branch,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  branch,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  branch,  callback,  staleVars);	  NodeTraversal.traverse(compiler,    branch,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
285	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  branch,  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  branch,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  branch,  staleVars);	  NodeTraversal.traverse(compiler,    branch,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
286	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  externs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  externs);	  NodeTraversal.traverse(compiler,    root,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
287	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  staleVars,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  staleVars,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  staleVars,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
288	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  false,  staleVars);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  false,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  false,  staleVars);	  NodeTraversal.traverse(compiler,    root,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
289	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  externals);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  externals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  externals);	  NodeTraversal.traverse(compiler,    root,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
292	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
293	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  >=  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
295	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  root);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  root);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
296	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  callback);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
297	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  null);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
298	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
299	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
300	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  null);	  new    InliningBehavior().process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
301	[BUG]  [BUGGY]  new  InliningBehavior().process(null,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(null,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(null,  root,  callback);	  new    InliningBehavior().process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
302	[BUG]  [BUGGY]  node.addChildToFront(callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.addChildToFront(callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.addChildToFront(callback);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
303	[BUG]  [BUGGY]  node.addChildToBack(callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.addChildToBack(callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.addChildToBack(callback);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
304	[BUG]  [BUGGY]  node.removeChild(root);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.removeChild(root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.removeChild(root);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
305	[BUG]  [BUGGY]  node.removeChild(callback.replaceChild(node,  root));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.removeChild(callback.replaceChild(node,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.removeChild(callback.replaceChild(node,  root));	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
306	[BUG]  [BUGGY]  node.removeChild(callback.getReferenceName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.removeChild(callback.getReferenceName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.removeChild(callback.getReferenceName());	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
307	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  this);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    this);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
308	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  externs);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  externs);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    this);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
309	[BUG]  [BUGGY]  new  InliningBehavior().process(callback,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(callback,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(callback,  root,  callback);	  new    InliningBehavior().process(callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
310	[BUG]  [BUGGY]  new  InliningBehavior().process(callback,  callback);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(callback,  callback);	  new    InliningBehavior().process(callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
311	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  externs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  externs);	  NodeTraversal.traverse(compiler,    callback,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
312	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
313	[BUG]  [BUGGY]  compiler.report(new  InliningBehavior(),  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(new  InliningBehavior(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(new  InliningBehavior(),  callback);	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
314	[BUG]  [BUGGY]  parser.report(new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  parser.report(new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	parser.report(new  InliningBehavior());	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
315	[BUG]  [BUGGY]  compiler.report(new  InliningBehavior(1));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(new  InliningBehavior(1));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(new  InliningBehavior(1));	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
316	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
317	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
318	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.class,  callback);	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
319	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  Callback.class,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  Callback.class,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  Callback.class,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
320	[BUG]  [BUGGY]  Traversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  Callback.class,  callback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
321	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  callback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    root,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
322	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  callback);	  NodeTraversal.traverse(compiler,    root,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
323	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  root);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  root);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
324	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  callback);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
325	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  null);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
326	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  false);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
327	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
328	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  root);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  root);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
329	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  false);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  root,  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
330	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  VAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  VAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  VAR_PREFIX));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
331	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_COLLECTION));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_COLLECTION));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_COLLECTION));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
332	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NO_GLOBAL_COLLECTION));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NO_GLOBAL_COLLECTION));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NO_GLOBAL_COLLECTION));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
333	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION),  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION),  callback);	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
334	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  staleVars));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  staleVars));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  staleVars));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
335	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getType()));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getType()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getType()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
336	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externs,  root);	  NodeTraversal.traverse(compiler,    staleVars,    root);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  ||  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
341	[BUG]  [BUGGY]  node.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.reportCodeChange();  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.reportCodeChange();	  null.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
342	[BUG]  [BUGGY]  null.addChildToBack(callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  null.addChildToBack(callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	null.addChildToBack(callback);	  null.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
343	[BUG]  [BUGGY]  null.addChildToFront(callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  null.addChildToFront(callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	null.addChildToFront(callback);	  null.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
344	[BUG]  [BUGGY]  Context.traverse(compiler,  externs,  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externs,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externs,  staleVars);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
345	[BUG]  [BUGGY]  Context.traverse(compiler,  staleVars,  root);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  staleVars,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  staleVars,  root);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
346	[BUG]  [BUGGY]  Context.traverse(compiler,  callback,  root,  staleVars);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  callback,  root,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  callback,  root,  staleVars);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
347	[BUG]  [BUGGY]  Context.traverse(compiler,  externals,  staleVars);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externals,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externals,  staleVars);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
348	[BUG]  [BUGGY]  Context.traverse(compiler,  staleVars,  callback);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  staleVars,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  staleVars,  callback);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
349	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  callback);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  callback);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
350	[BUG]  [BUGGY]  new  InliningBehavior().process(root,  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(root,  node);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(root,  node);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
351	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  root,  callback);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
352	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  node,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  node,  callback);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
353	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  root,  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  root,  callback,  safeNameIdSupplier);	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
354	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  root,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  root,  callback,  staleVars);	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
355	[BUG]  [BUGGY]  Traversal.traverse(compiler,  staleVars,  callback);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  staleVars,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  staleVars,  callback);	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
356	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  callback,  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  root,  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  root,  callback,  null);	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
357	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  callback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  root,  callback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  root,  callback,  new  InliningBehavior());	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
358	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs,  null);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    null);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
359	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  new  InliningBehavior(),  null);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    null);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
360	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback.class,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback.class,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback.class,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
361	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  roots,  staleVars);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  roots,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  roots,  staleVars);	  NodeTraversal.traverse(compiler,    staleVars,    root);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
362	[BUG]  [BUGGY]  staleVars.addAll(callback,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.addAll(callback,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.addAll(callback,  new  ReferenceCollectingCallback());	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
363	[BUG]  [BUGGY]  staleVars.removeAll(callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.removeAll(callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.removeAll(callback);	  staleVars.addAll(callback);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
364	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  root);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
365	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  externs);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  externs);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT,  staleVars);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(safeNameIdSupplier.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
368	[BUG]  [BUGGY]  Context.traverse(compiler,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externs,  callback);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
369	[BUG]  [BUGGY]  Context.traverse(compiler,  node,  callback);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  node,  callback);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
370	[BUG]  [BUGGY]  new  InliningBehavior().process(references,  root,  callback);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(references,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(references,  root,  callback);	  new    InliningBehavior().process(references,    root);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
371	[BUG]  [BUGGY]  new  InliningBehavior().process(references,  externs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(references,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(references,  externs);	  new    InliningBehavior().process(references,    root);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
372	[BUG]  [BUGGY]  Preconditions.checkState(callback.hasType()  &&  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.hasType()  &&  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.hasType()  &&  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
373	[BUG]  [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
374	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
375	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  node,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  node,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  node,  this);	  NodeTraversal.traverse(compiler,    node,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
376	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  root),  VAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  root),  VAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  root),  VAR_PREFIX);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
377	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX),  callback,  safeNameIdSupplier);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
378	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  JAR_PREFIX),  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  JAR_PREFIX),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  JAR_PREFIX),  callback);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
379	[BUG]  [BUGGY]  staleVars.add(callback.replaceChild(null,  root));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.replaceChild(null,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.replaceChild(null,  root));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
380	[BUG]  [BUGGY]  staleVars.add(callback.process(externs,  root));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.process(externs,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.process(externs,  root));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
381	[BUG]  [BUGGY]  staleVars.add(callback.process(node,  root));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.process(node,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.process(node,  root));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
382	[BUG]  [BUGGY]  staleVars.add(callback,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  null);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
383	[BUG]  [BUGGY]  staleVars.add(callback,  externs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  externs);	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
384	[BUG]  [BUGGY]  compiler.report(null,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(null,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(null,  new  InliningBehavior());	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
385	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
386	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  this);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
387	[BUG]  [BUGGY]  staleVars.add(callback.first);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.first);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.first);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
388	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  externs);	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
389	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  root);	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
390	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  root,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  root,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  root,  new  InliningBehavior());	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
391	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  new  InliningBehavior(),  root);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  new  InliningBehavior(),  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  new  InliningBehavior(),  root);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
392	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  root);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  root);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
393	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externes);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externes);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externes);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
394	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  extern);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  extern);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  extern);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
395	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningNodeLiterals());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningNodeLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningNodeLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
396	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningEndObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningEndObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningEndObjectLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
397	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningInliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningInliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningInliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
398	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  root));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  root));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
399	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  root));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  root));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
400	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  externs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  process,  externs);	  NodeTraversal.traverse(compiler,    callback,    process);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
401	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  root);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  process,  root);	  NodeTraversal.traverse(compiler,    callback,    process);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
402	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
403	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  new  ReferenceCollectingCallback());	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
404	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior(),  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    root,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
405	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior()));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  new  InliningBehavior()));	  NodeTraversal.traverse(compiler,    root,    callback,    new    InliningBehavior());    	non-compiled	[CE]  ';'  expected	12	None	replace
406	[BUG]  [BUGGY]  Traversal.traverse(compiler,  staleVars,  root,  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  staleVars,  root,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  staleVars,  root,  callback);	  Traversal.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
408	[BUG]  [BUGGY]  staleVars.add(callback).process(node,  root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(node,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(node,  root);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
409	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  JAR_PREFIX);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  callback,  JAR_PREFIX);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  callback,  JAR_PREFIX);	  NodeTraversal.traverse(compiler,    root,    callback,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
410	[BUG]  [BUGGY]  null.report(callback.getReferenceName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  null.report(callback.getReferenceName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	null.report(callback.getReferenceName());	  null.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
411	[BUG]  [BUGGY]  Context.traverse(compiler,  externals,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externals,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externals,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
412	[BUG]  [BUGGY]  Context.traverse(compiler,  node,  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  node,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  node,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
413	[BUG]  [BUGGY]  Context.traverse(compiler,  branch,  this);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  branch,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  branch,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
414	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  externals));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  externals));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  externals));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
415	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  root),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  root),  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  root),  false);	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
416	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  staleVars);	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
417	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  root);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  root);	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
418	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  false);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  false);	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
419	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.toName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.toName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.toName());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
420	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  root);	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
421	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externals);	  NodeTraversal.traverse(compiler,    callback,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
422	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
423	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  branch,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  branch,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  branch,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    staleVars,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
424	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externals,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
425	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  ObjectLiterals());	  NodeTraversal.traverse(compiler,    callback,    null);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
426	[BUG]  [BUGGY]  staleVars.add(callback.getNode());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getNode());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getNode());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
427	[BUG]  [BUGGY]  staleVars.add(callback.getParent());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.getParent());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.getParent());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
428	[BUG]  [BUGGY]  staleVars.add(callback.toReferenceName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.toReferenceName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.toReferenceName());	  staleVars.add(callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
429	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_COLLECTION));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_COLLECTION));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_COLLECTION));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
430	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  root));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  root));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
431	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback.getReferenceName()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback.getReferenceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback.getReferenceName()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
432	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback.getSourceName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback.getSourceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback.getSourceName()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
433	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  nameIdSupplier));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  nameIdSupplier));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  nameIdSupplier));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
434	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  externs));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  externs));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  externs));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
435	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_EXPECTED_ERROR));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_EXPECTED_ERROR));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback.sourceName,  NON_GLOBAL_EXPECTED_ERROR));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
436	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  JSON_GLOBAL_EXPECTED_ERROR));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  JSON_GLOBAL_EXPECTED_ERROR));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  JSON_GLOBAL_EXPECTED_ERROR));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
437	[BUG]  [BUGGY]  compiler.report(callback,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  callback);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
438	[BUG]  [BUGGY]  compiler.report(callback,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  null);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
439	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
440	[BUG]  [BUGGY]  compiler.report(callback,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  false);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
441	[BUG]  [BUGGY]  compiler.report(callback,  new  InlineObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback,  new  InlineObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback,  new  InlineObjectLiterals());	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
442	[BUG]  [BUGGY]  Context.traverse(compiler,  externs,  root);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externs,  root);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
443	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  this,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    callback,    null,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
444	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  externals,  null);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    null);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
445	[BUG]  [BUGGY]  node.replaceChild(node,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.replaceChild(node,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.replaceChild(node,  callback);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
446	[BUG]  [BUGGY]  node.removeChild(externs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.removeChild(externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.removeChild(externs);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
447	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getSourceName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getSourceName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getSourceName());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getReferenceName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
448	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  JAR_PREFIX));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  JAR_PREFIX));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  JAR_PREFIX));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
449	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  root));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX,  root));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
450	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.TRANSIENT,  root);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
451	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
452	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback);	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
453	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  nameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  nameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  nameIdSupplier);	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
454	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  root);	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
455	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  false);	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
456	[BUG]  [BUGGY]  staleVars.add(callback).process(visibility,  externs,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(visibility,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(visibility,  externs,  root);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
457	[BUG]  [BUGGY]  staleVars.add(callback).process(root,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(root,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(root,  null);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
458	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback()));	  staleVars.add(new    ReferenceCollectingCallback(callback));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
459	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  root);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback),  root);	  staleVars.add(new    ReferenceCollectingCallback(callback));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
460	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  name));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  name));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  name));	  staleVars.add(new    ReferenceCollectingCallback(callback));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
461	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EMPTY));	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  ';'  expected	49	None	replace
462	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  staleVars,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  staleVars,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  staleVars,  this);	  NodeTraversal.traverse(compiler,    staleVars,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
463	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  this);	  NodeTraversal.traverse(compiler,    staleVars,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
464	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externes,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externes,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externes,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
465	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT  &&  callback.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
466	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  expr,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  expr,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  expr,  staleVars);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
467	[BUG]  [BUGGY]  Context.traverse(compiler,  externals,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  externals,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  externals,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
468	[BUG]  [BUGGY]  Context.traverse(compiler,  root,  new  InliningBehavior(),  callback);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  root,  new  InliningBehavior(),  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  root,  new  InliningBehavior(),  callback);	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
469	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  externals);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  externals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  externals);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
470	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  callback,  externs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  callback,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  callback,  externs);	  new    InliningBehavior().process(externs,    externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
471	[BUG]  [BUGGY]  new  InliningBehavior().process(references,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(references,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(references,  externs,  callback);	  new    InliningBehavior().process(externs,    externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
472	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  classback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  classback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  classback,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    classback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
473	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  VAR_PREFIX,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  root,  VAR_PREFIX,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  root,  VAR_PREFIX,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
474	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  externals,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  externals,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
475	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  exprs,  root,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  exprs,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  exprs,  root,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
476	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  root,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  root,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  externals,  root,  this);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
477	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  false);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  false);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  false);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    false);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
478	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  root);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.class,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.class,  root);	  NodeTraversal.traverse(compiler,    this,    root);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
479	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  calledback,  root);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  calledback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  calledback,  root);	  NodeTraversal.traverse(compiler,    this,    root);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
480	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.this,  root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.this,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.this,  root);	  NodeTraversal.traverse(compiler,    this,    root);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
481	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  externs,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  externs,  root);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
482	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getName());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
483	[BUG]  [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getString());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(callback.getType()  ==  Token.EXPR_RESULT,  callback.getString());	  compiler.report(callback.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
484	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  this);	  NodeTraversal.traverse(compiler,    staleVars,    this);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
485	[BUG]  [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
486	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  compiler);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
487	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  callback,  this);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
488	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningEndingBehavior());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningEndingBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  Callback.class,  new  InliningEndingBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
489	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TYPE_ROOT,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  Callback.TYPE_ROOT,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  Callback.TYPE_ROOT,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    Callback.class,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
490	[BUG]  [BUGGY]  Context.traverse(compiler,  null,  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  null,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  null,  callback);	  Context.traverse(compiler,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
491	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  externals,  root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  externals,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  externals,  root);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
492	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  new  ReferenceCollectingCallback());	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
493	[BUG]  [BUGGY]  staleVars.add(callback).process(externs,  node);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(externs,  node);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(externs,  node);	  staleVars.add(callback).process(externs,    root);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
494	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  staleVars);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  process,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  process,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    process);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
495	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.VAR);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.VAR);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
496	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  this);	  Traversal.traverse(compiler,    callback,    root);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
497	[BUG]  [BUGGY]  new  InliningBehavior().process(staleVars,  root);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(staleVars,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(staleVars,  root);	  new    InliningBehavior().process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
498	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  staleVars);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  callback,  staleVars);	  NodeTraversal.traverse(compiler,    callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
499	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  node,  staleVars);	  NodeTraversal.traverse(compiler,    externs,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
500	[BUG]  [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()).process(externs,  root);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()).process(externs,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  new  ReferenceCollectingCallback()).process(externs,  root);	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
501	[BUG]  [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()).process(null,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()).process(null,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  new  ReferenceCollectingCallback()).process(null,  root);	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
502	[BUG]  [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  new  ReferenceCollectingCallback()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  new  ReferenceCollectingCallback()));	  staleVars.add(callback,    new    ReferenceCollectingCallback());    	non-compiled	[CE]  ';'  expected	65	None	replace
503	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
504	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  expr);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  expr);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  expr);	  new    InliningBehavior().process(node,    root);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
505	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback.name);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback.name);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback.name);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
506	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback.root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback.root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback.root);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
507	[BUG]  [BUGGY]  staleVars.add(callback.sourceName,  callback.references);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.sourceName,  callback.references);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.sourceName,  callback.references);	  staleVars.add(callback.sourceName);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
508	[BUG]  [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkArgument(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.NAME);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
509	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  callback,  NON_GLOBAL_EXPECTED_ERROR));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  callback,  NON_GLOBAL_EXPECTED_ERROR));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  callback,  NON_GLOBAL_EXPECTED_ERROR));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
510	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getName()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getName()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
511	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.toString()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.toString()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.toString()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
512	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getSourceName()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getSourceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_EXPECTED_ERROR,  callback.getSourceName()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_EXPECTED_ERROR));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
513	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  this,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  this,  null);	  NodeTraversal.traverse(compiler,    callback,    this);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
514	[BUG]  [BUGGY]  staleVars.add(callback.references,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  new  ReferenceCollectingCallback());	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
515	[BUG]  [BUGGY]  staleVars.add(callback.inliningBehavior);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.inliningBehavior);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.inliningBehavior);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
516	[BUG]  [BUGGY]  staleVars.add(callback.references,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.references,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.references,  null);	  staleVars.add(callback.references);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
517	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback),  callback,  null);	  staleVars.add(new    ReferenceCollectingCallback(callback),    callback);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
518	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  false,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  false,  new  ReferenceCollectingCallback());	  NodeTraversal.traverse(compiler,    callback,    false);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
519	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
520	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  ReferenceCollectingCallback(),  staleVars);	  NodeTraversal.traverse(compiler,    callback,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
521	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EXPR_RESULT  ||  callback.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
522	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT,    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
523	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  classback,  expr,  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  classback,  expr,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  classback,  expr,  staleVars);	  NodeTraversal.traverse(compiler,    expr,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
524	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  compiler);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  callback,  compiler);	  NodeTraversal.traverse(compiler,    new    InliningBehavior(),    callback);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
525	[BUG]  [BUGGY]  new  InliningBehavior().process(node,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(node,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(node,  externs,  callback);	  new    InliningBehavior().process(externs,    externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
526	[BUG]  [BUGGY]  new  InliningBehavior().process(callback,  externs,  callback);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(callback,  externs,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(callback,  externs,  callback);	  new    InliningBehavior().process(externs,    externs,    callback);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
527	[BUG]  [BUGGY]  Context.traverse(compiler,  null,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  null,  this);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  null,  this);	  Context.traverse(compiler,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
528	[BUG]  [BUGGY]  staleVars.add(callback.replaceChild(node,  callback.removeFirstChild()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.replaceChild(node,  callback.removeFirstChild()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.replaceChild(node,  callback.removeFirstChild()));	  staleVars.add(callback.removeFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
529	[BUG]  [BUGGY]  staleVars.add(callback,  callback.process(externs,  root));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.process(externs,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.process(externs,  root));	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
530	[BUG]  [BUGGY]  staleVars.add(callback,  callback.process(node,  root));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback,  callback.process(node,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback,  callback.process(node,  root));	  staleVars.add(callback,    callback);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
531	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  empty  call: "  +  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  empty  call: "  +  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  empty  call: "  +  callback);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
532	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  constant  expression: "  +  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  constant  expression: "  +  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  constant  expression: "  +  callback);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
533	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  empty  expression: "  +  callback);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  empty  expression: "  +  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  empty  expression: "  +  callback);	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
534	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  callback));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(sourceName,  callback));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(sourceName,  callback));	  compiler.report(callback);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
535	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX)+  1,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX)+  1,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX)+  1,  callback);	  compiler.report(JSError.make(callback,    VAR_PREFIX),    callback);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
536	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  this,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    this);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
537	[BUG]  [BUGGY]  new  InliningBehavior().process(extends,  root);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(extends,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(extends,  root);	  new    InliningBehavior().process(root,    externs);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
538	[BUG]  [BUGGY]  new  InliningBehavior().process(new  Node(externs,  root));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(new  Node(externs,  root));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(new  Node(externs,  root));	  new    InliningBehavior().process(root,    externs);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
539	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  staleVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  new  InliningBehavior(),  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  new  InliningBehavior(),  staleVars);	  NodeTraversal.traverse(compiler,    branch,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
540	[BUG]  [BUGGY]  Preconditions.checkArgument(callback.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkArgument(callback.getType()!=  Token.EXPR_RESULT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkArgument(callback.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(callback.getType()!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
541	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.CALL);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.EMPTY  ||  callback.getType()  ==  Token.CALL);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
542	[BUG]  [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EMPTY);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Preconditions.checkState(callback.getType()  ==  Token.CALL  ||  callback.getType()  ==  Token.EMPTY);	  Preconditions.checkState(callback.getType()    ==    Token.EXPR_RESULT    ||    callback.getType()    ==    Token.EMPTY);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
543	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  interns);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  interns);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  interns);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
544	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    root);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
545	[BUG]  [BUGGY]  Context.traverse(compiler,  node,  staleVars);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  node,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  node,  staleVars);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
546	[BUG]  [BUGGY]  Context.traverse(compiler,  expr,  staleVars);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  expr,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  expr,  staleVars);	  Context.traverse(compiler,    root,    staleVars);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
547	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  new  ReferenceCollectingCallback());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  callback,  new  ReferenceCollectingCallback());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  callback,  new  ReferenceCollectingCallback());	  NodeTraversal.traverse(compiler,    staleVars,    callback);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
548	[BUG]  [BUGGY]  staleVars.add(callback.clonePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback.clonePrettyPrinter());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback.clonePrettyPrinter());	  staleVars.add(callback.cloneTree());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
549	[BUG]  [BUGGY]  staleVars.add(callback).process(null,  externals);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(callback).process(null,  externals);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(callback).process(null,  externals);	  staleVars.add(callback).process(null,    root);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
550	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  externs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  externs);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  this,  externs);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
551	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  root,  callback,  compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  root,  callback,  compiler);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  root,  callback,  compiler);	  new    InliningBehavior().process(externs,    root,    callback);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
552	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  node));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  node));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  node));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
553	[BUG]  [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback(root)));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback(root)));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	staleVars.add(new  ReferenceCollectingCallback(callback,  new  ReferenceCollectingCallback(root)));	  staleVars.add(new    ReferenceCollectingCallback(callback,    root));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
554	[BUG]  [BUGGY]  new  InliningBehavior().process(externs,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  new  InliningBehavior().process(externs,  parent);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	new  InliningBehavior().process(externs,  parent);	  new    InliningBehavior().process(compiler,    externs);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
555	[BUG]  [BUGGY]  node.putProp(Node.SOURCENAME_PROP,  callback);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.putProp(Node.SOURCENAME_PROP,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.putProp(Node.SOURCENAME_PROP,  callback);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
556	[BUG]  [BUGGY]  node.putProp(Node.SOURCEFILE_PROP,  callback);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  node.putProp(Node.SOURCEFILE_PROP,  callback);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	node.putProp(Node.SOURCEFILE_PROP,  callback);	  node.removeChild(callback);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
557	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  staleVars,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  staleVars,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
558	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  Callback.TRANSIENT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  Callback.TRANSIENT);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  Callback.TRANSIENT);	  NodeTraversal.traverse(compiler,    root,    Callback.TRANSIENT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
559	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.getSourceName()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.getSourceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback.getSourceName()));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
560	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INLINE_PREFIX,  callback));	  compiler.report(JSError.make(callback,    INLINE_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
561	[BUG]  [BUGGY]  compiler.report(new  InliningBehavior(0));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(new  InliningBehavior(0));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(new  InliningBehavior(0));	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
562	[BUG]  [BUGGY]  compiler.report(new  InliningBehavior()  +  callback.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(new  InliningBehavior()  +  callback.getName());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(new  InliningBehavior()  +  callback.getName());	  compiler.report(new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
563	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  callback,  new  InliningBehavior(),  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
564	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  root);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callsback,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callsback,  root);	  NodeTraversal.traverse(compiler,    staleVars,    root);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
565	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  expr,  root);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  expr,  root);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  expr,  root);	  NodeTraversal.traverse(compiler,    staleVars,    root);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
566	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningObjectLiterals());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningObjectLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningObjectLiterals());	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
567	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  null);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(),  null);	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
568	[BUG]  [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(0));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Traversal.traverse(compiler,  callback,  new  InliningBehavior(0));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Traversal.traverse(compiler,  callback,  new  InliningBehavior(0));	  Traversal.traverse(compiler,    callback,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
569	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getName(),  new  InliningBehavior());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
570	[BUG]  [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAsString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAsString());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.addToDebugLog( "Inlining  bean: "  +  callback.getAsString());	  compiler.addToDebugLog(   "Inlining    bean:   "    +    callback.getName());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
571	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getSourceName()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getSourceName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  callback.getSourceName()));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
572	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  VAR_PREFIX,  callback));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  VAR_PREFIX,  callback));	  compiler.report(JSError.make(callback,    VAR_PREFIX));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
573	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.toString()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.toString()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.toString()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
574	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getName()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getName()));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  callback.getName()));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
575	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  INVALID_ELEMENT));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  INVALID_ELEMENT));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  INVALID_ELEMENT));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
576	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  INVALID_COLLECTION));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  INVALID_COLLECTION));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  INVALID_COLLECTION));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
577	[BUG]  [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  MISSING_EXTENDS));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  MISSING_EXTENDS));  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	compiler.report(JSError.make(callback,  NON_GLOBAL_COLLECTION,  MISSING_EXTENDS));	  compiler.report(JSError.make(callback,    NON_GLOBAL_COLLECTION));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
578	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  root,  staleVars);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  this,  root,  staleVars);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  this,  root,  staleVars);	  NodeTraversal.traverse(compiler,    staleVars,    root,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
579	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr,  safeNameIdSupplier);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr,  safeNameIdSupplier);  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningBehavior(),  expr,  safeNameIdSupplier);	  NodeTraversal.traverse(compiler,    callback,    new    InliningBehavior(),    safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
580	[BUG]  [BUGGY]  Context.traverse(compiler,  node,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  node,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  node,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
581	[BUG]  [BUGGY]  Context.traverse(compiler,  nameback,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  Context.traverse(compiler,  nameback,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	Context.traverse(compiler,  nameback,  new  InliningBehavior());	  Context.traverse(compiler,    root,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
582	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  InliningBehavior());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  InliningBehavior());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  node,  new  InliningBehavior());	  NodeTraversal.traverse(compiler,    externs,    new    InliningBehavior());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
583	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningEnumLiterals());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  ReferenceCollectingCallback  callback  =  new  ReferenceCollectingCallback(  compiler,  new  InliningBehavior());  callback.process(externs,  root);      [BUGGY]  NodeTraversal.traverse(compiler,  callback,  new  InliningEnumLiterals());  [BUGGY]        [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  ReferenceCollectingCallback  callback  AbstractCompiler  compiler  Set  staleVars  boolean  Node  externs  root  Supplier  safeNameIdSupplier  String  VAR_PREFIX  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	68	68	5	replace	NodeTraversal.traverse(compiler,  callback,  new  InliningEnumLiterals());	  NodeTraversal.traverse(compiler,    callback,    new    InliningObjectLiterals());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
