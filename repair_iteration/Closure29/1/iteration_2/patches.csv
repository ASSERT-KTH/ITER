bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  null;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  null;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  null;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  null;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler!=  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler!=  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
7	[BUG]  [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  staleVars);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  VAR_PREFIX,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError(compiler,  compiler,  staleVars);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  compiler,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  compiler,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  Super(compiler,  safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  safeNameIdSupplier,  false);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  SUPER(compiler,  safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  SUPER(compiler,  safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	SUPER(compiler,  safeNameIdSupplier,  false);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
18	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  true,  staleVars);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  true,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  true,  staleVars);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  null  &&  compiler!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  null  &&  compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier  ==  null  &&  compiler!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
25	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  compiler);	  AssertionFailedError(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  expected);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  expected);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  expected);	  AssertionFailedError(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
27	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  compiler);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  compiler);	  AssertionFailedError(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
28	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  this);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  this);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  null);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  null,  null);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  null);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getName()!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getName()!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getName()!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkNotNull(safeNameIdSupplier);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
34	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  VAR_PREFIX);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
35	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  VAR_PREFIX);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
36	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  null);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError(compiler,  staleVars);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  staleVars);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
38	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  false);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
39	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  true);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  true);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  >=  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  >=  this.safeNameIdSupplier);	  Preconditions.checkState(compiler!=    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier!=  compiler);	  Preconditions.checkState(compiler!=    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  this.SafeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  this.SafeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  this.SafeNameIdSupplier);	  Preconditions.checkState(compiler!=    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isEmpty());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isEmpty());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isEmpty());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isImmutable());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isImmutable());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isImmutable());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isImplicitPrototype());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isImplicitPrototype());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isImplicitPrototype());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
47	[BUG]  [BUGGY]  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
48	[BUG]  [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  compiler);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier  ==  compiler);	  Preconditions.checkState(safeNameIdSupplier!=    compiler);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  >=  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier  >=  null);	  Preconditions.checkState(this.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior,  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior,  false);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  instanceof  InliningBehavior);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  instanceof  InliningBehavior);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler  instanceof  InliningBehavior);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ||  compiler  instanceof  UnknownTypeException);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ||  compiler  instanceof  UnknownTypeException);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  ||  compiler  instanceof  UnknownTypeException);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
58	[BUG]  [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.SafeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.SafeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null);  this.SafeNameIdSupplier  =  compiler.safeNameIdSupplier();	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null  ||  safeNameIdSupplier  ==  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier    ==    null);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null  ||  safeNameIdSupplier  ==  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier    ==    null);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
62	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
63	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  true)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  true)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
64	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
65	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  null)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
66	[BUG]  [BUGGY]  AssertionFailedError(compiler);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler);	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.safeNameIdSupplier  ==  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isDeclared());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isDeclared());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isDeclared());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
70	[BUG]  [BUGGY]  Context.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Context.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isInline(),  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isInline(),  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isInline(),  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
72	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  0)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  0)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  0)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
73	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  0)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  0)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  0)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
74	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  staleVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  false,  staleVars);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  Super(compiler,  safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  safeNameIdSupplier,  true);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  false,  true);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  compiler);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  false,  compiler);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  null);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  false,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  false,  null);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  null)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
80	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  this)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  this)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  this)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
81	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  VAR_PREFIX)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
82	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
83	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkState(safeNameIdSupplier    ==    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  null,  compiler);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  null,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier  ==  null,  compiler);	  Preconditions.checkState(safeNameIdSupplier    ==    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null,  safeNameIdSupplier);	  Preconditions.checkState(safeNameIdSupplier    ==    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null,  safeNameIdSupplier);	  Preconditions.checkState(safeNameIdSupplier    ==    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null,  compiler);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null,  compiler);	  Preconditions.checkState(safeNameIdSupplier    ==    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
89	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  false);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  true);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  0);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  true)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  true)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    true)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    true)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier  }  );  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier  }  );  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier  }  );	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
99	[BUG]  [BUGGY]  super(compiler,  staleVars,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  staleVars,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
100	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  staleVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  staleVars);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  safeNameIdSupplier,  staleVars);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
104	[BUG]  [BUGGY]  super(compiler,  null,  staleVars);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  null,  staleVars);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(compiler.constructType(safeNameIdSupplier)  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.constructType(safeNameIdSupplier)  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.constructType(safeNameIdSupplier)  ==  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(constructType(compiler)  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(constructType(compiler)  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(constructType(compiler)  ==  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(compiler.constructType(safeNameIdSupplier)!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.constructType(safeNameIdSupplier)!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.constructType(safeNameIdSupplier)!=  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)  ==  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)  ==  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isInline());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isInline());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isInline());	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(constructType(compiler)!=  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(constructType(compiler)!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(constructType(compiler)!=  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)!=  null);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isConstructor()  ||  constructType(safeNameIdSupplier)!=  null);	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
112	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
113	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  staleVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  staleVars);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  super(compiler,  staleVars,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  staleVars,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  super(compiler,  null,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  null,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  VAR_PREFIX,  this.staleVars);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  ObjectLiterals)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <  Object>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <  Object>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <  Object>)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.isEmpty());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.isEmpty());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(!safeNameIdSupplier.isEmpty());	  Preconditions.checkNotNull(safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(!safeNameIdSupplier.equals(compiler));	  Preconditions.checkNotNull(safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkArgument(this.safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(this.safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(this.safeNameIdSupplier!=  null);	  Preconditions.checkArgument(safeNameIdSupplier    >=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
127	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
128	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  safeNameIdSupplier,  true);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  safeNameIdSupplier,  compiler.safeNameIdSupplier);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier,  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  safeNameIdSupplier,  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  safeNameIdSupplier,  true);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  safeNameIdSupplier,  compiler.safeNameIdSupplier);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier,  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  safeNameIdSupplier,  this.safeNameIdSupplier);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
134	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  false)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  false)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    false)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
135	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    false)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.EXPR_RESULT);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  false);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT,  true);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
142	[BUG]  [BUGGY]  super(compiler,  this.staleVars,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.staleVars,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
143	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  this.staleVars);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
144	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.staleVars,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
145	[BUG]  [BUGGY]  super(compiler,  staleVars,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  staleVars,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  staleVars,  this.staleVars);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
146	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  staleVars);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.staleVars,  staleVars);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
148	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  false);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT,  true);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
150	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()!=  Token.EXPR_RESULT,  safeNameIdSupplier);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
152	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  staleVars)  {	  AssertionFailedError(compiler,    this.safeNameIdSupplier)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
153	[BUG]  [BUGGY]  preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
154	[BUG]  [BUGGY]  preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
156	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
157	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  staleVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  staleVars);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
158	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  this.staleVars);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
159	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
160	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  false);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
161	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  null);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
162	[BUG]  [BUGGY]  preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler  >=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  true);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
167	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
168	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  false);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  false);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
169	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()!=  Token.NAME);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
170	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier);	  this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
171	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.defaultNameIdSupplier;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  compiler.defaultNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  compiler.defaultNameIdSupplier;	  this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
172	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  compiler,  safeNameIdSupplier;	  this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
173	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null);	  AssertionFailedError(compiler,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
174	[BUG]  [BUGGY]  AnsertionFailedError(compiler,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AnsertionFailedError(compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AnsertionFailedError(compiler,  false);	  AssertionFailedError(compiler,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
175	[BUG]  [BUGGY]  assertionFailedError(compiler,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  assertionFailedError(compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	assertionFailedError(compiler,  false);	  AssertionFailedError(compiler,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
176	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  false);	  AssertionFailedError(compiler,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
177	[BUG]  [BUGGY]  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
178	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  1);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  1);	  AssertionFailedError(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
179	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  0));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  0));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  0));	  AssertionFailedError(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
180	[BUG]  [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
181	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  VAR_PREFIX,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  staleVars)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX,  staleVars)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  VAR_PREFIX,  staleVars)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
183	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
184	[BUG]  [BUGGY]  AssertionFailedError(compiler,  staleVars)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  staleVars)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  staleVars)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
185	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkNotNull(compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkNotNull(compiler,  safeNameIdSupplier);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
186	[BUG]  [BUGGY]  Predicates.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler  ==  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
187	[BUG]  [BUGGY]  Predicates.checkArgument(compiler!=  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkArgument(compiler!=  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
188	[BUG]  [BUGGY]  Predicates.checkArgument(compiler.isInliningBehavior());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler.isInliningBehavior());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkArgument(compiler.isInliningBehavior());	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
189	[BUG]  [BUGGY]  Predicates.checkArgument(compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler.getType()  ==  Token.NAME);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkArgument(compiler.getType()  ==  Token.NAME);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
190	[BUG]  [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.safeNameIdSupplier!=  null);	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.safeNameIdSupplier  ==  null);	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
192	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  >=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.safeNameIdSupplier  >=  null);	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
193	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.SafeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.SafeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.SafeNameIdSupplier!=  null);	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
194	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  >>  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier  >>  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.safeNameIdSupplier  >>  null);	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
195	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.length()  >  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.length()  >  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.length()  >  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
196	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.length()  >  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.length()  >  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.length()  >  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.length()  >  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.length()  >  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.length()  >  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
198	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  ==  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  ==  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  ==  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >=  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >=  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >=  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  <=  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  <=  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  <=  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
201	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
202	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  staleVars);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  null,  staleVars);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
203	[BUG]  [BUGGY]  super(compiler,  null,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  null,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
204	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  null);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  staleVars,  null);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
205	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  compiler);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier  ==  compiler);	  Preconditions.checkState(this.safeNameIdSupplier    ==    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.isEmpty());  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(!safeNameIdSupplier.isEmpty());  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(!safeNameIdSupplier.isEmpty());  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkNotNull(safeNameIdSupplier);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkNotNull(safeNameIdSupplier);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
208	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkNotNull(safeNameIdSupplier);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
210	[BUG]  [BUGGY]  Context.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Context.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()!=  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
213	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  1);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  1);	  super(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
214	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  0,  0);	  super(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
215	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  staleVars);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  0,  staleVars);	  super(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
216	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  0,  null);	  super(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
217	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  0,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  0,  false);	  super(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME,  safeNameIdSupplier);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()!=  Token.NAME);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME,  true);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME,  false);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()!=  Token.NAME,  safeNameIdSupplier);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  >=  safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  >=  safeNameIdSupplier,  true);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null,  false);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  compiler,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier  ==  compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier  ==  compiler,  false);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
227	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null  &&  safeNameIdSupplier.equals(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  ||  safeNameIdSupplier.equals(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
229	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null  ||  safeNameIdSupplier.equals(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.getName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.getName()));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.getName()));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier.equals(compiler));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier.equals(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier.equals(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  >=  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  >=  null,  safeNameIdSupplier);	  Preconditions.checkState(compiler!=    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null,  safeNameIdSupplier));	  Preconditions.checkState(compiler!=    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier  }  );  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier  }  );  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null,  safeNameIdSupplier  }  );	  Preconditions.checkState(compiler!=    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior));	  Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
237	[BUG]  [BUGGY]  Context.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Context.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
238	[BUG]  [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
239	[BUG]  [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Preconditions.checkNotNull(compiler);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Preconditions.checkNotNull(compiler);  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Preconditions.checkNotNull(compiler);  }	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
240	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  if(compiler!=    null)    {    Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
241	[BUG]  [BUGGY]  super(compiler,  staleVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  staleVars);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
242	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  false);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
243	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  null);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
244	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  true);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
245	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler!=  null,  safeNameIdSupplier);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
246	[BUG]  [BUGGY]  Predicates.checkState(compiler  >=  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler  >=  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
247	[BUG]  [BUGGY]  Predicates.checkState(compiler  instanceof  InliningBehavior);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  instanceof  InliningBehavior);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler  instanceof  InliningBehavior);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
248	[BUG]  [BUGGY]  Predicates.checkState(compiler  [Delete]  null);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  [Delete]  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler  [Delete]  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
249	[BUG]  [BUGGY]  super(compiler,  VAR_PREFIX,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  VAR_PREFIX,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  VAR_PREFIX,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
250	[BUG]  [BUGGY]  super(compiler,  this.vAR_PREFIX,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.vAR_PREFIX,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.vAR_PREFIX,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
251	[BUG]  [BUGGY]  super(compiler,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
252	[BUG]  [BUGGY]  super(compiler,  staleVars,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  staleVars,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  staleVars,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
253	[BUG]  [BUGGY]  super(compiler,  null,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  null,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
254	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  compiler,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  compiler,  false);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
255	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(safeNameIdSupplier!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  safeNameIdSupplier);	  Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
257	[BUG]  [BUGGY]  this.staleVars  =  Sets.newHashSet(compiler);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Sets.newHashSet(compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Sets.newHashSet(compiler);	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
258	[BUG]  [BUGGY]  This.staleVars  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  This.staleVars  =  Sets.newHashSet();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	This.staleVars  =  Sets.newHashSet();	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
259	[BUG]  [BUGGY]  this.staleVars  =  Sets.newHashSet(compiler,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Sets.newHashSet(compiler,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Sets.newHashSet(compiler,  VAR_PREFIX);	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
260	[BUG]  [BUGGY]  this.staleVars  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Collections.newHashSet();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Collections.newHashSet();	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
261	[BUG]  [BUGGY]  this.staleVars  =  Sets.newHashSet(1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Sets.newHashSet(1);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Sets.newHashSet(1);	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
262	[BUG]  [BUGGY]  This.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  This.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	This.safeNameIdSupplier  =  compiler;	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
263	[BUG]  [BUGGY]  this.safeNameIdSupplier;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier;	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
264	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  Compiler.newInstance();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier  =  Compiler.newInstance();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier  =  Compiler.newInstance();	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(safeNameIdSupplier    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
266	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  true);	  AssertionFailedError(compiler,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
267	[BUG]  [BUGGY]  AnsertionFailedError(compiler,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AnsertionFailedError(compiler,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AnsertionFailedError(compiler,  true);	  AssertionFailedError(compiler,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
268	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier)  {	  AssertionFailedError(compiler,    this.safeNameIdSupplier)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
269	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.SafeNameIdSupplier)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.SafeNameIdSupplier)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.SafeNameIdSupplier)  {	  AssertionFailedError(compiler,    this.safeNameIdSupplier)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
270	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet())  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet())  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
271	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler!=  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior!=  false)  {  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior!=  false)  {  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior!=  false)  {  Preconditions.checkState(compiler!=  null);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isAssignmentOp());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isAssignmentOp());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isAssignmentOp());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  0;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  0;	  if(compiler!=    null)    {    Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
277	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  null,  false);	  AssertionFailedError(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
278	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  null,  false);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
279	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  null,  0);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(safeNameIdSupplier    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT));	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
282	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier);  }	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
283	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  safeNameIdSupplier);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
284	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier  }  );  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier  }  );  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier  }  );	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
285	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  safeNameIdSupplier,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
286	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.newHashSet());	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getName()  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getName()  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getName()  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkNotNull(safeNameIdSupplier);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  safeNameIdSupplier  >=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  &&  safeNameIdSupplier  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null  &&  safeNameIdSupplier  >=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  safeNameIdSupplier);	  Preconditions.checkState(compiler!=    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isConstructor());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isConstructor());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isConstructor());	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
291	[BUG]  [BUGGY]  AssertionFailedError(compiler,  0)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  0)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  0)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
292	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  0)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  0)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  0)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
293	[BUG]  [BUGGY]  Super(compiler,  safeNameIdSupplier,  compiler);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  safeNameIdSupplier,  compiler);	  super(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  false);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  {  false);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
296	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length()  >  0);	  Preconditions.checkState(safeNameIdSupplier    >=    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
297	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier  ==  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
298	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler!=  null  &&  safeNameIdSupplier!=  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
299	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  true);	  AssertionFailedError(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
300	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  false);	  AssertionFailedError(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
301	[BUG]  [BUGGY]  super(compiler,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.staleVars);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
302	[BUG]  [BUGGY]  Super(compiler,  this.staleVars,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  this.staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  this.staleVars,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
303	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
304	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  compiler);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  compiler);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
305	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  compiler);	  AssertionFailedError(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isInterface());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isInterface());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isInterface());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isNamed());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isNamed());  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isNamed());  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
308	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier.equals(compiler.getName()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier.equals(compiler.getName()));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier.equals(compiler.getName()));	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler,  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkNotNull(compiler,  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkNotNull(compiler,  this.safeNameIdSupplier);	  Preconditions.checkNotNull(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
311	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.getNameIdSupplier();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.getNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.getNameIdSupplier();	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
312	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
313	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  0);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
314	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);	  super(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
316	[BUG]  [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(this.safeNameIdSupplier  ==  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(this.safeNameIdSupplier  ==  null,  safeNameIdSupplier);	  Preconditions.checkState(safeNameIdSupplier    ==    null,    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
317	[BUG]  [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arra  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arra  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arra	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
318	[BUG]  [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Context.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
319	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  0;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  0;	  if(compiler!=    null)    {    Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
320	[BUG]  [BUGGY]  super(compiler,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  null);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
321	[BUG]  [BUGGY]  super(compiler,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  false);	  super(compiler,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null,  false);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  this.safeNameIdSupplier,  false);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
324	[BUG]  [BUGGY]  AnsertionFailedError(compiler,  true)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AnsertionFailedError(compiler,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AnsertionFailedError(compiler,  true)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
325	[BUG]  [BUGGY]  assertionFailedError(compiler,  true)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  assertionFailedError(compiler,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	assertionFailedError(compiler,  true)  {	  AssertionFailedError(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
326	[BUG]  [BUGGY]  Super(compiler,  staleVars,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  staleVars,  safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
327	[BUG]  [BUGGY]  super(compiler,  false,  VAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  false,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  false,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler  >=  null);	  Preconditions.checkArgument(compiler    ==    null);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null,  safeNameIdSupplier);	  Preconditions.checkArgument(compiler    ==    null);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
330	[BUG]  [BUGGY]  SUPER(compiler,  safeNameIdSupplier,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  SUPER(compiler,  safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	SUPER(compiler,  safeNameIdSupplier,  true);	  super(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
331	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  null;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  null;	  Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    null;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
332	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME  &&  safeNameIdSupplier!=  null);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
333	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
334	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null  &&  safeNameIdSupplier  ==  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null);  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkState(safeNameIdSupplier!=    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
336	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.VAR);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
338	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  null)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
339	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  null)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  false);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT));	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT),  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT),  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT),  safeNameIdSupplier);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EMPTY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EMPTY);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EMPTY);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  compiler);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  this.safeNameIdSupplier,  compiler);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
345	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  safeNameIdSupplier);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
346	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  safeNameIdSupplier);	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
347	[BUG]  [BUGGY]  super(compiler,  this.safeNameIdSupplier,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.safeNameIdSupplier,  true);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  this.safeNameIdSupplier,  true);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
348	[BUG]  [BUGGY]  this.safeNameIdSupplier,  compiler);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier,  compiler);	  this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null  &&  safeNameIdSupplier  ==  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier    ==    null);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
350	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  true)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  true)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    true)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
351	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
352	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this(compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this(compiler,  safeNameIdSupplier);	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
353	[BUG]  [BUGGY]  AssertionFailedError(compiler,  true,  false)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  true,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  true,  false)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    false)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
354	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  false)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  false)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    false)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
355	[BUG]  [BUGGY]  Predicates.checkArgument(compiler  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkArgument(compiler  ==  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
356	[BUG]  [BUGGY]  Predicates.checkNotEmpty(compiler);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkNotEmpty(compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkNotEmpty(compiler);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
357	[BUG]  [BUGGY]  this.staleVars  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Sets.newLinkedHashSet();  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Sets.newLinkedHashSet();	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
358	[BUG]  [BUGGY]  this.staleVars  =  Sets.newHashSetWithCapacity(compiler);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.staleVars  =  Sets.newHashSetWithCapacity(compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.staleVars  =  Sets.newHashSetWithCapacity(compiler);	  this.staleVars    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
359	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  safeNameIdSupplier);	  Preconditions.checkState(safeNameIdSupplier!=    compiler);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
360	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
361	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkArgument(compiler.isAll());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
362	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.isAssignableFrom(safeNameIdSupplier));  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.isAssignableFrom(safeNameIdSupplier));  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.isAssignableFrom(safeNameIdSupplier));  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkArgument(compiler.isAll());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	91	None	replace
363	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  if(compiler!=    null)    {    Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
364	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX),  staleVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  VAR_PREFIX),  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  VAR_PREFIX),  staleVars);	  super(compiler,    safeNameIdSupplier,    VAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
365	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.GETPROP);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.GETPROP);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
368	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.NAME);	  Preconditions.checkArgument(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
369	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkArgument(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkArgument(compiler    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
370	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.startsWith(compiler));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.startsWith(compiler));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.startsWith(compiler));	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.equals(compiler));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
371	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.staleVars,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.staleVars,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.staleVars);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
372	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  SafeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  SafeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  SafeNameIdSupplier);	  Preconditions.checkState(compiler    >=    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
373	[BUG]  [BUGGY]  AssertionFailedError(compiler,  null,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  null,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  null,  null);	  AssertionFailedError(compiler,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
374	[BUG]  [BUGGY]  Predicates.checkArgument(compiler.isInline());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler.isInline());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkArgument(compiler.isInline());	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
375	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  compiler);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  null,  compiler);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
376	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  null,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  null,  null);	  super(compiler,    safeNameIdSupplier,    null);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
377	[BUG]  [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Context.checkState(compiler!=  null;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Context.checkState(compiler!=  null;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Context.checkState(compiler!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
378	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.VAR);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
379	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.EXPR_RESULT  ||  compiler.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(compiler.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
380	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  compiler,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  compiler,  safeNameIdSupplier);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
381	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  safeNameIdSupplier,  compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  >=  safeNameIdSupplier,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  >=  safeNameIdSupplier,  compiler);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
382	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null  &&  compiler.isInline());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null  &&  compiler.isInline());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Predicates.checkState(compiler!=  null  &&  compiler.isInline());	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
383	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  if(compiler!=    null)    {    Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
384	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  this.safeNameIdSupplier);	  Preconditions.checkState(compiler!=    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
385	[BUG]  [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  compiler.isInterface());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.isConstructor()  ||  compiler.isInterface());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.isConstructor()  ||  compiler.isInterface());	  Preconditions.checkState(constructType(safeNameIdSupplier)    ==    null);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
386	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  >=  false)  {  Preconditions.checkState(compiler  ==  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
387	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler!=  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler!=  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior)  {  Preconditions.checkState(compiler!=  safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
388	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Sets.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Sets.  <  String>emptySet());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  Sets.  <  String>emptySet());	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
389	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Collections.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Collections.  <  String>emptySet());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  Collections.  <  String>emptySet());	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
390	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Predicates.  <  String>emptySet());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  InlineObjectLiterals(compiler,  staleVars,  Predicates.  <  String>emptySet());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	InlineObjectLiterals(compiler,  staleVars,  Predicates.  <  String>emptySet());	  InlineObjectLiterals(compiler,    staleVars);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
391	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.VAR_PREFIX);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
392	[BUG]  [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  this.safeNameIdSupplier,  this.vAR_PREFIX);	  AssertionFailedError(compiler,    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
393	[BUG]  [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier!=  safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier!=  safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.safeNameIdSupplier!=  safeNameIdSupplier,  false);	  Preconditions.checkState(compiler!=    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
394	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
395	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler.isInline());  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkState(compiler.isInline());    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
396	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  compiler.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  compiler.safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
397	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.safeNameIdSupplier);	  super(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
398	[BUG]  [BUGGY]  Super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Super(compiler,  safeNameIdSupplier,  staleVars,  VAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
399	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  Sets.newHashSet());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  Sets.newHashSet());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  Sets.newHashSet());	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
400	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  NUMBER_PREFIX);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  staleVars,  NUMBER_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  staleVars,  NUMBER_PREFIX);	  super(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
401	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  unsafeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  unsafeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  unsafeNameIdSupplier);	  Preconditions.checkState(safeNameIdSupplier!=    compiler);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
402	[BUG]  [BUGGY]  if(compiler  ==  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler  ==  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler  ==  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
403	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdS  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdS  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdS	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
404	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  false,  compiler);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  false,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  false,  compiler);	  AssertionFailedError(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
405	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  false,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  false,  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  false,  null);	  AssertionFailedError(compiler,    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
406	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  compiler;	  Preconditions.checkState(safeNameIdSupplier!=    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <?>);	  Preconditions.checkState(compiler    instanceof    InliningBehavior);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length  >  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length  >  0);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier!=  null  &&  safeNameIdSupplier.length  >  0);	  Preconditions.checkArgument(safeNameIdSupplier!=    null    &&    safeNameIdSupplier.length()    >    0);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
409	[BUG]  [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier  ==  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.safeNameIdSupplier  ==  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.safeNameIdSupplier  ==  false);	  Preconditions.checkState(compiler    ==    safeNameIdSupplier,    false);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
410	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
411	[BUG]  [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(safeNameIdSupplier  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  Preconditions.checkState(safeNameIdSupplier!=    null);    this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
412	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
413	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isInline());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isInline());  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isInline());	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
414	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  staleVars);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  staleVars,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
415	[BUG]  [BUGGY]  AssertionFailedError(compiler,  false,  staleVars);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  false,  staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  false,  staleVars);	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
416	[BUG]  [BUGGY]  supervise(compiler,  safeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  supervise(compiler,  safeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	supervise(compiler,  safeNameIdSupplier,  false);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
417	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  true,  compiler);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  true,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  true,  compiler);	  super(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
418	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.safeNameIdSupplier));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.safeNameIdSupplier));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.safeNameIdSupplier!=  null  &&  safeNameIdSupplier.equals(compiler.safeNameIdSupplier));	  Preconditions.checkArgument(compiler.safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
419	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.staleVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.staleVars);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.staleVars);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
420	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.vAR_PREFIX);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.vAR_PREFIX);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	super(compiler,  safeNameIdSupplier,  this.vAR_PREFIX,  this.vAR_PREFIX);	  super(compiler,    safeNameIdSupplier,    this.vAR_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
421	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
422	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }	  Preconditions.checkState(compiler!=    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
423	[BUG]  [BUGGY]  AssertionFailedError(compiler,  compiler,  safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  compiler,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  compiler,  safeNameIdSupplier);	  AssertionFailedError(compiler,    safeNameIdSupplier,    compiler);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
424	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <=  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  <=  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  <=  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
425	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  ==  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
426	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler  instanceof  InliningBehavior  {  this.safeNameIdSupplier);	  Preconditions.checkState(compiler    instanceof    InliningBehavior)    {    Preconditions.checkState(compiler    ==    this.safeNameIdSupplier);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
427	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  InliningBehavior.class);	  AssertionFailedError(compiler,    safeNameIdSupplier,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
428	[BUG]  [BUGGY]  AssertionFailedError(compiler,  unsafeNameIdSupplier,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  unsafeNameIdSupplier,  false);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  unsafeNameIdSupplier,  false);	  AssertionFailedError(compiler,    safeNameIdSupplier,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
429	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkArgument(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  }	  Preconditions.checkArgument(compiler!=    null);    this.safeNameIdSupplier    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
430	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null  &&  compiler.isEnabled(Feature.QUOTE_FIELD_NAMES));	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
431	[BUG]  [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(safeNameIdSupplier!=  null  &&  compiler  ==  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier    ==    null);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
432	[BUG]  [BUGGY]  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier,  safeNameIdSupplier);	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
433	[BUG]  [BUGGY]  this.safeNameIdSupplier,  safeNameIdSupplier;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  this.safeNameIdSupplier,  safeNameIdSupplier;  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	this.safeNameIdSupplier,  safeNameIdSupplier;	  this.safeNameIdSupplier    =    safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
434	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);	  Preconditions.checkState(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null,  safeNameIdSupplier!=  null);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkState(compiler!=  null,  safeNameIdSupplier!=  null);	  Preconditions.checkState(compiler!=    null    &&    safeNameIdSupplier!=    null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
436	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  }	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
437	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  }	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
438	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
439	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler  ==  null;  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  }	  Preconditions.checkState(compiler    ==    null);    this.safeNameIdSupplier    =    compiler.safeNameIdSupplier();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
440	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
441	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
442	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
443	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.  <  String>emptySet())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  Sets.  <  String>emptySet())  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
444	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  setVars)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      InlineObjectLiterals(  AbstractCompiler  compiler,      [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier,  setVars)  {  [BUGGY]      this.compiler  =  compiler;  this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	58	58	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier,  setVars)  {	  AssertionFailedError(compiler,    safeNameIdSupplier,    staleVars)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
