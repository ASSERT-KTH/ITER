bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getCompiler();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getCompiler();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler,  safeNameIdSupplier.getCompiler();	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  this.compiler  =  compiler.findCompiler(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.findCompiler(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.findCompiler(safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
3	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this.safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(this.safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
4	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(null);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(null);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  variable  safeNameIdSupplier  might  already  have  been  assigned  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  variable  safeNameIdSupplier  might  already  have  been  assigned	13	None	replace
6	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  variable  safeNameIdSupplier  might  already  have  been  assigned  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  variable  safeNameIdSupplier  might  already  have  been  assigned	13	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	13	None	replace
8	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  incompatible  types	13	None	replace
9	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  variable  safeNameIdSupplier  might  already  have  been  assigned  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  safeNameIdSupplier;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  variable  safeNameIdSupplier  might  already  have  been  assigned	13	None	replace
11	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  staleVars);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol  staleVars	3	None	replace
12	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  VAR_PREFIX);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  VAR_PREFIX);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  VAR_PREFIX);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
13	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  null);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  null);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  null);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
14	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  false);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  false);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  false);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
15	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  true);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  true);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  true);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
16	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  0);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  0);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  0);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
17	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  compiler);  [CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  compiler);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  constructor  InlineObjectLiterals  in  class  InlineObjectLiterals  cannot  be  applied  to  given  types;	3	None	replace
18	[BUG]  [BUGGY]  this.compiler  =  compiler.getParameterTypes(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getParameterTypes(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getParameterTypes(safeNameIdSupplier);	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
19	[BUG]  [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getParameterTypes();  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getParameterTypes();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler,  safeNameIdSupplier.getParameterTypes();	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  ';'  expected	5	None	replace
20	[BUG]  [BUGGY]  this.compiler  =  compiler.findParameterTypes(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.findParameterTypes(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.findParameterTypes(safeNameIdSupplier);	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
21	[BUG]  [BUGGY]  this.compiler  =  compiler.withParameterTypes(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.withParameterTypes(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.withParameterTypes(safeNameIdSupplier);	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
22	[BUG]  [BUGGY]  this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier);	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  ';'  expected	5	None	replace
23	[BUG]  [BUGGY]  this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier;  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getParameterTypes(),  safeNameIdSupplier;	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  ';'  expected	5	None	replace
24	[BUG]  [BUGGY]  This.safeNameIdSupplier  =  compiler;  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  This.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	This.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  cannot  find  symbol  This	15	None	replace
25	[BUG]  [BUGGY]  super(compiler,  safeNameIdSupplier);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  super(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	super(compiler,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	15	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	replace
27	[BUG]  [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  AssertionFailedError(compiler,  safeNameIdSupplier)  {  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	AssertionFailedError(compiler,  safeNameIdSupplier)  {	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	AssertionFailedError(compiler,  staleVars,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	7	None	replace
29	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	7	None	replace
30	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  compiler);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  compiler);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
31	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.getCompiler(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.safeNameIdSupplier  =  compiler.getCompiler(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.safeNameIdSupplier  =  compiler.getCompiler(safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
32	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
33	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(SafeNameIdSupplier.class);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(SafeNameIdSupplier.class);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(SafeNameIdSupplier.class);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
34	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(safeNameIdSupplier,  staleVars);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol  staleVars	2	None	replace
35	[BUG]  [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getCompiler(compiler);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getCompiler(compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler,  safeNameIdSupplier.getCompiler(compiler);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  ';'  expected	2	None	replace
36	[BUG]  [BUGGY]  this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier);	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  ';'  expected	4	None	replace
37	[BUG]  [BUGGY]  this.compiler  =  compiler.getInitialValue(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getInitialValue(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getInitialValue(safeNameIdSupplier);	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
38	[BUG]  [BUGGY]  this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier;  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getInitialValue(),  safeNameIdSupplier;	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getInitialValue();  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler,  safeNameIdSupplier.getInitialValue();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler,  safeNameIdSupplier.getInitialValue();	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  ';'  expected	4	None	replace
40	[BUG]  [BUGGY]  this.compiler  =  compiler.findInitialValue(safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.findInitialValue(safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.findInitialValue(safeNameIdSupplier);	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler!=  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler!=  safeNameIdSupplier);	      	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	6	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler  ==  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler  ==  safeNameIdSupplier);	      	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	6	None	replace
43	[BUG]  [BUGGY]  InlineObjectLiterals(compiler,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  InlineObjectLiterals(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	InlineObjectLiterals(compiler,  safeNameIdSupplier);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
44	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
46	[BUG]  [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
47	[BUG]  [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  AssertionFailedError(compiler,  VAR_PREFIX);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	AssertionFailedError(compiler,  VAR_PREFIX);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
48	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	8	None	replace
49	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	replace
51	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	11	None	replace
52	[BUG]  [BUGGY]  Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [CE]  variable  safeNameIdSupplier  is  already  defined  in  constructor  InlineObjectLiterals(AbstractCompiler,Supplier<String>)  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  variable  safeNameIdSupplier  is  already  defined  in  constructor  InlineObjectLiterals(AbstractCompiler,Supplier<String>)	11	None	replace
53	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	11	None	replace
55	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameI  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameI  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameI	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	12	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	12	None	replace
58	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(this.staleVars,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(this.staleVars,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(this.staleVars,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	12	None	replace
59	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	9	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	9	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  VAR_PREFIX);  [CE]  cannot  find  symbol  staleVars  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  VAR_PREFIX);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  VAR_PREFIX);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	9	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  this.staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  this.staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  this.staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	9	None	replace
63	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    1,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
65	[BUG]  [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  cannot  find  symbol  safeNameIdSupplier  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  safeNameIdSupplier	16	None	replace
66	[BUG]  [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
67	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.safeNameIdSupplier  =  compiler.safeNameIdSupplier();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
68	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
69	[BUG]  [BUGGY]  Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();  [CE]  variable  safeNameIdSupplier  is  already  defined  in  constructor  InlineObjectLiterals(AbstractCompiler,Supplier<String>)  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  safeNameIdSupplier  =  Sets.newHashSet();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  variable  safeNameIdSupplier  is  already  defined  in  constructor  InlineObjectLiterals(AbstractCompiler,Supplier<String>)	10	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'  expected;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'  expected;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  ')'  expected;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
71	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  ')'  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  ')'  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  ')'	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
72	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
73	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'  expected;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'  expected;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  ')'  expected;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
74	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(hashCode,  safeNameIdSupplier);  [CE]  cannot  find  symbol  hashCode  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(hashCode,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(hashCode,  safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler(safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol  hashCode	2	None	replace
75	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  }  [CE]  cannot  find  symbol  staleVars  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	11	None	replace
76	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
77	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSuppli  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSuppli  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSuppli	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  ')'  expected	11	None	replace
78	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  ')'  expected	11	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdS	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
80	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this.staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(this.staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(this.staleVars);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol  staleVars	1	None	replace
81	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(false);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(false);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(false);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
82	[BUG]  [BUGGY]  this.compiler  =  compiler.createCompiler(compiler);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.createCompiler(compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.createCompiler(compiler);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
83	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier.getInitialValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier.getInitialValue());  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier.getInitialValue());	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
84	[BUG]  [BUGGY]  this.compiler  =  compiler.getParameterTypes(SafeNameIdSupplier.class);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getParameterTypes(SafeNameIdSupplier.class);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getParameterTypes(SafeNameIdSupplier.class);	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
85	[BUG]  [BUGGY]  this.compiler  =  compiler.getParameterLiterals();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getParameterLiterals();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getParameterLiterals();	  this.compiler    =    compiler.getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
86	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	replace
87	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	replace
88	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }  [CE]  cannot  find  symbol  compileNameIdSupplier  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compileNameIdSupplier	16	None	replace
89	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
90	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
91	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleV  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleV  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleV	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
92	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
93	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(compiler);	      	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	6	None	replace
95	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    1,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
96	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    1,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
97	[BUG]  [BUGGY]  staleVars  =  Sets.newHashSet();  [CE]  cannot  find  symbol  staleVars  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  staleVars  =  Sets.newHashSet();  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	staleVars  =  Sets.newHashSet();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  cannot  find  symbol  staleVars	8	None	replace
98	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  NUMBER_PREFIX);  [CE]  cannot  find  symbol  NUMBER_PREFIX  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  NUMBER_PREFIX);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  NUMBER_PREFIX);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_PREFIX	3	None	replace
99	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  this.safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  ==  this.safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  cannot  find  symbol  staleVars	10	None	replace
100	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  this.safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier!=  this.safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  cannot  find  symbol  staleVars	10	None	replace
101	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >>  this.safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >>  this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >>  this.safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  cannot  find  symbol  staleVars	10	None	replace
102	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  this.safeNameIdSupplier);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  }  this.safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  ')'  expected	10	None	replace
103	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >=  this.safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >=  this.safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier  >=  this.safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier    	non-compiled	[CE]  cannot  find  symbol  staleVars	10	None	replace
104	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
105	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeName  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeName  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeName	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
106	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(safeNameIdSupplier,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	replace
107	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	replace
108	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(compiler);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(compiler);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
109	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInstance(compiler,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompilerInstance(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompilerInstance(compiler,  safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
110	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(compiler,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompiler(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompiler(compiler,  safeNameIdSupplier);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
111	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInstance(compiler);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.getCompilerInstance(compiler);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.getCompilerInstance(compiler);	  this.compiler    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
112	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [CE]  cannot  find  symbol  compilers  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  1,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    1,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compilers	17	None	replace
113	[BUG]  [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier,  safeNameIdSupplier);  }  [CE]  cannot  find  symbol  compileNameIdSupplier  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compileNameIdSupplier	16	None	replace
114	[BUG]  [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	16	None	replace
115	[BUG]  [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }  [CE]  cannot  find  symbol  compileNameIdSupplier  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(safeNameIdSupplier!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  compileNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    compileNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compileNameIdSupplier	16	None	replace
116	[BUG]  [BUGGY]  this.compiler  =  compiler.findInitialValue(compiler,  safeNameIdSupplier);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.compiler  =  compiler.findInitialValue(compiler,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.compiler  =  compiler.findInitialValue(compiler,  safeNameIdSupplier);	  this.compiler    =    compiler.getInitialValue();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
117	[BUG]  [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier,  staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	12	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(compiler);  this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  incompatible  types	13	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  compiler;  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkNotNull(safeNameIdSupplier);  this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Preconditions.checkNotNull(compiler);    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  incompatible  types	13	None	replace
120	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [CE]  cannot  find  symbol  compilers  [FE]        AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  0,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compilers	7	None	replace
121	[BUG]  [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
122	[BUG]  [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier,    	non-compiled	[CE]  ')'  expected	8	None	replace
123	[BUG]  [BUGGY]  Iterator  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  HashSet<E>  conforms  to  Iterator<String>  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Iterator  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Iterator  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  HashSet<E>  conforms  to  Iterator<String>	11	None	replace
124	[BUG]  [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [CE]  cannot  find  symbol  staleVars  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  0,  safeNameIdSupplier);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    0,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	11	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  variable  safeNameIdSupplier  might  already  have  been  assigned  [FE]                  AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	      	non-compiled	[CE]  variable  safeNameIdSupplier  might  already  have  been  assigned	6	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [CE]  variable  safeNameIdSupplier  might  already  have  been  assigned  [FE]                    AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  safeNameIdSupplier;	      	non-compiled	[CE]  variable  safeNameIdSupplier  might  already  have  been  assigned	6	None	replace
127	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                      AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler!=  null);	      	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	6	None	replace
128	[BUG]  [BUGGY]  this(compiler,  safeNameIdSupplier,  STATIC_PREFIX);  [CE]  cannot  find  symbol  STATIC_PREFIX  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this(compiler,  safeNameIdSupplier,  STATIC_PREFIX);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this(compiler,  safeNameIdSupplier,  STATIC_PREFIX);	  this(compiler,    safeNameIdSupplier);    	non-compiled	[CE]  cannot  find  symbol  STATIC_PREFIX	3	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  this.staleVars);  [CE]  cannot  find  symbol  staleVars  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  this.staleVars);  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	System.arraycopy(compiler,  0,  this.safeNameIdSupplier,  this.staleVars);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  cannot  find  symbol  staleVars	9	None	replace
130	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  s  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  s  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  Set  <  String>  staleVars  =  Sets.newHashSet();  System.arraycopy(compiler,  0,  this.staleVars,  safeNameIdSupplier,  s	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    Set    <    String>    staleVars    =    Sets.newHashSet();    System.arraycopy(compiler,    0,    this.staleVars,    safeNameIdSupplier,    staleVars);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler!=  null);  this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  incompatible  types	15	None	replace
132	[BUG]  [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [CE]  cannot  find  symbol  safeNameIdSupplier  [FE]              AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	this.safeNameIdSupplier  =  compiler.safeNameIdSupplier;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  cannot  find  symbol  safeNameIdSupplier	15	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	Preconditions.checkState(compiler  ==  null);  this.safeNameIdSupplier  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    this.safeNameIdSupplier    =    safeNameIdSupplier;    }    	non-compiled	[CE]  incompatible  types	15	None	replace
134	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [CE]  cannot  find  symbol  compilers  [FE]          AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compilers,  0,  this.safeNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  cannot  find  symbol  compilers	14	None	replace
135	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    InlineObjectLiterals(  AbstractCompiler  compiler,  Supplier<String>  safeNameIdSupplier)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  safeNameIdSupplier);  }  [BUGGY]    this.safeNameIdSupplier  =  safeNameIdSupplier;  }  [CLASS]  InlineObjectLiterals  InliningBehavior  1  [METHOD]  <init>  [RETURN_TYPE]  Supplier)  AbstractCompiler  compiler  String>  safeNameIdSupplier  [VARIABLES]  AbstractCompiler  compiler  Supplier  safeNameIdSupplier  Set  staleVars  String  VAR_PREFIX  boolean  	projects/Closure29/src/com/google/javascript/jscomp/InlineObjectLiterals.java	0.3492151478847891	59	59	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.safeNameIdSupplier,  safeNameIdSupplier);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.safeNameIdSupplier,    safeNameIdSupplier);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	replace
