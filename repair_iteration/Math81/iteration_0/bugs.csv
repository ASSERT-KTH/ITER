bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throws InvalidMatrixException { [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) [BUGGY] throws InvalidMatrixException { [BUGGY]  this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	191	191	1	replace	
2	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) [BUGGY] [BUGGY] throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	191	191	1	add	
3	[BUG] [BUGGY] this.main= main.clone(); [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { [BUGGY] this.main= main.clone(); [BUGGY] this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; }  [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	193	193	1	replace	
4	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { [BUGGY] [BUGGY] this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; }  [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	193	193	1	add	
5	[BUG] [BUGGY] this.secondary = secondary.clone(); [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); [BUGGY] this.secondary = secondary.clone(); [BUGGY] transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	194	194	1	replace	
6	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); [BUGGY] [BUGGY] this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	194	194	1	add	
7	[BUG] [BUGGY] transformer= null; [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); [BUGGY] transformer= null; [BUGGY]   squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	195	195	1	replace	
8	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); [BUGGY] [BUGGY] transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	195	195	1	add	
9	[BUG] [BUGGY] squaredSecondary = new double[secondary.length]; [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  [BUGGY] squaredSecondary = new double[secondary.length]; [BUGGY] for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	198	198	1	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  [BUGGY] [BUGGY] squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	198	198	1	add	
11	[BUG] [BUGGY] for (int i = 0; i < squaredSecondary.length; ++i) { [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; [BUGGY] for (int i = 0; i < squaredSecondary.length; ++i) { [BUGGY] final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	
12	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] public EigenDecompositionImpl(final double[] main, double[] secondary, final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; [BUGGY] [BUGGY] for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	add	
13	[BUG] [BUGGY] final double s = secondary[i]; [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { [BUGGY] final double s = secondary[i]; [BUGGY] squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	200	200	1	replace	
14	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] final double splitTolerance) throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { [BUGGY] [BUGGY] final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	200	200	1	add	
15	[BUG] [BUGGY] squaredSecondary[i] = s * s; [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; [BUGGY] squaredSecondary[i] = s * s; [BUGGY] } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	201	201	1	replace	
16	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] throws InvalidMatrixException { this.main= main.clone(); this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; [BUGGY] [BUGGY] squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	201	201	1	add	
17	[BUG] [BUGGY] this.splitTolerance = splitTolerance; [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } [BUGGY] this.splitTolerance = splitTolerance; [BUGGY] decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	204	204	1	replace	
18	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] this.secondary = secondary.clone(); transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } [BUGGY] [BUGGY] this.splitTolerance = splitTolerance; decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	204	204	1	add	
19	[BUG] [BUGGY] decompose(); [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; [BUGGY] decompose(); [BUGGY]  } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	205	205	1	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException testMath308 [CONTEXT] transformer= null;  squaredSecondary = new double[secondary.length]; for (int i = 0; i < squaredSecondary.length; ++i) { final double s = secondary[i]; squaredSecondary[i] = s * s; } this.splitTolerance = splitTolerance; [BUGGY] [BUGGY] decompose(); } [CLASS] EigenDecompositionImpl Solver [METHOD] <init> [RETURN_TYPE] EigenDecompositionImpl(double[],double[],double)  final double[] main double[] secondary final double splitTolerance [VARIABLES] boolean double[] imagEigenvalues main realEigenvalues secondary squaredSecondary work ArrayRealVector[] eigenvectors RealMatrix cachedD cachedV cachedVt matrix double TOLERANCE TOLERANCE_2 dMin dMin1 dMin2 dN dN1 dN2 eMin g lowerSpectra minPivot qMax s sigma sigmaLow splitTolerance tau upperSpectra int i pingPong tType TriDiagonalTransformer transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	205	205	1	add	
