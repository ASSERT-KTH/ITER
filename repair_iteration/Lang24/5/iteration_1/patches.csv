bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(numeric    +   ",    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
2	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  Integer  str  =  numeric.intValue();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  numeric.intValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  numeric.intValue();	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  not  a  statement	14	None	replace
4	[BUG]  [BUGGY]  Integer  str  =  null;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  null;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  null;	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  not  a  statement	14	None	replace
5	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  0);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  len);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
8	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  dec  =  NumberUtils.createInteger(numeric);	      	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  break;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.');  break;  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.');  break;	      	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric);  break;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric);  break;  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  dec  =  NumberUtils.createInteger(numeric);  break;	      	non-compiled	[CE]  not  a  statement	4	None	replace
11	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  not  a  statement	4	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length());  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  null.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  null.length());	      String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
15	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.substring(0,  str.length());	      String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
16	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  null.length()  -  1);	      String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
17	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( "Invalid  number: "  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.substring(1));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric.substring(1));	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.substring(2));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.substring(2));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric.substring(2));	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
21	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.intValue());  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric.intValue());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric.intValue());	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(1));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  Integer.parseInt(numeric.substring(1));	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(2));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric.substring(2));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  Integer.parseInt(numeric.substring(2));	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  Integer  str  =  Integer.parseInt(numeric)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.parseInt(numeric)+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  Integer.parseInt(numeric)+  1;	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  not  a  statement	6	None	replace
25	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.toLowerCase();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.toLowerCase();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
26	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  number.length()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.substring(0,  number.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.substring(0,  number.length()  -  1);	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
27	[BUG]  [BUGGY]  String  str  =  numeric.trim();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.trim();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.')+  2;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
30	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  0;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.')+  0;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
32	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  str  + "  is  not  a  valid  number.  If(numeric.charAt(0)  ==  '-')  {  throw  new  NumberFormatException( " ");  }	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
33	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( "Number  format  exception: "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "Number    format    exception:   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
34	[BUG]  [BUGGY]  String  str  =  null.trim();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  null.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  null.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  not  a  statement	16	None	replace
35	[BUG]  [BUGGY]  String  str  =  this.mant.trim();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  this.mant.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  this.mant.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  not  a  statement	16	None	replace
36	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  str.lastIndexOf('.',  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  str.lastIndexOf('.',  1);	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
37	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  str.lastIndexOf('.',  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  str.lastIndexOf('.',  0);	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
38	[BUG]  [BUGGY]  char  str  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  char  str  =  str.lastIndexOf('.');  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	char  str  =  str.lastIndexOf('.');	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
39	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  str.lastIndexOf('.',  -1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  str.lastIndexOf('.',  -1);	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
40	[BUG]  [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  str);	  new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
41	[BUG]  [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  one. ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  one. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  one. ");	  new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  dec);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  dec);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  dec);	  throw    new    NumberFormatException(dec    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	20	None	replace
43	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Throwables.throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");	  Throwables.throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
44	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( " ",  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.throw  new  NumberFormatException( " ",  str  + "  is  not  a  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Throwables.throw  new  NumberFormatException( " ",  str  + "  is  not  a  valid  number. ");	  Throwables.throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  String  str  =  getStringValue(numeric);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  getStringValue(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  getStringValue(numeric);	      String    str    =    getNumericValue(numeric);    	non-compiled	[CE]  not  a  statement	15	None	replace
46	[BUG]  [BUGGY]  String  str  =  getShortValue(numeric);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  getShortValue(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  getShortValue(numeric);	      String    str    =    getNumericValue(numeric);    	non-compiled	[CE]  not  a  statement	15	None	replace
47	[BUG]  [BUGGY]  String  str  =  getNumberValue(numeric);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  getNumberValue(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  getNumberValue(numeric);	      String    str    =    getNumericValue(numeric);    	non-compiled	[CE]  not  a  statement	15	None	replace
48	[BUG]  [BUGGY]  String  str  =  getValue(numeric);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  getValue(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  getValue(numeric);	      String    str    =    getNumericValue(numeric);    	non-compiled	[CE]  not  a  statement	15	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.',  decPos);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
51	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.',  1);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
52	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");	  throw    new    NumberFormatException(numeric    +   ",    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
53	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  numeric  value  returns  numeric. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
54	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  -1);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
55	[BUG]  [BUGGY]  String  str  =  dec.trim();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  dec.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  dec.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  not  a  statement	16	None	replace
56	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric,  0);	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric,  1);	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
58	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  numeric  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( " "  +  numeric  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( " "  +  numeric  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
59	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.substring(0,  numeric.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.substring(0,  numeric.length()  -  1);	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
60	[BUG]  [BUGGY]  String  str  =  numeric.toString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.toString();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
61	[BUG]  [BUGGY]  new  NumberFormatException(numeric  + "  must  be  valid  number. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  new  NumberFormatException(numeric  + "  must  be  valid  number. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	new  NumberFormatException(numeric  + "  must  be  valid  number. ");	  new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  int  str  =  numeric.lastIndexOf('.');  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  numeric.lastIndexOf('.');  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  numeric.lastIndexOf('.');	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
63	[BUG]  [BUGGY]  int  str  =  this.str.lastIndexOf('.');  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  this.str.lastIndexOf('.');  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  this.str.lastIndexOf('.');	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
64	[BUG]  [BUGGY]  int  str  =  null.lastIndexOf('.');  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  str  =  null.lastIndexOf('.');  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  str  =  null.lastIndexOf('.');	      int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
65	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.parseInt(numeric);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.parseInt(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.parseInt(numeric);	      Integer    str    =    Integer.parseInt(numeric);    	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.',  0);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	8	None	replace
68	[BUG]  [BUGGY]  Integer  str  =  numeric.valueOf(0);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  numeric.valueOf(0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  numeric.valueOf(0);	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  not  a  statement	14	None	replace
69	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException(numeric  +  str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.throw  new  NumberFormatException(numeric  +  str  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Throwables.throw  new  NumberFormatException(numeric  +  str  + "  is  not  a  valid  number.   ");	  Throwables.throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric);  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric);	      	non-compiled	[CE]  not  a  statement	4	None	replace
71	[BUG]  [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  less  than  1  character. ");	  new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
72	[BUG]  [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  your  number  is  less  than  1. ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  your  number  is  less  than  1. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  your  number  is  less  than  1. ");	  new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	10	None	replace
73	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
74	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  String  str  =  dec;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  dec;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  dec;	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
76	[BUG]  [BUGGY]  String  str  =  numeric.substring(1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  numeric.substring(1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  numeric.substring(1);	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric,  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric,  dec);	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric).intValue();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric).intValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric).intValue();	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
79	[BUG]  [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  NumberUtils.createInteger(numeric)+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  NumberUtils.createInteger(numeric)+  1;	      Integer    str    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	13	None	replace
80	[BUG]  [BUGGY]  Integer  str  =  Integer.MAX_VALUE;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Integer  str  =  Integer.MAX_VALUE;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Integer  str  =  Integer.MAX_VALUE;	      Integer    str    =    Integer.valueOf(0);    	non-compiled	[CE]  not  a  statement	14	None	replace
81	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  negative. ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  negative. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  number  is  negative. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
82	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  break;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.');  break;  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.');  break;	      	non-compiled	[CE]  not  a  statement	4	None	replace
83	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  is  numeric. ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  is  numeric. ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  is  numeric. ");	  throw    new    NumberFormatException(dec    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	20	None	replace
84	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.')/  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
85	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
86	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  Throwables.throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [BUGGY]    case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	Throwables.throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");	  Throwables.throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()).trim();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()).trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  str.substring(0,  str.length()).trim();	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
88	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	int  decPos  =  str.indexOf('.',  dec);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
89	[BUG]  [BUGGY]  String  str  =  getNumericValue(numeric.substring(1));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }    [BUGGY]  String  str  =  getNumericValue(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	521	521	1	replace	String  str  =  getNumericValue(numeric.substring(1));	      String    str    =    getNumericValue(numeric);    	non-compiled	[CE]  not  a  statement	15	None	replace
