bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  lastChar);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  lastChar);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  lastChar);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    nfe);    	non-compiled	[CE]  not  a  statement	23	None	replace
2	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    nfe);    	non-compiled	[CE]  not  a  statement	23	None	replace
3	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  nfe  +  1);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    nfe);    	non-compiled	[CE]  not  a  statement	23	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  *  1  +  1);	  String    str    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	46	None	replace
5	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC  -  1);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	53	None	replace
6	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	65	None	replace
7	[BUG]  [BUGGY]  String  str  =  str.trim();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.trim();	  String    str    =    numeric.trim();    	non-compiled	[CE]  not  a  statement	38	None	replace
8	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(e,    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);	  throw    new    NumberFormatException(e,    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
11	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.')+  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.')+  0;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.')+  0;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
13	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  1));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(0,  1));	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
14	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  str.length());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(1),  str.length());	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
15	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(2));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(2));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(2));	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
16	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(str.substring(1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(str.substring(1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(str.substring(1));	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
17	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    e);    	non-compiled	[CE]  not  a  statement	20	None	replace
18	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric.doubleValue());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(numeric.doubleValue());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric.doubleValue());	  Number    str    =    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	27	None	replace
19	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue(),  dec);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue(),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.doubleValue(),  dec);	  Number    str    =    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	27	None	replace
20	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue()  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue()  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.doubleValue()  +  1);	  Number    str    =    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	27	None	replace
21	[BUG]  [BUGGY]  String  str  =(String)numeric.toString();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.toString();	  String    str    =(String)numeric.clonePath();    	non-compiled	[CE]  not  a  statement	73	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()));	  String    str    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
23	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  +  1,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	12	None	replace
25	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	12	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);	  int    expPos    =    str.indexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	55	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX);	  int    expPos    =    str.indexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	55	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX)+  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_PREFIX)+  1;	  int    expPos    =    str.indexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	55	None	replace
29	[BUG]  [BUGGY]  String  str  =  getNullText().substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNullText().substring(0,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullText().substring(0,  str.length()  -  1);	  String    str    =    getNullText().trim();    	non-compiled	[CE]  not  a  statement	2	None	replace
30	[BUG]  [BUGGY]  String  str  =  getNullText().substring(1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNullText().substring(1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullText().substring(1);	  String    str    =    getNullText().trim();    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.substring(0,  str.length());	  String    str    =    numeric.substring(0,    numeric.length());    	non-compiled	[CE]  not  a  statement	10	None	replace
32	[BUG]  [BUGGY]  String  str  =  string.substring(0,  numeric.length());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  string.substring(0,  numeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  string.substring(0,  numeric.length());	  String    str    =    numeric.substring(0,    numeric.length());    	non-compiled	[CE]  not  a  statement	10	None	replace
33	[BUG]  [BUGGY]  String  str  =  getShortValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getShortValue();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getShortValue();	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
34	[BUG]  [BUGGY]  String  str  =  getShortName();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getShortName();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getShortName();	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
35	[BUG]  [BUGGY]  String  str  =  getShort();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getShort();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getShort();	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
36	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	64	None	replace
37	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	64	None	replace
38	[BUG]  [BUGGY]  String  str  =  this.lastChar.getMessage();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.lastChar.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.lastChar.getMessage();	  String    str    =    lastChar.getMessage();    	non-compiled	[CE]  not  a  statement	61	None	replace
39	[BUG]  [BUGGY]  String  str  =  str.getMessage();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.getMessage();	  String    str    =    lastChar.getMessage();    	non-compiled	[CE]  not  a  statement	61	None	replace
40	[BUG]  [BUGGY]  String  str  =  str.substring(0,  dec.length()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  dec.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  dec.length()  -  1);	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
41	[BUG]  [BUGGY]  String  str  =  str.substring(0,  dec.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  dec.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  dec.length());	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
42	[BUG]  [BUGGY]  String  str  =  dec.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  dec.substring(0,  numeric.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  dec.substring(0,  numeric.length()  -  1);	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
43	[BUG]  [BUGGY]  String  str  =  dec.substring(0,  null.length()  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  dec.substring(0,  null.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  dec.substring(0,  null.length()  -  1);	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
44	[BUG]  [BUGGY]  String  str  =(String)numeric.getKey();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.getKey();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.getKey();	  String    str    =(String)numeric.getValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
45	[BUG]  [BUGGY]  String  str  =(String)numeric.toLowerCase();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.toLowerCase();	  String    str    =(String)numeric.getValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()));	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	21	None	replace
47	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str,  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str,  str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str,  str.substring(0,  str.length()));	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	21	None	replace
48	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
49	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
50	[BUG]  [BUGGY]  String  str  =  getStringValue().trim();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getStringValue().trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getStringValue().trim();	  String    str    =    getStringValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
51	[BUG]  [BUGGY]  String  str  =  getNumberValue();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNumberValue();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNumberValue();	  String    str    =    getStringValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	49	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  -  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	49	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  1);	  int    expPos    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  not  a  statement	6	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  -1);	  int    expPos    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  not  a  statement	6	None	replace
56	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(1);	  String    str    =(String)numeric.trim();    	non-compiled	[CE]  not  a  statement	60	None	replace
57	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	5	None	replace
58	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	54	None	replace
59	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  -  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP  -  1);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	54	None	replace
60	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  number.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(0,  number.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  number.length()  -  1);	  String    str    =(String)numeric.toCharArray();    	non-compiled	[CE]  not  a  statement	30	None	replace
61	[BUG]  [BUGGY]  String  str  =  mant.getMessage();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  mant.getMessage();	  String    str    =    null.getMessage();    	non-compiled	[CE]  not  a  statement	16	None	replace
62	[BUG]  [BUGGY]  String  str  =  getText().trim();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getText().trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getText().trim();	  String    str    =    getText();    	non-compiled	[CE]  not  a  statement	75	None	replace
63	[BUG]  [BUGGY]  String  str  =  getText()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getText()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getText()  + "  is  not  a  valid  number.   ";	  String    str    =    getText();    	non-compiled	[CE]  not  a  statement	75	None	replace
64	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC  -  1);	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	48	None	replace
65	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  1);	  int    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  not  a  statement	35	None	replace
66	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  -1);	  int    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  not  a  statement	35	None	replace
67	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  numeric.length());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(0,  numeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  numeric.length());	  String    str    =(String)numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
68	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  number.length());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(0,  number.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  number.length());	  String    str    =(String)numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
69	[BUG]  [BUGGY]  String  str  =  nfe.toString();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  nfe.toString();	  String    str    =    e.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
70	[BUG]  [BUGGY]  String  str  =  null.toString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  null.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  null.toString();	  String    str    =    e.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
71	[BUG]  [BUGGY]  String  str  =(String)numeric.cloneByte(0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.cloneByte(0);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.cloneByte(0);	  String    str    =(String)numeric.cloneByte();    	non-compiled	[CE]  not  a  statement	32	None	replace
72	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e.getMessage());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    +    1));    	non-compiled	[CE]  not  a  statement	22	None	replace
73	[BUG]  [BUGGY]  String  str  =  this.numeric.getString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.getString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.getString();	  String    str    =    this.numeric.getMessage();    	non-compiled	[CE]  not  a  statement	70	None	replace
74	[BUG]  [BUGGY]  String  str  =  this.numeric.toString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.toString();	  String    str    =    this.numeric.getMessage();    	non-compiled	[CE]  not  a  statement	70	None	replace
75	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    2);    	non-compiled	[CE]  not  a  statement	41	None	replace
76	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  decPos  +  2);	  String    str    =    str.substring(decPos    +    2);    	non-compiled	[CE]  not  a  statement	41	None	replace
77	[BUG]  [BUGGY]  Number  str  =  createNull(numeric,  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNull(numeric,  str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNull(numeric,  str);	  Number    str    =    createNull(numeric);    	non-compiled	[CE]  not  a  statement	28	None	replace
78	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  decPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
79	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  str.length());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  str.length());	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
80	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
81	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
82	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  numeric);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  numeric);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
83	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
84	[BUG]  [BUGGY]  String  str  =  str.toString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.toString();	  String    str    =    numeric.toString();    	non-compiled	[CE]  not  a  statement	36	None	replace
85	[BUG]  [BUGGY]  String  str  =  mant.toString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  mant.toString();	  String    str    =    numeric.toString();    	non-compiled	[CE]  not  a  statement	36	None	replace
86	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(expPos  +  1,  str.length()  -  1);	  String    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(expPos  +  1,  str.length()  -  2);	  String    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
88	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(expPos  +  1,  str.length()  +  1);	  String    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
89	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	14	None	replace
90	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	14	None	replace
91	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  not  a  statement	37	None	replace
92	[BUG]  [BUGGY]  String  str  =  mant.toLowerCase();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  mant.toLowerCase();	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  not  a  statement	37	None	replace
93	[BUG]  [BUGGY]  String  str  =  str.substring(prefix  +  1,  str.length());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(prefix  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(prefix  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	51	None	replace
94	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	47	None	replace
95	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	47	None	replace
96	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(expPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	39	None	replace
97	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  decPos  +  1,  expPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	39	None	replace
98	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  expPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	39	None	replace
99	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    exp);    	non-compiled	[CE]  not  a  statement	58	None	replace
100	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp,  e);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp,  e);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    exp);    	non-compiled	[CE]  not  a  statement	58	None	replace
101	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  -  1);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    exp);    	non-compiled	[CE]  not  a  statement	58	None	replace
102	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos).trim();	  String    str    =    str.substring(decPos    +    1).trim();    	non-compiled	[CE]  not  a  statement	56	None	replace
103	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1),  e);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1),  e);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()),    e);    	non-compiled	[CE]  not  a  statement	71	None	replace
104	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1,  numeric.length()),  e);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1,  numeric.length()),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1,  numeric.length()),  e);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()),    e);    	non-compiled	[CE]  not  a  statement	71	None	replace
105	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  nfe);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  nfe);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()),    e);    	non-compiled	[CE]  not  a  statement	71	None	replace
106	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  nfe);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  nfe);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	31	None	replace
107	[BUG]  [BUGGY]  String  str  =(String)dec.substring(0,  dec.length()  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)dec.substring(0,  dec.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)dec.substring(0,  dec.length()  -  1);	  String    str    =(String)numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	66	None	replace
108	[BUG]  [BUGGY]  String  str  =(String)dec.substring(0,  null.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)dec.substring(0,  null.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)dec.substring(0,  null.length()  -  1);	  String    str    =(String)numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	66	None	replace
109	[BUG]  [BUGGY]  String  str  =(String)dec.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)dec.substring(0,  numeric.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)dec.substring(0,  numeric.length()  -  1);	  String    str    =(String)numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	66	None	replace
110	[BUG]  [BUGGY]  String  str  =  str.substring(0,  string.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  string.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  string.length()  -  1);	  String    str    =    str.substring(0,    null.length()    -    1);    	non-compiled	[CE]  not  a  statement	42	None	replace
111	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	45	None	replace
112	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	45	None	replace
113	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
114	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
115	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
116	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  expPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
117	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length();	  String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	19	None	replace
118	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric.trim());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(numeric.trim());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric.trim());	  Number    str    =    createNumber(numeric);    	non-compiled	[CE]  not  a  statement	26	None	replace
119	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric.toString());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(numeric.toString());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric.toString());	  Number    str    =    createNumber(numeric);    	non-compiled	[CE]  not  a  statement	26	None	replace
120	[BUG]  [BUGGY]  String  str  =(String)numeric.cloneByte(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.cloneByte(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.cloneByte(str);	  String    str    =(String)numeric.cloneByte();    	non-compiled	[CE]  not  a  statement	32	None	replace
121	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	39	None	replace
122	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  2);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	39	None	replace
123	[BUG]  [BUGGY]  String  str  =  getNullValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNullValue();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullValue();	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
124	[BUG]  [BUGGY]  String  str  =  getString(numeric);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getString(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getString(numeric);	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
125	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	14	None	replace
126	[BUG]  [BUGGY]  throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
127	[BUG]  [BUGGY]  String  str  =  getNumberText(numeric);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNumberText(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNumberText(numeric);	  String    str    =    getNumberText();    	non-compiled	[CE]  not  a  statement	1	None	replace
128	[BUG]  [BUGGY]  String  str  =  getQuoteText();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getQuoteText();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getQuoteText();	  String    str    =    getNumberText();    	non-compiled	[CE]  not  a  statement	1	None	replace
129	[BUG]  [BUGGY]  String  str  =  getNumberText().trim();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNumberText().trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNumberText().trim();	  String    str    =    getNumberText();    	non-compiled	[CE]  not  a  statement	1	None	replace
130	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(2);	  String    str    =(String)numeric.toCharArray();    	non-compiled	[CE]  not  a  statement	30	None	replace
131	[BUG]  [BUGGY]  String  str  =(String)numeric.charAt(0);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.charAt(0);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.charAt(0);	  String    str    =(String)numeric.toCharArray();    	non-compiled	[CE]  not  a  statement	30	None	replace
132	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
133	[BUG]  [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
134	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	31	None	replace
135	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	31	None	replace
136	[BUG]  [BUGGY]  String  str  =(numeric  ==  null)?  null  :(String)numeric.trim();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(numeric  ==  null)?  null  :(String)numeric.trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(numeric  ==  null)?  null  :(String)numeric.trim();	  String    str    =(String)numeric.trim();    	non-compiled	[CE]  not  a  statement	60	None	replace
137	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp  +  1);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    exp);    	non-compiled	[CE]  not  a  statement	58	None	replace
138	[BUG]  [BUGGY]  Number  str  =  createNull(numeric.doubleValue());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNull(numeric.doubleValue());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNull(numeric.doubleValue());	  Number    str    =    createNull(numeric);    	non-compiled	[CE]  not  a  statement	28	None	replace
139	[BUG]  [BUGGY]  Number  str  =  createNull(numeric).toString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNull(numeric).toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNull(numeric).toString();	  Number    str    =    createNull(numeric);    	non-compiled	[CE]  not  a  statement	28	None	replace
140	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
141	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  expPos.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
142	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
143	[BUG]  [BUGGY]  String  str  =(String)dec.substring(0,  dec.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)dec.substring(0,  dec.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)dec.substring(0,  dec.length());	  String    str    =(String)numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	66	None	replace
144	[BUG]  [BUGGY]  String  str  =  getStringValue(numeric);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getStringValue(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getStringValue(numeric);	  String    str    =    getStringValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
145	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  e);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(1,  str.length()),  e);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()),    e);    	non-compiled	[CE]  not  a  statement	71	None	replace
146	[BUG]  [BUGGY]  String  str  =  dec.substring(0,  dec.length()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  dec.substring(0,  dec.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  dec.substring(0,  dec.length()  -  1);	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
147	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC)+  1;	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	48	None	replace
148	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  4);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  4);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  4);	  int    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  not  a  statement	35	None	replace
149	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	45	None	replace
150	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
151	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
152	[BUG]  [BUGGY]  Number  str  =  createNumber(mant);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(mant);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(mant);	  Number    str    =    createNumber(numeric);    	non-compiled	[CE]  not  a  statement	26	None	replace
153	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  expPos.length()));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  expPos.length()));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  expPos.length()));	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	21	None	replace
154	[BUG]  [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	11	None	replace
155	[BUG]  [BUGGY]  String  str  =  this.numeric.substring(0,  this.numeric.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.substring(0,  this.numeric.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.substring(0,  this.numeric.length()  -  1);	  String    str    =    this.numeric.getMessage();    	non-compiled	[CE]  not  a  statement	70	None	replace
156	[BUG]  [BUGGY]  String  str  =  lastChar.toString();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  lastChar.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  lastChar.toString();	  String    str    =    lastChar.getMessage();    	non-compiled	[CE]  not  a  statement	61	None	replace
157	[BUG]  [BUGGY]  String  str  =  getNullText().substring(0,  1).trim();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNullText().substring(0,  1).trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullText().substring(0,  1).trim();	  String    str    =    getNullText().trim();    	non-compiled	[CE]  not  a  statement	2	None	replace
158	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.n   ");    	non-compiled	[CE]  not  a  statement	44	None	replace
159	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.doubleValue()  -  1);	  Number    str    =    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	27	None	replace
160	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  dec);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  dec);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    dec);    	non-compiled	[CE]  not  a  statement	59	None	replace
161	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  2));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  2));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(0,  2));	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
162	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  nfe);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(1),  nfe);	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
163	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  string.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  string.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.substring(0,  string.length()  -  1);	  String    str    =    string.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
164	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC)+  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC)+  1;	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	53	None	replace
165	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC  +  1);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	53	None	replace
166	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	17	None	replace
167	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase(len);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.toLowerCase(len);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.toLowerCase(len);	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  not  a  statement	37	None	replace
168	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase(LONG_ZERO);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.toLowerCase(LONG_ZERO);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.toLowerCase(LONG_ZERO);	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  not  a  statement	37	None	replace
169	[BUG]  [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  prefixPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
170	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
171	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)numeric.substring(0,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  decPos);	  String    str    =(String)numeric.toCharArray();    	non-compiled	[CE]  not  a  statement	30	None	replace
172	[BUG]  [BUGGY]  String  str  =  this.nfe.getMessage();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.nfe.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.nfe.getMessage();	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	14	None	replace
173	[BUG]  [BUGGY]  String  str  =(String)dec.substring(0,  null.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =(String)dec.substring(0,  null.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)dec.substring(0,  null.length());	  String    str    =(String)numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	66	None	replace
174	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  expPos);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
175	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
176	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	52	None	replace
177	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(e,    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	7	None	replace
178	[BUG]  [BUGGY]  String  str  =  this.numeric.toLowerCase();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.toLowerCase();	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  not  a  statement	37	None	replace
179	[BUG]  [BUGGY]  String  str  =  getBaseValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getBaseValue();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getBaseValue();	  String    str    =    getNumberText();    	non-compiled	[CE]  not  a  statement	1	None	replace
180	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	57	None	replace
181	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	57	None	replace
182	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec)+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.',  dec)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  dec)+  1;	  int    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	34	None	replace
183	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	31	None	replace
184	[BUG]  [BUGGY]  String  str  =  dec.substring(0,  dec.length());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  dec.substring(0,  dec.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  dec.substring(0,  dec.length());	  String    str    =    numeric.substring(0,    dec.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
185	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	65	None	replace
186	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric,  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(numeric,  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric,  dec);	  Number    str    =    createNumber(numeric);    	non-compiled	[CE]  not  a  statement	26	None	replace
187	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric.substring(1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createNumber(numeric.substring(1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric.substring(1));	  Number    str    =    createNumber(numeric);    	non-compiled	[CE]  not  a  statement	26	None	replace
188	[BUG]  [BUGGY]  String  str  =  dec.toString();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  dec.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  dec.toString();	  String    str    =    e.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
189	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(0,  str.length()  -  1));	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
190	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(1),  dec);	  Number    str    =    createBigDecimal(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	62	None	replace
191	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  DEC);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  DEC);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  DEC);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    dec);    	non-compiled	[CE]  not  a  statement	59	None	replace
192	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
193	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	21	None	replace
194	[BUG]  [BUGGY]  String  str  =  str.substring(0,  nomeric.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  nomeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  nomeric.length());	  String    str    =    numeric.substring(0,    numeric.length());    	non-compiled	[CE]  not  a  statement	10	None	replace
195	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	45	None	replace
196	[BUG]  [BUGGY]  String  str  =  getNullText().substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  getNullText().substring(decPos  +  1,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullText().substring(decPos  +  1,  expPos);	  String    str    =    getNullText().trim();    	non-compiled	[CE]  not  a  statement	2	None	replace
197	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1,  dec);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1,  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  exp  +  1,  dec);	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1),    exp);    	non-compiled	[CE]  not  a  statement	58	None	replace
198	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	47	None	replace
199	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  1));	  NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    +    1));    	non-compiled	[CE]  not  a  statement	22	None	replace
200	[BUG]  [BUGGY]  String  str  =  this.numeric.substring(0,  this.numeric.length());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.substring(0,  this.numeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.substring(0,  this.numeric.length());	  String    str    =    this.numeric.getMessage();    	non-compiled	[CE]  not  a  statement	70	None	replace
201	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
202	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	25	None	replace
203	[BUG]  [BUGGY]  String  str  =  this.getText();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.getText();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.getText();	  String    str    =    getText();    	non-compiled	[CE]  not  a  statement	75	None	replace
204	[BUG]  [BUGGY]  String  str  =  this.getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.getString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.getString();	  String    str    =    getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
205	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()).replace('.',  '.');  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()).replace('.',  '.');  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  str.length()).replace('.',  '.');	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	51	None	replace
