bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  getNumberText();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  getNumberText();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNumberText();	      String    str    =    getNullText();    	non-compiled	[CE]  not  a  statement	12	None	replace
2	[BUG]  [BUGGY]  String  str  =  getNullText().trim();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  getNullText().trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getNullText().trim();	      String    str    =    getNullText();    	non-compiled	[CE]  not  a  statement	12	None	replace
3	[BUG]  [BUGGY]  String  str  =  getStringValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  getStringValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getStringValue();	      String    str    =    getNullText();    	non-compiled	[CE]  not  a  statement	12	None	replace
4	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  dec);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
5	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
6	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  0);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
7	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(dec    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  String  str  =  str.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  numeric.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  numeric.length()  -  1);	      String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
9	[BUG]  [BUGGY]  String  str  =  str.substring(0,  numeric.length());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  numeric.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  numeric.length());	      String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  numeric.length());  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.substring(0,  numeric.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.substring(0,  numeric.length());	      String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  str.length()  -  1);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	15	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	15	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(expPos  +  1,  str.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	15	None	replace
14	[BUG]  [BUGGY]  String  str  =  nfe.getMessage();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  nfe.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  nfe.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
15	[BUG]  [BUGGY]  String  str  =  numeric.getMessage();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
16	[BUG]  [BUGGY]  String  str  =  null.getMessage();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  null.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  null.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
18	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
19	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  2);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  e);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  e);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  e);	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()));	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
22	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  +  1));	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
23	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  nfe);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  nfe);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  nfe);	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  Number  str  =  createNumber(numeric);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  Number  str  =  createNumber(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNumber(numeric);	      Number    str    =    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
27	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue());  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  Number  str  =  createBigDecimal(numeric.doubleValue());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.doubleValue());	      Number    str    =    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
28	[BUG]  [BUGGY]  Number  str  =  createNull(numeric);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  Number  str  =  createNull(numeric);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createNull(numeric);	      Number    str    =    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
29	[BUG]  [BUGGY]  String  str  =(String)numeric.getValue();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.getValue();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.getValue();	      String    str    =(String)numeric.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
30	[BUG]  [BUGGY]  String  str  =(String)numeric.toCharArray();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.toCharArray();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.toCharArray();	      String    str    =(String)numeric.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
31	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  e);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  String  str  =(String)numeric.cloneByte();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.cloneByte();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.cloneByte();	      String    str    =(String)numeric.cloneTree();    	non-compiled	[CE]  not  a  statement	5	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  decPos);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  dec);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
35	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  0);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  0);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
36	[BUG]  [BUGGY]  String  str  =  numeric.toString();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.toString();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.toLowerCase();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.toLowerCase();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
38	[BUG]  [BUGGY]  String  str  =  numeric.trim();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.trim();	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
40	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  decPos  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  decPos  +  1);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
41	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  2);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  null.length()  -  1);	      String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  null.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  null.length());	      String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
44	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
46	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length()  -  1  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
47	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
49	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
50	[BUG]  [BUGGY]  String  str  =  getString();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  getString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getString();	      String    str    =    getNullText();    	non-compiled	[CE]  not  a  statement	12	None	replace
51	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  str.length()  -  2);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	15	None	replace
52	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	15	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  DEC);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.',  DEC_PREFIX);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
56	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1).trim();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1).trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(decPos  +  1).trim();	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
57	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
58	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  exp);	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
59	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
60	[BUG]  [BUGGY]  String  str  =(String)numeric.trim();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.trim();	      String    str    =(String)numeric.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
61	[BUG]  [BUGGY]  String  str  =  lastChar.getMessage();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  lastChar.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  lastChar.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
62	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  Number  str  =  createBigDecimal(numeric.substring(1));  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	Number  str  =  createBigDecimal(numeric.substring(1));	      Number    str    =    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
63	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
64	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
65	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  dec.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.substring(0,  dec.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  dec.length()  -  1);	      String    str    =(String)numeric.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
67	[BUG]  [BUGGY]  String  str  =(String)numeric.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.substring(0,  numeric.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.substring(0,  numeric.length()  -  1);	      String    str    =(String)numeric.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
68	[BUG]  [BUGGY]  String  str  =  string.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  string.substring(0,  numeric.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  string.substring(0,  numeric.length()  -  1);	      String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
69	[BUG]  [BUGGY]  String  str  =  e.toString();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  e.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  e.toString();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
70	[BUG]  [BUGGY]  String  str  =  this.numeric.getMessage();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  this.numeric.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  this.numeric.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
71	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.substring(0,  str.length()),  e);	      NumberFormatException    str    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	3	None	replace
72	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	int  expPos  =  str.indexOf('.')+  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	18	None	replace
73	[BUG]  [BUGGY]  String  str  =(String)numeric.clonePath();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =(String)numeric.clonePath();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =(String)numeric.clonePath();	      String    str    =(String)numeric.cloneTree();    	non-compiled	[CE]  not  a  statement	5	None	replace
74	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  dec.length()  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  numeric.substring(0,  dec.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  numeric.substring(0,  dec.length()  -  1);	      String    str    =    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
75	[BUG]  [BUGGY]  String  str  =  getText();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :    [BUGGY]  String  str  =  getText();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	553	553	1	replace	String  str  =  getText();	      String    str    =    getNullText();    	non-compiled	[CE]  not  a  statement	12	None	replace
