bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
27	[BUG] [BUGGY] if (StringUtils.isEmpty(str)) { [FE] AssertionFailedError [CONTEXT] public static boolean isNumber(String str) { [BUGGY] if (StringUtils.isEmpty(str)) { [BUGGY] return false; } char[] chars = str.toCharArray(); int sz = chars.length; boolean hasExp = false; boolean hasDecPoint = false; boolean allowSigns = false; boolean foundDigit = false;  int start = (chars[0] == '-') ? 1 : 0; [CLASS] NumberUtils [METHOD] isNumber [RETURN_TYPE] boolean  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allowSigns foundDigit hasDecPoint hasExp Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO String str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int i start sz char[] chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static boolean isNumber(String str) { [BUGGY] [BUGGY] if (StringUtils.isEmpty(str)) { return false; } char[] chars = str.toCharArray(); int sz = chars.length; boolean hasExp = false; boolean hasDecPoint = false; boolean allowSigns = false; boolean foundDigit = false;  int start = (chars[0] == '-') ? 1 : 0; [CLASS] NumberUtils [METHOD] isNumber [RETURN_TYPE] boolean  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allowSigns foundDigit hasDecPoint hasExp Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO String str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int i start sz char[] chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	add	
