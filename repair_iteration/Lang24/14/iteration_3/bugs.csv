bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  chars  =  str!=  null?  null  :  str.toCharArray();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  str!=  null?  null  :  str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str!=  null?  null  :  str.toCharArray();	  char[]    chars    =    str    ==    null?    null    :    str.toCharArray();    	non-compiled	[CE]  not  a  statement	56	None	replace
2	[BUG]  [BUGGY]  String[]  chars  =  str  ==  null?  null  :  str.toCharArray();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  chars  =  str  ==  null?  null  :  str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  chars  =  str  ==  null?  null  :  str.toCharArray();	  char[]    chars    =    str    ==    null?    null    :    str.toCharArray();    	non-compiled	[CE]  not  a  statement	56	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  true;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  true;  }	  if(str    ==    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
4	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  true;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  return  true;  }	  if(str    ==    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
5	[BUG]  [BUGGY]  Integer  str  =  getDecimalValue().intValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getDecimalValue().intValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getDecimalValue().intValue();	  Integer    str    =    getDecimalValue();    	non-compiled	[CE]  not  a  statement	71	None	replace
6	[BUG]  [BUGGY]  Integer  str  =  getDecimalIntValue();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getDecimalIntValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getDecimalIntValue();	  Integer    str    =    getDecimalValue();    	non-compiled	[CE]  not  a  statement	71	None	replace
7	[BUG]  [BUGGY]  char[]  str  =  getChar();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getChar();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getChar();	  char[]    str    =    getString();    	non-compiled	[CE]  not  a  statement	61	None	replace
8	[BUG]  [BUGGY]  String  str  =  getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String  str  =  getString();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String  str  =  getString();	  char[]    str    =    getString();    	non-compiled	[CE]  not  a  statement	61	None	replace
9	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||!StringUtils.isEmpty(chars))  {	  if(!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
10	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||!CharacterUtils.isNumber(chars))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||!CharacterUtils.isNumber(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||!CharacterUtils.isNumber(chars))  {	  if(!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
11	[BUG]  [BUGGY]  char[]  chars  =  getChars(str,  start);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  getChars(str,  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  getChars(str,  start);	  char[]    chars    =    getChars(str);    	non-compiled	[CE]  not  a  statement	57	None	replace
12	[BUG]  [BUGGY]  char[]  chars  =  getChars(str.toCharArray());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  getChars(str.toCharArray());  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  getChars(str.toCharArray());	  char[]    chars    =    getChars(str);    	non-compiled	[CE]  not  a  statement	57	None	replace
13	[BUG]  [BUGGY]  char[]  chars  =  getChars();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  getChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  getChars();	  char[]    chars    =    getChars(str);    	non-compiled	[CE]  not  a  statement	57	None	replace
14	[BUG]  [BUGGY]  char[]  chars  =  getChars(str,  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  getChars(str,  0);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  getChars(str,  0);	  char[]    chars    =    getChars(str);    	non-compiled	[CE]  not  a  statement	57	None	replace
15	[BUG]  [BUGGY]  Integer  str  =  getNumberValue().intValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getNumberValue().intValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getNumberValue().intValue();	  Integer    str    =    getNumberValue();    	non-compiled	[CE]  not  a  statement	40	None	replace
16	[BUG]  [BUGGY]  Integer  i  =  str.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  i  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  i  =  str.length();	  int    i    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
17	[BUG]  [BUGGY]  String[]  chars  =  this.str.toCharArray();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  chars  =  this.str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  chars  =  this.str.toCharArray();	  char[]    chars    =    this.str.toCharArray();    	non-compiled	[CE]  not  a  statement	22	None	replace
18	[BUG]  [BUGGY]  String  chars  =  this.str.toCharArray();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String  chars  =  this.str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String  chars  =  this.str.toCharArray();	  char[]    chars    =    this.str.toCharArray();    	non-compiled	[CE]  not  a  statement	22	None	replace
19	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  return  false;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {  return  false;  }	  if(str    ==    null    ||    str.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  1);	  int    i    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  int  i  =  str.indexOf('-',  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('-',  0);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('-',  0);	  int    i    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  2);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  2);	  int    i    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
23	[BUG]  [BUGGY]  Integer  sz  =  str.length();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  sz  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  sz  =  str.length();	  int    sz    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  char  sz  =  str.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char  sz  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char  sz  =  str.length();	  int    sz    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.',  0);	  int    start    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	73	None	replace
26	[BUG]  [BUGGY]  int  start  =  str.indexOf('.');  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('.');  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('.');	  int    start    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	73	None	replace
27	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.',  1);	  int    start    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	73	None	replace
28	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {	  if(str.length()    ==    0    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	16	None	replace
29	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(str.length()  -  1)  ==  '-')  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(str.length()  -  1)  ==  '-')  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.charAt(str.length()  -  1)  ==  '-')  {	  if(str.length()    ==    0    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	16	None	replace
30	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(str.length()    ==    0    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	16	None	replace
31	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[0]))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[0]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[0]))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
32	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[1]))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[1]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[1]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[0]))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
33	[BUG]  [BUGGY]  int  start  =(str!=  null)?  0  :  str.length();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str!=  null)?  0  :  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str!=  null)?  0  :  str.length();	  int    start    =(str    ==    null)?    0    :    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	46	None	replace
34	[BUG]  [BUGGY]  char[]  str  =  getStdChars().toCharArray();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getStdChars().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStdChars().toCharArray();	  char[]    str    =    getChars().toCharArray();    	non-compiled	[CE]  not  a  statement	25	None	replace
35	[BUG]  [BUGGY]  char[]  str  =  getString().toCharArray();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getString().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getString().toCharArray();	  char[]    str    =    getChars().toCharArray();    	non-compiled	[CE]  not  a  statement	25	None	replace
36	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str[start]))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str[start]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str[start]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[start]))    {    	non-compiled	[CE]  not  a  statement	67	None	replace
37	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start])||  hasExp)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start])||  hasExp)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start])||  hasExp)  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[start]))    {    	non-compiled	[CE]  not  a  statement	67	None	replace
38	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||!StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||!StringUtils.isEmpty(str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||!StringUtils.isEmpty(str))  {	  if(str    ==    null    ||!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
39	[BUG]  [BUGGY]  if(chars  ==  null  ||!StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||!StringUtils.isEmpty(str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||!StringUtils.isEmpty(str))  {	  if(str    ==    null    ||!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
40	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)&&  chars.length  ==  0)  {	  if(!StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
41	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(chars)||  str.length  ==  0)  {	  if(!StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
42	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  chars.length!=  0)  {	  if(!StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
43	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(chars)||  isNumber(chars[0]))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(chars)||  isNumber(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(chars)||  isNumber(chars[0]))  {	  if(!StringUtils.isEmpty(str)||    isNumber(chars[0]))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
44	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)&&  isNumber(chars[0]))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)&&  isNumber(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)&&  isNumber(chars[0]))  {	  if(!StringUtils.isEmpty(str)||    isNumber(chars[0]))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars[1]))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars[1]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  isNumber(chars[1]))  {	  if(!StringUtils.isEmpty(str)||    isNumber(chars[0]))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length()  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  -1  :  str.length()  +  1;	  int    start    =(str    ==    null)?    -1    :    str.length();    	non-compiled	[CE]  not  a  statement	44	None	replace
47	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  isNumber(str))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  isNumber(str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  isNumber(str))  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
48	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  hasExp)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  hasExp)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  hasExp)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
49	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str!=  null)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str!=  null)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
50	[BUG]  [BUGGY]  Integer  start  =  str.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  start  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  start  =  str.length();	  int    start    =    str.length()    -    2;    	non-compiled	[CE]  not  a  statement	21	None	replace
51	[BUG]  [BUGGY]  char  start  =  str.length();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char  start  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char  start  =  str.length();	  int    start    =    str.length()    -    2;    	non-compiled	[CE]  not  a  statement	21	None	replace
52	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  1);	  int    i    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
53	[BUG]  [BUGGY]  int  i  =  str.indexOf('.',  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('.',  0);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('.',  0);	  int    i    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
54	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length()!=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()!=    0)    {    	non-compiled	[CE]  not  a  statement	17	None	replace
55	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length  ==  0)  {	  if(StringUtils.isEmpty(str)&&    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
56	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)&&  str.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)&&  str.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)&&  str.length  ==  0)  {	  if(StringUtils.isEmpty(str)&&    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
57	[BUG]  [BUGGY]  String[]  str  =  getStandardChars();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getStandardChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getStandardChars();	  char[]    str    =    getStandardChars();    	non-compiled	[CE]  not  a  statement	74	None	replace
58	[BUG]  [BUGGY]  char[]  str  =  getStandardCharArray();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getStandardCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStandardCharArray();	  char[]    str    =    getStandardChars();    	non-compiled	[CE]  not  a  statement	74	None	replace
59	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  1  :  str.length()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str  ==  null)?  1  :  str.length()  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  1  :  str.length()  +  1;	  int    start    =(str    ==    null)?    1    :    str.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
60	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length!=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length!=  0)  {	  if(StringUtils.isEmpty(chars)||    str.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
61	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  sz);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-',  sz);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  sz);	  int    start    =    str.lastIndexOf('-',    chars.length);    	non-compiled	[CE]  not  a  statement	62	None	replace
62	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  chars.length);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-',  chars.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  chars.length);	  int    start    =    str.lastIndexOf('-',    chars.length);    	non-compiled	[CE]  not  a  statement	62	None	replace
63	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  sz);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-',  sz);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  sz);	  int    start    =    str.lastIndexOf('-',    chars.length);    	non-compiled	[CE]  not  a  statement	62	None	replace
64	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  chars.length  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-',  chars.length  -  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  chars.length  -  1);	  int    start    =    str.lastIndexOf('-',    chars.length);    	non-compiled	[CE]  not  a  statement	62	None	replace
65	[BUG]  [BUGGY]  if(StringUtils.isNullOrEmpty(str)||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isNullOrEmpty(str)||  StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isNullOrEmpty(str)||  StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
66	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  CharacterUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  CharacterUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  CharacterUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
67	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length!=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length!=  0)  {	  if(StringUtils.isEmpty(str)||    chars.length!=    0)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
68	[BUG]  [BUGGY]  int  start  =  str.indexOf('-')+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-')+  1;	  int    start    =    str.indexOf('-');    	non-compiled	[CE]  not  a  statement	33	None	replace
69	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(!StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
70	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||!StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(!StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
71	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(!StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
72	[BUG]  [BUGGY]  char[]  chars  =  str.trim().toCharArray();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  str.trim().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str.trim().toCharArray();	  char[]    chars    =    str.trim();    	non-compiled	[CE]  not  a  statement	69	None	replace
73	[BUG]  [BUGGY]  char[]  chars  =  str.getChars();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  str.getChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str.getChars();	  char[]    chars    =    str.trim();    	non-compiled	[CE]  not  a  statement	69	None	replace
74	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasDecPoint)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasDecPoint)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasDecPoint)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
75	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
76	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  allowSigns)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  allowSigns)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  allowSigns)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
77	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit  ||  hasExp)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit  ||  hasExp)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  foundDigit  ||  hasExp)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
78	[BUG]  [BUGGY]  String[]  str  =  getCharArray();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getCharArray();	  char[]    str    =    getCharArray();    	non-compiled	[CE]  not  a  statement	59	None	replace
79	[BUG]  [BUGGY]  String[]  str  =  getShortValues();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getShortValues();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getShortValues();	  String[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	27	None	replace
80	[BUG]  [BUGGY]  String[]  str  =  getShortChars();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getShortChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getShortChars();	  String[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	27	None	replace
81	[BUG]  [BUGGY]  String[]  str  =  getNumber();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getNumber();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getNumber();	  String[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	27	None	replace
82	[BUG]  [BUGGY]  char[]  str  =  getDelimiterChars(str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiterChars(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterChars(str);	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
83	[BUG]  [BUGGY]  String[]  str  =  getDelimiterChars();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getDelimiterChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getDelimiterChars();	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
84	[BUG]  [BUGGY]  char[]  str  =  getDelimiterChars().toCharArray();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiterChars().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterChars().toCharArray();	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
85	[BUG]  [BUGGY]  int  i  =  str.indexOf('.',  start);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('.',  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('.',  start);	  int    i    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	48	None	replace
86	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
87	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length!=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length!=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
88	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  >=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
89	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()!=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str)||    str.length()!=    0)    {    	non-compiled	[CE]  not  a  statement	58	None	replace
90	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  >=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  >=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  >=  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str)||    str.length()!=    0)    {    	non-compiled	[CE]  not  a  statement	58	None	replace
91	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  -  1]))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  -  1]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  -  1]))  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars[str.length()    ]))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
92	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars[str.length()    ]))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
93	[BUG]  [BUGGY]  if(str  ==  null  ||  CharacterUtils.isEmpty(chars[str.length()  ]))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  CharacterUtils.isEmpty(chars[str.length()  ]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  CharacterUtils.isEmpty(chars[str.length()  ]))  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars[str.length()    ]))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
94	[BUG]  [BUGGY]  chars  =  str.toCharArray();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  chars  =  str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	chars  =  str.toCharArray();	  String    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	23	None	replace
95	[BUG]  [BUGGY]  String  chars  =  str.toCharArray()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String  chars  =  str.toCharArray()  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String  chars  =  str.toCharArray()  +  1;	  String    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	23	None	replace
96	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	43	None	replace
97	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	43	None	replace
98	[BUG]  [BUGGY]  if(chars  ==  null  ||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	43	None	replace
99	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	50	None	replace
100	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.charAt(0)  ==  '-')  {	  if(str    ==    null    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	50	None	replace
101	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  chars.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  chars.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  chars.length);	  int    i    =    str.lastIndexOf('-',    start);    	non-compiled	[CE]  not  a  statement	8	None	replace
102	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  start  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  start  +  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  start  +  1);	  int    i    =    str.lastIndexOf('-',    start);    	non-compiled	[CE]  not  a  statement	8	None	replace
103	[BUG]  [BUGGY]  int  i  =  str.indexOf('-',  start);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('-',  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('-',  start);	  int    i    =    str.lastIndexOf('-',    start);    	non-compiled	[CE]  not  a  statement	8	None	replace
104	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(chars)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	78	None	replace
105	[BUG]  [BUGGY]  Integer  str  =  getIntValue()  /  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue()  /  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue()  /  1;	  Integer    str    =    getIntValue()    +    1;    	non-compiled	[CE]  not  a  statement	52	None	replace
106	[BUG]  [BUGGY]  Integer  str  =  getIntValue()  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue()  -  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue()  -  1;	  Integer    str    =    getIntValue()    +    1;    	non-compiled	[CE]  not  a  statement	52	None	replace
107	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('.',  start);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.lastIndexOf('.',  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('.',  start);	  int    sz    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	77	None	replace
108	[BUG]  [BUGGY]  int  sz  =  str.indexOf('.');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.indexOf('.');  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.indexOf('.');	  int    sz    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	77	None	replace
109	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('.',  1);	  int    sz    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	77	None	replace
110	[BUG]  [BUGGY]  int  i  =  str.indexOf('-')+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('-')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('-')+  1;	  int    i    =    str.lastIndexOf('-')+    1;    	non-compiled	[CE]  not  a  statement	53	None	replace
111	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-')+  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-')+  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-')+  2;	  int    i    =    str.lastIndexOf('-')+    1;    	non-compiled	[CE]  not  a  statement	53	None	replace
112	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-')/  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-')/  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-')/  1;	  int    i    =    str.lastIndexOf('-')+    1;    	non-compiled	[CE]  not  a  statement	53	None	replace
113	[BUG]  [BUGGY]  int  sz  =  str.length()  *  2  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.length()  *  2  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  *  2  +  1;	  int    sz    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	7	None	replace
114	[BUG]  [BUGGY]  int  sz  =  str.length()  +  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.length()  +  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  +  2;	  int    sz    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	7	None	replace
115	[BUG]  [BUGGY]  int  sz  =  str.length()  /  2;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.length()  /  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  /  2;	  int    sz    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	7	None	replace
116	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  str.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  str.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  str.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	79	None	replace
117	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	79	None	replace
118	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length!=  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	79	None	replace
119	[BUG]  [BUGGY]  Integer  str  =  getIntValue().intValue()  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue().intValue()  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue().intValue()  +  1;	  Integer    str    =    getIntValue().intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
120	[BUG]  [BUGGY]  Integer  str  =  getIntValue().intValue()  -  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue().intValue()  -  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue().intValue()  -  1;	  Integer    str    =    getIntValue().intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
121	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  1);	  int    start    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	32	None	replace
122	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-',  2);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  2);	  int    start    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	32	None	replace
123	[BUG]  [BUGGY]  int  i  =  str.length()  -  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  -  2;	  int    i    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	37	None	replace
124	[BUG]  [BUGGY]  int  i  =  str.length()  *  2  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.length()  *  2  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  *  2  +  1;	  int    i    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	37	None	replace
125	[BUG]  [BUGGY]  int  i  =  str.length()  /  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.length()  /  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  /  2;	  int    i    =    str.length()    *    2;    	non-compiled	[CE]  not  a  statement	37	None	replace
126	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0,  str.length))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0,  str.length))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0,  str.length))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
127	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str,  0))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str,  0))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
128	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  0))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  0))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
129	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  1))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  1))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  1))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
130	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  start  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('.',  start  +  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  start  +  1);	  int    i    =    str.lastIndexOf('.',    start);    	non-compiled	[CE]  not  a  statement	47	None	replace
131	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  chars.length);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('.',  chars.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  chars.length);	  int    i    =    str.lastIndexOf('.',    start);    	non-compiled	[CE]  not  a  statement	47	None	replace
132	[BUG]  [BUGGY]  Integer  str  =  getShortValue();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getShortValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getShortValue();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
133	[BUG]  [BUGGY]  Integer  str  =  getSize();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getSize();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getSize();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
134	[BUG]  [BUGGY]  Integer  str  =  getIndex();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIndex();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIndex();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
135	[BUG]  [BUGGY]  Integer  str  =  getImmediateParentPoint();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getImmediateParentPoint();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getImmediateParentPoint();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
136	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  -1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-',  -1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  -1);	  int    start    =    str.lastIndexOf('-',    -1);    	non-compiled	[CE]  not  a  statement	70	None	replace
137	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	55	None	replace
138	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars[0]))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars[0]))  {	  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	55	None	replace
139	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars,  start))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars,  start))  {	  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	55	None	replace
140	[BUG]  [BUGGY]  char  i  =  str.length();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char  i  =  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char  i  =  str.length();	  int    i    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
141	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
142	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str]))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars[str]))  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
143	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
144	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-',  1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  1);	  int    start    =    str.indexOf('-',    0);    	non-compiled	[CE]  not  a  statement	34	None	replace
145	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  12);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.indexOf('-',  12);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  12);	  int    start    =    str.indexOf('-',    0);    	non-compiled	[CE]  not  a  statement	34	None	replace
146	[BUG]  [BUGGY]  char[]  str  =  this.getChars(str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  this.getChars(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  this.getChars(str);	  char[]    str    =    this.getChars();    	non-compiled	[CE]  not  a  statement	26	None	replace
147	[BUG]  [BUGGY]  String[]  str  =  this.getChars();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  this.getChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  this.getChars();	  char[]    str    =    this.getChars();    	non-compiled	[CE]  not  a  statement	26	None	replace
148	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[0]))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars[0]))  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	54	None	replace
149	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  hasExp))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  hasExp))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  hasExp))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
150	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  allowSigns))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  allowSigns))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  allowSigns))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
151	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(start,  str))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(start,  str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(start,  str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
152	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  length))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  length))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  length))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
153	[BUG]  [BUGGY]  int  start  =(chars[0]  ==  '-')?  1  :  0;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(chars[0]  ==  '-')?  1  :  0;  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(chars[0]  ==  '-')?  1  :  0;	  int    start    =(chars[start]    ==    '-')?    1    :    0;    	non-compiled	[CE]  not  a  statement	65	None	replace
154	[BUG]  [BUGGY]  int  start  =(chars[1]  ==  '-')?  1  :  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(chars[1]  ==  '-')?  1  :  0;  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(chars[1]  ==  '-')?  1  :  0;	  int    start    =(chars[start]    ==    '-')?    1    :    0;    	non-compiled	[CE]  not  a  statement	65	None	replace
155	[BUG]  [BUGGY]  int  start  =(sz  ==  '-')?  1  :  0;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(sz  ==  '-')?  1  :  0;  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(sz  ==  '-')?  1  :  0;	  int    start    =(chars[start]    ==    '-')?    1    :    0;    	non-compiled	[CE]  not  a  statement	65	None	replace
156	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  -1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  -1);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  -1);	  int    i    =    str.lastIndexOf('-',    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
157	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[start]))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[start]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars[start]))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
158	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	43	None	replace
159	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  start  +  1,  str.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-',  start  +  1,  str.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  start  +  1,  str.length);	  int    i    =    str.lastIndexOf('-',    start);    	non-compiled	[CE]  not  a  statement	8	None	replace
160	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	54	None	replace
161	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	54	None	replace
162	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  isNumber(str))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  isNumber(str))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars)||  isNumber(str))  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	54	None	replace
163	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.',  chars.length);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('.',  chars.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.',  chars.length);	  int    start    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	73	None	replace
164	[BUG]  [BUGGY]  char[]  str  =  getDelimiterCharArray();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiterCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterCharArray();	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
165	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars)||  str.length  ==  0)  {	  if(StringUtils.isEmpty(chars)||    str.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
166	[BUG]  [BUGGY]  Integer  str  =  getDecimalValue(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getDecimalValue(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getDecimalValue(str);	  Integer    str    =    getDecimalValue();    	non-compiled	[CE]  not  a  statement	71	None	replace
167	[BUG]  [BUGGY]  if(str  ==  null  ||  chars.length  ==  0)  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  chars.length  ==  0)  {  return  false;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  chars.length  ==  0)  {  return  false;  }	  if(str    ==    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
168	[BUG]  [BUGGY]  if(str  ==  null  ||  chars.length  ==  0)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  chars.length  ==  0)  {  return  true;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  chars.length  ==  0)  {  return  true;  }	  if(str    ==    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
169	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  1  :  chars.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str  ==  null)?  1  :  chars.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  1  :  chars.length();	  int    start    =(str    ==    null)?    1    :    str.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
170	[BUG]  [BUGGY]  int  i  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.indexOf('.')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('.')+  1;	  int    i    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	48	None	replace
171	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  start  ==  chars.length)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  start  ==  chars.length)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  start  ==  chars.length)  {	  if(StringUtils.isEmpty(str)&&    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
172	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)&&  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)&&    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
173	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars!=  null)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars!=  null)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
174	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars  ==  null)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars  ==  null)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
175	[BUG]  [BUGGY]  char[]  chars  =  str.substring(start,  start);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  str.substring(start,  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str.substring(start,  start);	  char[]    chars    =    str.trim();    	non-compiled	[CE]  not  a  statement	69	None	replace
176	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  start  +  1,  str.length);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('.',  start  +  1,  str.length);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  start  +  1,  str.length);	  int    i    =    str.lastIndexOf('.',    start);    	non-compiled	[CE]  not  a  statement	47	None	replace
177	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	79	None	replace
178	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length!=  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length!=  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars.length!=  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	79	None	replace
179	[BUG]  [BUGGY]  String[]  str  =  getEscapedChars();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getEscapedChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getEscapedChars();	  String[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	27	None	replace
180	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str)||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str)||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||!StringUtils.isEmpty(str)||  chars.length  ==  0)  {	  if(!StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
181	[BUG]  [BUGGY]  int  start  =(sz  <  chars.length)?  1  :  0;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(sz  <  chars.length)?  1  :  0;  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(sz  <  chars.length)?  1  :  0;	  int    start    =(chars[start]    ==    '-')?    1    :    0;    	non-compiled	[CE]  not  a  statement	65	None	replace
182	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  str.length()!=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()!=    0)    {    	non-compiled	[CE]  not  a  statement	17	None	replace
183	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ])||  hasExp)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ])||  hasExp)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ])||  hasExp)  {	  if(str    ==    null    ||    StringUtils.isEmpty(chars[str.length()    ]))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
184	[BUG]  [BUGGY]  Integer  str  =  getNumberValue()  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getNumberValue()  +  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getNumberValue()  +  1;	  Integer    str    =    getNumberValue();    	non-compiled	[CE]  not  a  statement	40	None	replace
185	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
186	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  start  ==  chars.length)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  start  ==  chars.length)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  start  ==  chars.length)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
187	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(str.length()    ==    0    ||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	16	None	replace
188	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  chars.length!=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  chars.length!=  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  chars.length!=  0)  {	  if(StringUtils.isEmpty(str)||    chars.length!=    0)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
189	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  allowSigns)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  allowSigns)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  allowSigns)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
190	[BUG]  [BUGGY]  char[]  str  =  getStandardChars(start);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getStandardChars(start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStandardChars(start);	  char[]    str    =    getStandardChars();    	non-compiled	[CE]  not  a  statement	74	None	replace
191	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
192	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
193	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  0))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  0))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
194	[BUG]  [BUGGY]  if(str!=  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str!=  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str!=  null  ||  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)&&    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	51	None	replace
195	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  sz))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  sz))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  sz))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
196	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  start))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars,  start))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
197	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  0))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  0))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
198	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars[start]))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars[start]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  StringUtils.isEmpty(chars[start]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[start]))    {    	non-compiled	[CE]  not  a  statement	67	None	replace
199	[BUG]  [BUGGY]  Integer  str  =  getIntValue().doubleValue();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue().doubleValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue().doubleValue();	  Integer    str    =    getIntValue().intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
200	[BUG]  [BUGGY]  char[]  str  =  getDelimiter().toCharArray();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiter().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiter().toCharArray();	  char[]    str    =    getChars().toCharArray();    	non-compiled	[CE]  not  a  statement	25	None	replace
201	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  isNumber(chars[0]))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str)||  isNumber(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(str)||  isNumber(chars[0]))  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
202	[BUG]  [BUGGY]  String  chars  =  str.substring(start,  start);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String  chars  =  str.substring(start,  start);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String  chars  =  str.substring(start,  start);	  String    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	23	None	replace
203	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0])||  isNumber(chars[1]))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0])||  isNumber(chars[1]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0])||  isNumber(chars[1]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[0]))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
204	[BUG]  [BUGGY]  char[]  str  =  this.getCharArray();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  this.getCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  this.getCharArray();	  char[]    str    =    this.getChars();    	non-compiled	[CE]  not  a  statement	26	None	replace
205	[BUG]  [BUGGY]  char[]  str  =  getCharArray().toCharArray();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getCharArray().toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getCharArray().toCharArray();	  char[]    str    =    getCharArray();    	non-compiled	[CE]  not  a  statement	59	None	replace
206	[BUG]  [BUGGY]  char[]  str  =  getCharArray(str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getCharArray(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getCharArray(str);	  char[]    str    =    getCharArray();    	non-compiled	[CE]  not  a  statement	59	None	replace
207	[BUG]  [BUGGY]  String[]  chars  =  getChars(str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  chars  =  getChars(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  chars  =  getChars(str);	  String[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	24	None	replace
208	[BUG]  [BUGGY]  Integer  str  =  getBigIntegerValue();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getBigIntegerValue();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getBigIntegerValue();	  Integer    str    =    getLongValue();    	non-compiled	[CE]  not  a  statement	42	None	replace
209	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars,  start))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  isNumber(chars,  start))  {	  if(!StringUtils.isEmpty(str)||    isNumber(chars[0]))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
210	[BUG]  [BUGGY]  Integer  str  =  getImpl();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getImpl();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getImpl();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
211	[BUG]  [BUGGY]  Integer  str  =  getInt();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getInt();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getInt();	  Integer    str    =    getNumber();    	non-compiled	[CE]  not  a  statement	72	None	replace
212	[BUG]  [BUGGY]  Integer  str  =  getIntValue().intValue()  *  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getIntValue().intValue()  *  2;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue().intValue()  *  2;	  Integer    str    =    getIntValue().intValue();    	non-compiled	[CE]  not  a  statement	41	None	replace
213	[BUG]  [BUGGY]  Character[]  chars  =  str.toCharArray();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Character[]  chars  =  str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Character[]  chars  =  str.toCharArray();	  String[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	24	None	replace
214	[BUG]  [BUGGY]  String[]  chars  =  str.trim();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  chars  =  str.trim();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  chars  =  str.trim();	  String[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	24	None	replace
215	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  0))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  0))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    0))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
216	[BUG]  [BUGGY]  String[]  str  =  getEmptyChars();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  String[]  str  =  getEmptyChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getEmptyChars();	  String[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	27	None	replace
217	[BUG]  [BUGGY]  char[]  chars  =  str.trim().toLowerCase();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  chars  =  str.trim().toLowerCase();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str.trim().toLowerCase();	  char[]    chars    =    str.trim();    	non-compiled	[CE]  not  a  statement	69	None	replace
218	[BUG]  [BUGGY]  char[]  str  =  getStandardChars(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getStandardChars(str);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStandardChars(str);	  char[]    str    =    getStandardChars();    	non-compiled	[CE]  not  a  statement	74	None	replace
219	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  return  false;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  <  =  0)  {  return  false;  }	  if(str    ==    null    ||    str.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
220	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length  <  2)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length  <  2)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  chars.length  <  2)  {	  if(!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
221	[BUG]  [BUGGY]  char[]  str  =  getCharDigits();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getCharDigits();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getCharDigits();	  char[]    str    =    getCharArray();    	non-compiled	[CE]  not  a  statement	59	None	replace
222	[BUG]  [BUGGY]  char[]  str  =  getDelimiterChar();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiterChar();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterChar();	  char[]    str    =    getCharArray();    	non-compiled	[CE]  not  a  statement	59	None	replace
223	[BUG]  [BUGGY]  Integer  str  =  getDecPoint();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  Integer  str  =  getDecPoint();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getDecPoint();	  Integer    str    =    getLongValue();    	non-compiled	[CE]  not  a  statement	42	None	replace
224	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars[start]  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars[start]  ==  null)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars[start]  ==  null)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
225	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  hasDecPoint)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  hasDecPoint)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  hasDecPoint)  {	  if(StringUtils.isEmpty(str)||    str!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
226	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars[start])||  StringUtils.isEmpty(chars[start]))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars[start])||  StringUtils.isEmpty(chars[start]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars[start])||  StringUtils.isEmpty(chars[start]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[0]))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
227	[BUG]  [BUGGY]  int  start  =(str!=  null)?  1  :  str.length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str!=  null)?  1  :  str.length();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str!=  null)?  1  :  str.length();	  int    start    =(str    ==    null)?    1    :    str.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
228	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  hasDecPoint)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  hasDecPoint)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  hasDecPoint)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
229	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  foundDigit)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  foundDigit)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0  ||  foundDigit)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    hasExp)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
230	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length()  >  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length()  >  0;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  -1  :  str.length()  >  0;	  int    start    =(str    ==    null)?    -1    :    str.length();    	non-compiled	[CE]  not  a  statement	44	None	replace
231	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length()  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
232	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length()  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length()  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars.length()  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
233	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.lastIndexOf('.')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('.')+  1;	  int    sz    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	77	None	replace
234	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  start))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars,  start))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
235	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)&&  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)&&  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)&&    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	63	None	replace
236	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(chars)||  str.length()  ==  0)  {	  if(!StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
237	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.')-  1;	  int    start    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
238	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-')-  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-')-  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-')-  1;	  int    start    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
239	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('-')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-')+  1;	  int    start    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
240	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
241	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(chars))  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
242	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars,  start))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(chars,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(chars,  start))  {	  if(chars    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
243	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  start))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  start))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(sz,  start))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
244	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  i))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  i))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  i))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars,    start))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
245	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.')-  1;	  int    i    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
246	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-')-  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  i  =  str.lastIndexOf('-')-  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-')-  1;	  int    i    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
247	[BUG]  [BUGGY]  if(StringUtils.isBlank(chars)||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isBlank(chars)||  StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isBlank(chars)||  StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
248	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(chars)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	66	None	replace
249	[BUG]  [BUGGY]  if(str  ==  null  ||  chars.length  <  2)  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(str  ==  null  ||  chars.length  <  2)  {  return  false;  }  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  chars.length  <  2)  {  return  false;  }	  if(str    ==    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
250	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start],  sz))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start],  sz))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start],  sz))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars[start]))    {    	non-compiled	[CE]  not  a  statement	67	None	replace
251	[BUG]  [BUGGY]  CharSequence[]  chars  =  str.toCharArray();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  CharSequence[]  chars  =  str.toCharArray();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	CharSequence[]  chars  =  str.toCharArray();	  char[]    chars    =    this.str.toCharArray();    	non-compiled	[CE]  not  a  statement	22	None	replace
252	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('.')-  1;	  int    sz    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
253	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('-')+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  sz  =  str.lastIndexOf('-')+  1;  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('-')+  1;	  int    sz    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
254	[BUG]  [BUGGY]  char[]  str  =  str.getChars();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  str.getChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  str.getChars();	  char[]    str    =    this.getChars();    	non-compiled	[CE]  not  a  statement	26	None	replace
255	[BUG]  [BUGGY]  char[]  str  =  this.getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  this.getString();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  this.getString();	  char[]    str    =    this.getChars();    	non-compiled	[CE]  not  a  statement	26	None	replace
256	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.',  sz);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  int  start  =  str.lastIndexOf('.',  sz);  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.',  sz);	  int    start    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	73	None	replace
257	[BUG]  [BUGGY]  char[]  str  =  getStandardDelimiterChars();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getStandardDelimiterChars();  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStandardDelimiterChars();	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
258	[BUG]  [BUGGY]  char[]  str  =  getDelimiterChars(str.toCharArray());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  char[]  str  =  getDelimiterChars(str.toCharArray());  [BUGGY]      if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterChars(str.toCharArray());	  char[]    str    =    getDelimiterChars();    	non-compiled	[CE]  not  a  statement	60	None	replace
259	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(chars))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||!StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	55	None	replace
260	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(chars)&&  isNumber(chars[0]))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isNumber(String  str)  {      [BUGGY]  if(!StringUtils.isEmpty(chars)&&  isNumber(chars[0]))  {  [BUGGY]      return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(chars)&&  isNumber(chars[0]))  {	  if(!StringUtils.isEmpty(str)||    isNumber(chars[0]))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
