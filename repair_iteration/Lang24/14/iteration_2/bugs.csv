bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||!StringUtils.isEmpty(str))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||!StringUtils.isEmpty(str))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(!StringUtils.isEmpty(chars))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(chars))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
4	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars[0]))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(!StringUtils.isEmpty(str)||  isNumber(chars[0]))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  isNumber(chars[0]))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
5	[BUG]  [BUGGY]  int  sz  =  str.length()  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  sz  =  str.length()  +  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  +  1;	      int    sz    =    str.length();    	non-compiled	[CE]  not  a  statement	13	None	replace
6	[BUG]  [BUGGY]  int  sz  =  str.length()  -  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  sz  =  str.length()  -  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  -  1;	      int    sz    =    str.length();    	non-compiled	[CE]  not  a  statement	13	None	replace
7	[BUG]  [BUGGY]  int  sz  =  str.length()  *  2;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  sz  =  str.length()  *  2;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.length()  *  2;	      int    sz    =    str.length();    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  start);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.lastIndexOf('-',  start);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  start);	      int    i    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	15	None	replace
9	[BUG]  [BUGGY]  int  i  =  str.indexOf('-');  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.indexOf('-');  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('-');	      int    i    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	15	None	replace
10	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-',  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.lastIndexOf('-',  0);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-',  0);	      int    i    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	15	None	replace
11	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  false;  }  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  false;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
12	[BUG]  [BUGGY]  if(str  ==  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  false;  }  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null)  {  return  false;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
13	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  false;  }  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  return  false;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars[str.length()  ]))  {	  if(str!=    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
15	[BUG]  [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(chars  ==  null  ||  StringUtils.isEmpty(str))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(chars  ==  null  ||  StringUtils.isEmpty(str))  {	  if(str!=    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
16	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
18	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasExp)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasExp)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  hasExp)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
19	[BUG]  [BUGGY]  int  start  =  str.length()  -  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.length()  -  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.length()  -  1;	      int    start    =    str.length();    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]  int  start  =  str.length()  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.length()  +  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.length()  +  1;	      int    start    =    str.length();    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  int  start  =  str.length()  -  2;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.length()  -  2;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.length()  -  2;	      int    start    =    str.length();    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  char[]  chars  =  this.str.toCharArray();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  chars  =  this.str.toCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  this.str.toCharArray();	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  String  chars  =  str.toCharArray();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  String  chars  =  str.toCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String  chars  =  str.toCharArray();	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  String[]  chars  =  str.toCharArray();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  String[]  chars  =  str.toCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  chars  =  str.toCharArray();	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
25	[BUG]  [BUGGY]  char[]  str  =  getChars().toCharArray();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  getChars().toCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getChars().toCharArray();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
26	[BUG]  [BUGGY]  char[]  str  =  this.getChars();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  this.getChars();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  this.getChars();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
27	[BUG]  [BUGGY]  String[]  str  =  getChars();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  String[]  str  =  getChars();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	String[]  str  =  getChars();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
28	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
29	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0]))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0]))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[0]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
30	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  start))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
31	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars,  0))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
32	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.lastIndexOf('-',  0);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  0);	      int    start    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	14	None	replace
33	[BUG]  [BUGGY]  int  start  =  str.indexOf('-');  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.indexOf('-');  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-');	      int    start    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	14	None	replace
34	[BUG]  [BUGGY]  int  start  =  str.indexOf('-',  0);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.indexOf('-',  0);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.indexOf('-',  0);	      int    start    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  int  i  =  str.length()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.length()  +  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  +  1;	      int    i    =    str.length();    	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  int  i  =  str.length()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.length()  -  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  -  1;	      int    i    =    str.length();    	non-compiled	[CE]  not  a  statement	8	None	replace
37	[BUG]  [BUGGY]  int  i  =  str.length()  *  2;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.length()  *  2;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.length()  *  2;	      int    i    =    str.length();    	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length!=  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length!=  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars.length!=  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
40	[BUG]  [BUGGY]  Integer  str  =  getNumberValue();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getNumberValue();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getNumberValue();	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
41	[BUG]  [BUGGY]  Integer  str  =  getIntValue().intValue();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getIntValue().intValue();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue().intValue();	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
42	[BUG]  [BUGGY]  Integer  str  =  getLongValue();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getLongValue();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getLongValue();	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
43	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
44	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =(str  ==  null)?  -1  :  str.length();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  -1  :  str.length();	      int    start    =(str    ==    null)?    0    :    str.length();    	non-compiled	[CE]  not  a  statement	7	None	replace
45	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  1  :  str.length();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =(str  ==  null)?  1  :  str.length();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  1  :  str.length();	      int    start    =(str    ==    null)?    0    :    str.length();    	non-compiled	[CE]  not  a  statement	7	None	replace
46	[BUG]  [BUGGY]  int  start  =(str  ==  null)?  0  :  str.length()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =(str  ==  null)?  0  :  str.length()  +  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(str  ==  null)?  0  :  str.length()  +  1;	      int    start    =(str    ==    null)?    0    :    str.length();    	non-compiled	[CE]  not  a  statement	7	None	replace
47	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  start);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.lastIndexOf('.',  start);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  start);	      int    i    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	16	None	replace
48	[BUG]  [BUGGY]  int  i  =  str.indexOf('.');  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.indexOf('.');  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.indexOf('.');	      int    i    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	16	None	replace
49	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.lastIndexOf('.',  0);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('.',  0);	      int    i    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	16	None	replace
50	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
51	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
52	[BUG]  [BUGGY]  Integer  str  =  getIntValue()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getIntValue()  +  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getIntValue()  +  1;	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
53	[BUG]  [BUGGY]  int  i  =  str.lastIndexOf('-')+  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  i  =  str.lastIndexOf('-')+  1;  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  i  =  str.lastIndexOf('-')+  1;	      int    i    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	15	None	replace
54	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(chars))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(chars))  {	  if(str!=    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
55	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||!StringUtils.isEmpty(chars))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
56	[BUG]  [BUGGY]  char[]  chars  =  str  ==  null?  null  :  str.toCharArray();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  chars  =  str  ==  null?  null  :  str.toCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str  ==  null?  null  :  str.toCharArray();	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
57	[BUG]  [BUGGY]  char[]  chars  =  getChars(str);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  chars  =  getChars(str);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  getChars(str);	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
58	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  char[]  str  =  getCharArray();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  getCharArray();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getCharArray();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
60	[BUG]  [BUGGY]  char[]  str  =  getDelimiterChars();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  getDelimiterChars();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getDelimiterChars();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
61	[BUG]  [BUGGY]  char[]  str  =  getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  getString();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getString();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  chars.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.lastIndexOf('-',  chars.length);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  chars.length);	      int    start    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	14	None	replace
63	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)&&  chars.length  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)&&  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
64	[BUG]  [BUGGY]  if(str  ==  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(str  ==  null)  {  return  true;  }  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(str  ==  null)  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  int  start  =(chars[start]  ==  '-')?  1  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =(chars[start]  ==  '-')?  1  :  0;  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =(chars[start]  ==  '-')?  1  :  0;	      	non-compiled	[CE]  not  a  statement	5	None	replace
66	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  StringUtils.isEmpty(chars))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
67	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start]))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start]))  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(chars[start]))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(chars))    {    	non-compiled	[CE]  not  a  statement	17	None	replace
68	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(!StringUtils.isEmpty(str)||  chars.length  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(!StringUtils.isEmpty(str)||  chars.length  ==  0)  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
69	[BUG]  [BUGGY]  char[]  chars  =  str.trim();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  chars  =  str.trim();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  chars  =  str.trim();	      char[]    chars    =    str.toCharArray();    	non-compiled	[CE]  not  a  statement	6	None	replace
70	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('-',  -1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.lastIndexOf('-',  -1);  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('-',  -1);	      int    start    =    str.lastIndexOf('-');    	non-compiled	[CE]  not  a  statement	14	None	replace
71	[BUG]  [BUGGY]  Integer  str  =  getDecimalValue();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getDecimalValue();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getDecimalValue();	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
72	[BUG]  [BUGGY]  Integer  str  =  getNumber();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  Integer  str  =  getNumber();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	Integer  str  =  getNumber();	      Integer    str    =    getIntValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
73	[BUG]  [BUGGY]  int  start  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  start  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  start  =  str.lastIndexOf('.');	      int    start    =    str.length();    	non-compiled	[CE]  not  a  statement	12	None	replace
74	[BUG]  [BUGGY]  char[]  str  =  getStandardChars();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  char[]  str  =  getStandardChars();  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	char[]  str  =  getStandardChars();	      char[]    str    =    getChars();    	non-compiled	[CE]  not  a  statement	10	None	replace
75	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str!=  null)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  str!=  null)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str!=  null)  {	  if(str!=    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  str.length()  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
77	[BUG]  [BUGGY]  int  sz  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  int  sz  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isEmpty(str))  {  return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	int  sz  =  str.lastIndexOf('.');	      int    sz    =    str.length();    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(chars)||  str.length()  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(chars)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
79	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length  ==  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isNumber(String  str)  {    [BUGGY]  if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]    return  false;  }  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1320	1320	1	replace	if(StringUtils.isEmpty(str)||  chars.length  ==  0  ||  chars.length  ==  0)  {	  if(StringUtils.isEmpty(str)||    chars.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
