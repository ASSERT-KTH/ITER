bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  Throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  Throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    Throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");	  	non-compiled	[CE]  not  a  statement	1	None	add
3	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str.length());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  getNumber(str,  str.length());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str.length());	      Number    number    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  Number  number  =  getNumber(str)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  getNumber(str)+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str)+  1;	      Number    number    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  getNumber(str,  1);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  1);	      Number    number    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
10	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
11	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  getInteger(0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  getInteger(0);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(0);	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.intValue());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  getInteger(str.intValue());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.intValue());	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  getInteger(str.length());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.length());	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  getInteger(str.substring(1));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(1));	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number ",  str);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  return  createLong(str);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  createLong(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createLong(str);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createInteger(str);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createInteger(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  createInteger(str);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createLong(str);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createLong(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  createLong(str);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  String  str  =  getString(str.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(str.toLowerCase());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.toLowerCase());	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  String  str  =  getString(str.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(str.toUpperCase());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.toUpperCase());	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  -  1));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(0,  str.length()  -  1));	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  String  str  =  getString(str.substring(1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(str.substring(1));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(1));	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	7	None	replace
34	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.trim().toLowerCase();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toLowerCase();	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  Number  str  =  StringUtils.getBlank(str);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  StringUtils.getBlank(str);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getBlank(str);	      Number    str    =    StringUtils.removeBlank(str);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  StringUtils.removeBlank(str)+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str)+  1;	      Number    str    =    StringUtils.removeBlank(str);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str  +  1);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  StringUtils.removeBlank(str  +  1);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str  +  1);	      Number    str    =    StringUtils.removeBlank(str);    	non-compiled	[CE]  ')'  expected	9	None	replace
39	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.toLowerCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  ')'  expected	8	None	replace
40	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.toUpperCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  ')'  expected	8	None	replace
41	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  getNumber(str.substring(1));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(1));	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ');	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
43	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  exp);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ',  exp);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  exp);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
44	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  expPos);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
45	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(str.intValue());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.intValue());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.length());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  >  expected	6	None	replace
51	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  >  expected	10	None	replace
52	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  String  str  =  this.mant.trim();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  this.mant.trim();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  String  str  =  null;  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  null;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  null;	      String    str    =    str.trim();    	non-compiled	[CE]  >  expected	18	None	replace
56	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
57	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ';'  expected	7	None	replace
58	[BUG]  [BUGGY]  Integer  str  =  getInteger(str)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  getInteger(str)+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str)+  1;	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  String  str  =  getString(Short.valueOf(str));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(Short.valueOf(str));  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(Short.valueOf(str));	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  String  str  =  getString(str)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  getString(str)+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)+  1;	      String    str    =    getString(str);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(str,  0);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str,  0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
64	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");	  	non-compiled	[CE]  not  a  statement	1	None	add
65	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  createBigInteger(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBigInteger(str);	      	non-compiled	[CE]  not  a  statement	5	None	replace
66	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  createBigDecimal(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBigDecimal(str);	      	non-compiled	[CE]  not  a  statement	5	None	replace
67	[BUG]  [BUGGY]  return  createBlank(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  createBlank(str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBlank(str);	      	non-compiled	[CE]  not  a  statement	5	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ')+  1;	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
71	[BUG]  [BUGGY]  Number  number  =  createNumber(str);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  createNumber(str);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str);	      Number    number    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
72	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  getNumber(str,  0);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  0);	      Number    number    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
73	[BUG]  [BUGGY]  Number  str  =  createNumber(str);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  createNumber(str);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
74	[BUG]  [BUGGY]  Number  str  =  getNumber(str)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  getNumber(str)+  1;  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str)+  1;	      Number    str    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
75	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  getNumber(str,  0);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str,  0);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
76	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  dec);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  dec);	      Number    str    =    StringUtils.removeBlank(str);    	non-compiled	[CE]  not  a  statement	9	None	replace
77	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  dec);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Number  number  =  getNumber(str,  dec);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  dec);	      Number    number    =    getNumber(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(dec  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
79	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.');  return  createInteger(decPos);	      	non-compiled	[CE]  not  a  statement	5	None	replace
80	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
81	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str,  1);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	12	None	replace
83	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  dec);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  int  decPos  =  str.indexOf('  ',  dec);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  dec);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  not  a  statement	19	None	replace
84	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
85	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
86	[BUG]  [BUGGY]  String  str  =  str.toLowerCase();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  String  str  =  str.toLowerCase();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.toLowerCase();	      String    str    =    str.trim();    	non-compiled	[CE]  not  a  statement	18	None	replace
87	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
88	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
89	[BUG]  [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number   ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {    [BUGGY]  throw  new  NumberFormatException(   "Blank  string  is  not  a  valid  number   ");  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number   ");  [BUGGY]    }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    return  new  NumberFormatException( "Blank  string  is  not  a  valid  number   ");	  	non-compiled	[CE]  not  a  statement	1	None	add
