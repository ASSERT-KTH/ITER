bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number.   "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number.   "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number.   "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
3	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	47	None	replace
4	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	47	None	replace
5	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	47	None	replace
6	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	47	None	replace
7	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
8	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number.   "  +  str);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number.   "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number.   "  +  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	19	None	replace
11	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  not  a  statement	53	None	replace
12	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  not  a  statement	53	None	replace
13	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  exp);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  exp);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  exp);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  not  a  statement	53	None	replace
14	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
15	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
18	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos  +  1);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.');  return  createInteger(decPos  +  1);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
19	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos,  expPos);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.');  return  createInteger(decPos,  expPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.');  return  createInteger(decPos,  expPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.',  expPos);  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
21	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  createInteger(str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  createInteger(str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length());  return  createInteger(str);	  String    str    =    str.substring(0,    str.length()    -    1);    return    createLong(str);    	non-compiled	[CE]  not  a  statement	27	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createNumber(str);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  createNumber(str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  createNumber(str);	  String    str    =    str.substring(0,    str.length()    -    1);    return    createLong(str);    	non-compiled	[CE]  not  a  statement	27	None	replace
23	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
24	[BUG]  [BUGGY]  String  str  =  this.mant.toLowerCase();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  this.mant.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant.toLowerCase();	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  not  a  statement	86	None	replace
25	[BUG]  [BUGGY]  String  str  =  str.toUpperCase();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.toUpperCase();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.toUpperCase();	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  not  a  statement	86	None	replace
26	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	23	None	replace
27	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	23	None	replace
28	[BUG]  [BUGGY]  Number  str  =  StringUtils.getBlank(str  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.getBlank(str  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getBlank(str  +  1);	  Number    str    =    StringUtils.removeBlank(str    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
29	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str  -  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str  -  1);	  Number    str    =    StringUtils.removeBlank(str    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
30	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  str.length());	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  expPos);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  expPos);	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  expPos.indexOf('  ',  str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  expPos.indexOf('  ',  str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  expPos.indexOf('  ',  str);	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length()  -  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  str.length()  -  1);	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
34	[BUG]  [BUGGY]  Number  str  =  getNumber(str)/  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str)/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str)/  1;	  Number    str    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	74	None	replace
35	[BUG]  [BUGGY]  Number  str  =  getNumber(str)+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str)+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str)+  2;	  Number    str    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	74	None	replace
36	[BUG]  [BUGGY]  Number  str  =  getNumber(str)+  1L;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str)+  1L;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str)+  1L;	  Number    str    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	74	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
38	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toLowerCase());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toLowerCase());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toLowerCase());	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	21	None	replace
39	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toString());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toString());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str.toString());	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	21	None	replace
40	[BUG]  [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	new  NumberFormatException( "Blank  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	64	None	replace
41	[BUG]  [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	64	None	replace
42	[BUG]  [BUGGY]  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	new  NumberFormatException( "String  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	64	None	replace
43	[BUG]  [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	64	None	replace
44	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);	  Throwables.throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
46	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
47	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
48	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  or  a  numeric  string. ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
49	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
50	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(dec  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
51	[BUG]  [BUGGY]  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  ||  str.length()  ==  0)  {  return  createBigInteger(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	||  str.length()  ==  0)  {  return  createBigInteger(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
52	[BUG]  [BUGGY]  String  str  =  this.mant;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  this.mant;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant;	  String    str    =    null;    	non-compiled	[CE]  not  a  statement	55	None	replace
53	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  exp);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  exp);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  exp);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
54	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  ex);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  ex);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  ex);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
55	[BUG]  [BUGGY]  Number  str  =  StringUtils.getBlank(str,  dec);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.getBlank(str,  dec);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getBlank(str,  dec);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
56	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  1);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
57	[BUG]  [BUGGY]  Number  str  =  getNumber(str.getValue());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.getValue());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.getValue());	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  not  a  statement	39	None	replace
58	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.       "    +    str);    	non-compiled	[CE]  not  a  statement	35	None	replace
59	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.   "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.       "    +    str);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
60	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	48	None	replace
61	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	48	None	replace
62	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
63	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  createNumber(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
64	[BUG]  [BUGGY]  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	||  str.length()  ==  0)  {  return  createInteger(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
65	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str)+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str)+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str)+  2;	  Number    str    =    StringUtils.removeBlank(str)+    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
66	[BUG]  [BUGGY]  Number  str  =  StringUtils.getBlank(str)+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.getBlank(str)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getBlank(str)+  1;	  Number    str    =    StringUtils.removeBlank(str)+    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
67	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str)/  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str)/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str)/  1;	  Number    str    =    StringUtils.removeBlank(str)+    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
68	[BUG]  [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant.substring(0,  str.length()  -  1);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  not  a  statement	54	None	replace
69	[BUG]  [BUGGY]  String  str  =  this.mant.substring(0,  this.mant.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  this.mant.substring(0,  this.mant.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant.substring(0,  this.mant.length()  -  1);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  not  a  statement	54	None	replace
70	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  exp);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  exp);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  exp);	  Number    number    =    getNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	77	None	replace
71	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str);	  Number    number    =    getNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	77	None	replace
72	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	11	None	replace
73	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	11	None	replace
74	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  str);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	11	None	replace
75	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.length()  -  1);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
76	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.length()  +  1);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  -  2);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.length()  -  2);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
78	[BUG]  [BUGGY]  String  str  =  getString(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(0,  str.length()));	  String    str    =    getString(str.substring(1));    	non-compiled	[CE]  not  a  statement	31	None	replace
79	[BUG]  [BUGGY]  String  str  =  getString(str.substring(2));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(2));	  String    str    =    getString(str.substring(1));    	non-compiled	[CE]  not  a  statement	31	None	replace
80	[BUG]  [BUGGY]  String  str  =  getString(str.substring(1),  str.length());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(1),  str.length());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(1),  str.length());	  String    str    =    getString(str.substring(1));    	non-compiled	[CE]  not  a  statement	31	None	replace
81	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(0,  str.length()));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
83	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(2));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(2));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
84	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  1));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(0,  1));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
85	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createInteger(str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createInteger(str);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	65	None	replace
86	[BUG]  [BUGGY]  return  createNumber(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createNumber(str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createNumber(str);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	65	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toLowerCase(LONG_MINUS_ONE);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  not  a  statement	34	None	replace
88	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_ZERO);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.trim().toLowerCase(LONG_ZERO);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toLowerCase(LONG_ZERO);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  not  a  statement	34	None	replace
89	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toLowerCase(Long.MAX_VALUE);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  not  a  statement	34	None	replace
90	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.toUpperCase()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.toUpperCase()  +  1);	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  not  a  statement	40	None	replace
91	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	70	None	replace
92	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	62	None	replace
93	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	62	None	replace
94	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str.length()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str.length()  -  1);	  Number    number    =    getNumber(str,    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
95	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str.length()  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str.length()  +  1);	  Number    number    =    getNumber(str,    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
96	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str.length()  -  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str.length()  -  2);	  Number    number    =    getNumber(str,    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
97	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
98	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	24	None	replace
99	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	24	None	replace
100	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  ex);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	24	None	replace
101	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str.toString());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str.toString());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str.toString());	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	51	None	replace
102	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	57	None	replace
103	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	57	None	replace
104	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	57	None	replace
105	[BUG]  [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "Blank  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    return    new    NumberFormatException(   "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	89	None	replace
106	[BUG]  [BUGGY]  throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    return    new    NumberFormatException(   "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	89	None	replace
107	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number    of   "    +    str);    	non-compiled	[CE]  not  a  statement	85	None	replace
108	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toString());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toString());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toString());	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number    of   "    +    str);    	non-compiled	[CE]  not  a  statement	85	None	replace
109	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, "  +  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
110	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
111	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
112	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  allZeros);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
113	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  ex);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  ex);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str,  ex);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
115	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
116	[BUG]  [BUGGY]  Number  number  =  getNumber(str)+  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str)+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str)+  2;	  Number    number    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
117	[BUG]  [BUGGY]  Number  number  =  getNumber(str)/  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str)/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str)/  1;	  Number    number    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
118	[BUG]  [BUGGY]  Number  number  =  getNumber(str)+  1L;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str)+  1L;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str)+  1L;	  Number    number    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
119	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.intValue()  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.intValue()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.intValue()  +  1);	  Integer    str    =    getInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	13	None	replace
120	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.intValue()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.intValue()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.intValue()  -  1);	  Integer    str    =    getInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	13	None	replace
121	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.intValue(),  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.intValue(),  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.intValue(),  1);	  Integer    str    =    getInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	13	None	replace
122	[BUG]  [BUGGY]  return  createBigDecimal(str.substring(1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createBigDecimal(str.substring(1));  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBigDecimal(str.substring(1));	  return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	66	None	replace
123	[BUG]  [BUGGY]  Integer  str  =  getInteger(str)/  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str)/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str)/  1;	  Integer    str    =    getInteger(str)+    1;    	non-compiled	[CE]  not  a  statement	58	None	replace
124	[BUG]  [BUGGY]  Integer  str  =  getInteger(str)+  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str)+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str)+  2;	  Integer    str    =    getInteger(str)+    1;    	non-compiled	[CE]  not  a  statement	58	None	replace
125	[BUG]  [BUGGY]  Integer  str  =  getInteger(str)+  4;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str)+  4;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str)+  4;	  Integer    str    =    getInteger(str)+    1;    	non-compiled	[CE]  not  a  statement	58	None	replace
126	[BUG]  [BUGGY]  int  decPos  =  exp.indexOf('  ',  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  exp.indexOf('  ',  str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  exp.indexOf('  ',  str);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  not  a  statement	43	None	replace
127	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  exp);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  exp);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  exp);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  not  a  statement	43	None	replace
128	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  createNumber(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  createNumber(str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length());  return  createNumber(str);	  String    str    =    str.substring(0,    str.length()    -    1);    return    createInteger(str);    	non-compiled	[CE]  not  a  statement	26	None	replace
129	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
130	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");	  Throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
131	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number ",  str);	  Throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
132	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str);	  Throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
133	[BUG]  [BUGGY]  Throwables.warning( "Blank  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.warning( "Blank  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.warning( "Blank  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	1	None	replace
134	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	18	None	replace
135	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
136	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "String  string  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    Throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	2	None	replace
137	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ')+  2;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	68	None	replace
138	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ')+  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	68	None	replace
139	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  3;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ')+  3;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ')+  3;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	68	None	replace
140	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
141	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	17	None	replace
142	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str.toString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str.toString());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str.toString());	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	17	None	replace
143	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  1);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  not  a  statement	42	None	replace
144	[BUG]  [BUGGY]  String  str  =  getString(str)+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str)+  2;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)+  2;	  String    str    =    getString(str)+    1;    	non-compiled	[CE]  not  a  statement	60	None	replace
145	[BUG]  [BUGGY]  String  str  =  getString(str)+  1L;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str)+  1L;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)+  1L;	  String    str    =    getString(str)+    1;    	non-compiled	[CE]  not  a  statement	60	None	replace
146	[BUG]  [BUGGY]  String  str  =  getString(str)+  4;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str)+  4;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)+  4;	  String    str    =    getString(str)+    1;    	non-compiled	[CE]  not  a  statement	60	None	replace
147	[BUG]  [BUGGY]  Number  str  =  StringUtils.getBlank(str,  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.getBlank(str,  0);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getBlank(str,  0);	  Number    str    =    StringUtils.getBlank(str);    	non-compiled	[CE]  not  a  statement	36	None	replace
148	[BUG]  [BUGGY]  Number  str  =  StringUtils.getNumber(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.getNumber(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.getNumber(str);	  Number    str    =    StringUtils.getBlank(str);    	non-compiled	[CE]  not  a  statement	36	None	replace
149	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  2);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str,  2);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str,  2);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  not  a  statement	61	None	replace
150	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  4);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str,  4);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str,  4);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  not  a  statement	61	None	replace
151	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE  +  1);	  int    decPos    =    str.indexOf('    ',    DEC_MINUS_ONE);    	non-compiled	[CE]  not  a  statement	69	None	replace
152	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_MINUS_ONE);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_MINUS_ONE);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  DEC_MINUS_ONE);	  int    decPos    =    str.indexOf('    ',    DEC_MINUS_ONE);    	non-compiled	[CE]  not  a  statement	69	None	replace
153	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  SHORT_MINUS_ONE);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  SHORT_MINUS_ONE);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  SHORT_MINUS_ONE);	  int    decPos    =    str.indexOf('    ',    DEC_MINUS_ONE);    	non-compiled	[CE]  not  a  statement	69	None	replace
154	[BUG]  [BUGGY]  Integer  str  =  getInteger(1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(1);	  Integer    str    =    getInteger(0);    	non-compiled	[CE]  not  a  statement	12	None	replace
155	[BUG]  [BUGGY]  Integer  str  =  getMinimumInteger();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getMinimumInteger();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getMinimumInteger();	  Integer    str    =    getInteger(0);    	non-compiled	[CE]  not  a  statement	12	None	replace
156	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  str);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
157	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  str.length());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  str.length());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  str.length());	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
158	[BUG]  [BUGGY]  Number  number  =  createNull(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNull(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNull(str);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
159	[BUG]  [BUGGY]  return  createLong(str)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createLong(str)+  1;  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createLong(str)+  1;	  return    createLong(str);    	non-compiled	[CE]  not  a  statement	25	None	replace
160	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.n ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	22	None	replace
161	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue()  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.intValue()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.intValue()  +  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	46	None	replace
162	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.intValue(),  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	46	None	replace
163	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.doubleValue());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.doubleValue());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.doubleValue());	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  not  a  statement	46	None	replace
164	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	75	None	replace
165	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  -1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str,  -1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str,  -1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	75	None	replace
166	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  4);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str,  4);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str,  4);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	75	None	replace
167	[BUG]  [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  +  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  +  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(0,  str.length()  +  1));	  String    str    =    getString(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	30	None	replace
168	[BUG]  [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  1));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(0,  str.length()  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(0,  str.length()  1));	  String    str    =    getString(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	30	None	replace
169	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  3);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str,  3);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str,  3);	  Integer    str    =    createInteger(str,    1);    	non-compiled	[CE]  not  a  statement	82	None	replace
170	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	41	None	replace
171	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	41	None	replace
172	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	41	None	replace
173	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(1),  str.length());	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	41	None	replace
174	[BUG]  [BUGGY]  String  str  =  getString(Short.parseLong(str));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(Short.parseLong(str));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(Short.parseLong(str));	  String    str    =    getString(Short.valueOf(str));    	non-compiled	[CE]  not  a  statement	59	None	replace
175	[BUG]  [BUGGY]  String  str  =  getString(Short.valueOf(str)+  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(Short.valueOf(str)+  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(Short.valueOf(str)+  1);	  String    str    =    getString(Short.valueOf(str));    	non-compiled	[CE]  not  a  statement	59	None	replace
176	[BUG]  [BUGGY]  String  str  =  getString(Number.valueOf(str));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(Number.valueOf(str));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(Number.valueOf(str));	  String    str    =    getString(Short.valueOf(str));    	non-compiled	[CE]  not  a  statement	59	None	replace
177	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  -1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  -1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  -1);	  Number    number    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	72	None	replace
178	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  4);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  4);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  4);	  Number    number    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	72	None	replace
179	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  2);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  2);	  Number    number    =    getNumber(str,    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
180	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  not  a  statement	49	None	replace
181	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNumber(str,  false);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str,  false);	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
182	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNumber(str.substring(1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str.substring(1));	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
183	[BUG]  [BUGGY]  Number  str  =  createNull(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNull(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNull(str);	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
184	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number, "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
185	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  but ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  but ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
186	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
187	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  dec);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  dec);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  not  a  statement	83	None	replace
188	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  empty  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  empty  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  empty  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	17	None	replace
189	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  string: "  +  str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  string: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  string: "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	17	None	replace
190	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  1);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
191	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  4);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  4);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  4);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
192	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  12);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  12);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  12);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
193	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  0);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  0);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
194	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  false);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  false);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
195	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNumber(str,  0);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str,  0);	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
196	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ", "mant  cannot  be  numeric. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ", "mant  cannot  be  numeric. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ", "mant  cannot  be  numeric. ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
197	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
198	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
199	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
200	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.')+  1;  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
201	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.',  DEC_POP);  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
202	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  decPos  =  str.indexOf('.');  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  decPos  =  str.indexOf('.');  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
203	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  return  createInteger(decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);  return  createInteger(decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
204	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  not  a  statement	53	None	replace
205	[BUG]  [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MIN_VALUE);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.trim().toLowerCase(Long.MIN_VALUE);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toLowerCase(Long.MIN_VALUE);	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  not  a  statement	34	None	replace
206	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase()  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.toLowerCase()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.toLowerCase()  +  1);	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  not  a  statement	39	None	replace
207	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");	  Throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	63	None	replace
208	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  string: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	51	None	replace
209	[BUG]  [BUGGY]  Number  number  =  createNumber(str)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str)+  1;	  Number    number    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	7	None	replace
210	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ')/  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	68	None	replace
211	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length()));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(1,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(1,  str.length()));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	57	None	replace
212	[BUG]  [BUGGY]  String  str  =  getStringValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getStringValue();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getStringValue();	  String    str    =    null;    	non-compiled	[CE]  not  a  statement	55	None	replace
213	[BUG]  [BUGGY]  String  str  =  getStringValue(str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getStringValue(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getStringValue(str);	  String    str    =    null;    	non-compiled	[CE]  not  a  statement	55	None	replace
214	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  len);	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
215	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  len);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  len);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  len);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  not  a  statement	42	None	replace
216	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(dec  ==  null  ||  str.length()  ==  0)  {  return  createInteger(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
217	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigDecimal(str);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigDecimal(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(dec  ==  null  ||  str.length()  ==  0)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
218	[BUG]  [BUGGY]  String  str  =  Utils.toLowerCase(str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  Utils.toLowerCase(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  Utils.toLowerCase(str);	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  not  a  statement	86	None	replace
219	[BUG]  [BUGGY]  String  str  =  getNumberValue(str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getNumberValue(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getNumberValue(str);	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  not  a  statement	86	None	replace
220	[BUG]  [BUGGY]  String  str  =  getNullValue();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getNullValue();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getNullValue();	  String    str    =    str.toLowerCase();    	non-compiled	[CE]  not  a  statement	86	None	replace
221	[BUG]  [BUGGY]  Number  number  =  getNumber(mant,  str.length());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(mant,  str.length());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(mant,  str.length());	  Number    number    =    getNumber(str,    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
222	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  0L);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  0L);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  0L);	  Number    number    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	72	None	replace
223	[BUG]  [BUGGY]  return  createBigDecimal(str,  decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createBigDecimal(str,  decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBigDecimal(str,  decPos);	  return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	66	None	replace
224	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
225	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  or  a  numeric  string. ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
226	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
227	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	84	None	replace
228	[BUG]  [BUGGY]  String  str  =  this.mant.trim().toLowerCase();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  this.mant.trim().toLowerCase();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  this.mant.trim().toLowerCase();	  String    str    =    this.mant.trim();    	non-compiled	[CE]  not  a  statement	54	None	replace
229	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  descPos);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  descPos);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  descPos);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  not  a  statement	83	None	replace
230	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE)+  1;	  int    decPos    =    str.indexOf('    ',    DEC_MINUS_ONE);    	non-compiled	[CE]  not  a  statement	69	None	replace
231	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
232	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  value ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  value ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
233	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  number ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number,  expecting  a  number ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
234	[BUG]  [BUGGY]  String  str  =  getString(str.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.toUpperCase()  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.toUpperCase()  +  1);	  String    str    =    getString(str.toUpperCase());    	non-compiled	[CE]  not  a  statement	29	None	replace
235	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  allZeros);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	24	None	replace
236	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str,  dec);	  return    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	24	None	replace
237	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  the  str  does  not  exist. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  the  str  does  not  exist. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  the  str  does  not  exist. ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
238	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  desc);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  desc);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  desc);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  not  a  statement	43	None	replace
239	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  exp  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  exp  +  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  exp  +  1);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  not  a  statement	43	None	replace
240	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
241	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
242	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  value ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  value ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
243	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  expecting  a  number. ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
244	[BUG]  [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	64	None	replace
245	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  0);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  0);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
246	[BUG]  [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  -dec);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  StringUtils.removeBlank(str,  -dec);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  StringUtils.removeBlank(str,  -dec);	  Number    str    =    StringUtils.removeBlank(str,    dec);    	non-compiled	[CE]  not  a  statement	76	None	replace
247	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  return  createLong(str);  }	  if(dec    ==    null    ||    str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
248	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  not  a  statement	33	None	replace
249	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0L);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str,  0L);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str,  0L);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  not  a  statement	75	None	replace
250	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
251	[BUG]  [BUGGY]  Number  str  =  getNumber(str)+  4;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str)+  4;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str)+  4;	  Number    str    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	74	None	replace
252	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  2));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  2));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(0,  2));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
253	[BUG]  [BUGGY]  Integer  str  =  createInteger(str)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str)+  1;	  Integer    str    =    getInteger(str)+    1;    	non-compiled	[CE]  not  a  statement	58	None	replace
254	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	32	None	replace
255	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toLowerCase());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toLowerCase());  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of "  +  str.toLowerCase());	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number    of   "    +    str);    	non-compiled	[CE]  not  a  statement	85	None	replace
256	[BUG]  [BUGGY]  String  str  =  getString(String.valueOf(str));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(String.valueOf(str));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(String.valueOf(str));	  String    str    =    getString(Short.valueOf(str));    	non-compiled	[CE]  not  a  statement	59	None	replace
257	[BUG]  [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "Blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    return    new    NumberFormatException(   "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	89	None	replace
258	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  numeric  value ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
259	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  value ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
260	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  expecting  a  number ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
261	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str,  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number: "  +  str,  dec);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	21	None	replace
262	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  str  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  str  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  str  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	21	None	replace
263	[BUG]  [BUGGY]  String  str  =  getString(StringUtils.repeat(str));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(StringUtils.repeat(str));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(StringUtils.repeat(str));	  String    str    =    getString(Short.valueOf(str));    	non-compiled	[CE]  not  a  statement	59	None	replace
264	[BUG]  [BUGGY]  String  str  =  str.trim().toUpperCase();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.trim().toUpperCase();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.trim().toUpperCase();	  String    str    =    str.trim().toLowerCase();    	non-compiled	[CE]  not  a  statement	34	None	replace
265	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
266	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.',  DEC_POP);	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
267	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('.');	  int    decPos    =    str.indexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	79	None	replace
268	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  str.substring(0,  str.length()  -  1));	  Number    number    =    getNumber(str,    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
269	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  dec);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  dec);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  dec);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
270	[BUG]  [BUGGY]  Number  number  =  createLong(str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createLong(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createLong(str);	  Number    number    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
271	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX)+  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX)+  1;	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
272	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PUBLIC);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PUBLIC);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PUBLIC);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  not  a  statement	45	None	replace
273	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str,  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str,  dec);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str,    allZeros);    	non-compiled	[CE]  not  a  statement	53	None	replace
274	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	48	None	replace
275	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1);	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
276	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ",  str);	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	62	None	replace
277	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	51	None	replace
278	[BUG]  [BUGGY]  Number  str  =  createBoolean(str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createBoolean(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createBoolean(str);	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
279	[BUG]  [BUGGY]  Number  str  =  createBlank(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createBlank(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createBlank(str);	  Number    str    =    createNumber(str);    	non-compiled	[CE]  not  a  statement	73	None	replace
280	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str.toLowerCase());	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  not  a  statement	39	None	replace
281	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE).length();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE).length();  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE).length();	  int    decPos    =    str.indexOf('    ',    DEC_MINUS_ONE);    	non-compiled	[CE]  not  a  statement	69	None	replace
282	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ",  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
283	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP);	  int    decPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
284	[BUG]  [BUGGY]  Number  number  =  getNumber(str,  DEC);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  getNumber(str,  DEC);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  getNumber(str,  DEC);	  Number    number    =    getNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	77	None	replace
285	[BUG]  [BUGGY]  Number  str  =  createNumber(str)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  createNumber(str)+  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  createNumber(str)+  1;	  Number    str    =    getNumber(str)+    1;    	non-compiled	[CE]  not  a  statement	74	None	replace
286	[BUG]  [BUGGY]  String  str  =  getString(str)/  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str)/  1;  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)/  1;	  String    str    =    getString(str)+    1;    	non-compiled	[CE]  not  a  statement	60	None	replace
287	[BUG]  [BUGGY]  String  str  =  getString(str)+  '0';  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str)+  '0';  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str)+  '0';	  String    str    =    getString(str)+    1;    	non-compiled	[CE]  not  a  statement	60	None	replace
288	[BUG]  [BUGGY]  Number  number  =  createNumber(str,  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  number  =  createNumber(str,  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  number  =  createNumber(str,  1);	  Number    number    =    getNumber(str,    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
289	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  null. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  null. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  null. ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
290	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  numeric. ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  numeric. ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  that  your  str  is  numeric. ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
291	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(2,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(2,  str.length()));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  not  a  statement	15	None	replace
292	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  -  1);	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  	15	None	replace
293	[BUG]  [BUGGY]  String  str  =  getString(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  getString(str.substring(2,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  getString(str.substring(2,  str.length()));	  String    str    =    getString(str.substring(1));    	non-compiled	[CE]  not  a  statement	31	None	replace
294	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  decPos);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  not  a  statement	83	None	replace
295	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.indexOf('  ',  DEC);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  not  a  statement	83	None	replace
296	[BUG]  [BUGGY]  return  createBigDecimal(str,  dec);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  createBigDecimal(str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  createBigDecimal(str,  dec);	  return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	66	None	replace
297	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Number  str  =  getNumber(str.substring(2,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	41	None	replace
298	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  10);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  10);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	String  str  =  str.substring(0,  str.length()  -  10);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	32	None	replace
299	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_POINT);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_POINT);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	int  decPos  =  str.lastIndexOf('  ',  DEC_POINT);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  not  a  statement	42	None	replace
300	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str,  dec);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str,  dec);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number: "  +  str,  dec);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  not  a  statement	17	None	replace
301	[BUG]  [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  return  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	return  new  NumberFormatException( "Blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(       "Blank    string    is    not    a    valid    number       ");    return    new    NumberFormatException(   "Blank    string    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	89	None	replace
302	[BUG]  [BUGGY]  Integer  str  =  createFloat(str);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createFloat(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createFloat(str);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  not  a  statement	49	None	replace
303	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  not  a  statement	49	None	replace
304	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  but ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "Blank  string  is  not  a  valid  number,  but ");	  throw    new    NumberFormatException(   "Blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	88	None	replace
305	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number  of "  +  str);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number  of "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number  of "  +  str);	  throw    new    NumberFormatException(   "The    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	70	None	replace
306	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of  str "  +  str);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of  str "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number  of  str "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number    of   "    +    str);    	non-compiled	[CE]  not  a  statement	85	None	replace
307	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);  [BUGGY]      }  if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	457	457	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  str: "  +  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number:   "    +    str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
