bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	38	None	replace
2	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  2;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	38	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	38	None	replace
4	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('  ')+  2;	  int    expPos    =    str.lastIndexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	20	None	replace
5	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	20	None	replace
6	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.',  expPos);	  Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
7	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.lastIndexOf('.');	  Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
8	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1);	  Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
9	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
10	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  -  2);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  -  2);	  mant    =    str.substring(1,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
11	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  decPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	29	None	replace
13	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();	  dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
14	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  3);	  dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
15	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ')/  2;	  int    expPos    =    str.indexOf('    ')+    2;    	non-compiled	[CE]  not  a  statement	21	None	replace
16	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
17	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
18	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
19	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
20	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos  +  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')+  expPos  +  1;	  int    expPos    =    str.indexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  decPos;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  decPos;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')+  decPos;	  int    expPos    =    str.indexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  exp);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  exp);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  exp);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	37	None	replace
23	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
24	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('  ')/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ')/  4;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
28	[BUG]  [BUGGY]  nisipr  =  str.charAt(expPos  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.charAt(expPos  +  1);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
29	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.charAt(decPos  +  2);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
30	[BUG]  [BUGGY]  nisipr  =  str.substring(decPos  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.substring(decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.substring(decPos  +  1);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
31	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.')+  2;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
32	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.lastIndexOf('.')+  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
33	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)+  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
35	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);	  mant    =    str.substring(0,    expPos    -    1    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
36	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
38	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1,  decPos);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
40	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
41	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
42	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	19	None	replace
43	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(decPos  +  1,  expPos  +  1);	  mant    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(decPos  +  1,  expPos  -  1);	  mant    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	30	None	replace
46	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos)+  2;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	30	None	replace
47	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  2);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
48	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1).length();	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
49	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  -  1,  decPos);	  mant    =    str.substring(0,    expPos    -    1,    expPos);    	non-compiled	[CE]  not  a  statement	24	None	replace
50	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1).trim();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  +  1).trim();  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  +  1).trim();	  mant    =    str.substring(1,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  2);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  2);	  int    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
52	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    dec    =    str.substring(decPos    +    1,    expPos);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
53	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(0,  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos  +  1);	  Mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
54	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(0,  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos  -  1);	  Mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
55	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(0,  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos  +  2);	  Mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
56	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.lastIndexOf('.',  decPos);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	19	None	replace
57	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  -  1  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  -  1  +  1);	  mant    =    str.substring(1,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
58	[BUG]  [BUGGY]  Mant  =  str.substring(1,  expPos);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(1,  expPos);	  Mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  1).trim();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.charAt(decPos  +  1).trim();	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
60	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.',  decPos);	  Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
61	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  decPos);	  mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  not  a  statement	2	None	replace
62	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
63	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1).toLowerCase();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1).toLowerCase();  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1).toLowerCase();	  mant    =    str.substring(0,    expPos    +    1).trim();    	non-compiled	[CE]  not  a  statement	12	None	replace
64	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)/  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	38	None	replace
65	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
66	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos).trim();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos).trim();  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos).trim();	  mant    =    str.substring(0,    expPos    +    1).trim();    	non-compiled	[CE]  not  a  statement	12	None	replace
67	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
68	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	28	None	replace
69	[BUG]  [BUGGY]  Mantellis  mant  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mantellis  mant  =  str.substring(0,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mantellis  mant  =  str.substring(0,  expPos);	  mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  not  a  statement	2	None	replace
70	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.charAt(decPos  +  1,  expPos);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
71	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.',  dec);	  Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
72	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Dec  =  str.substring(decPos  +  1,  expPos  +  1);	  dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
73	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  +  1,  expPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  +  1,  expPos);	  mant    =    str.substring(1,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
74	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)-  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)-  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
76	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.')/  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
77	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
78	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    dec    =    str.substring(decPos    +    1,    expPos);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
79	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  decPos  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  decPos  +  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  decPos  +  1;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
80	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
81	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    dec    =    str.substring(decPos    +    1);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
82	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  2;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
