bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  Mant  =  str.substring(0,  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Mant  =  str.substring(0,  expPos);	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
2	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(0,  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  decPos);	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
3	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  nisipr  =  str.charAt(decPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	nisipr  =  str.charAt(decPos  +  1);	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
4	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1);	      int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	10	None	replace
5	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1);	      int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	10	None	replace
6	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	7	None	replace
8	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
9	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.')+  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
10	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')+  expPos;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
11	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
12	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  +  1).trim();	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
13	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(decPos  +  1,  expPos);	      	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  +  1);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  -  1);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(1,  expPos  +  2);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.length()  -  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	8	None	replace
18	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.length()  +  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	8	None	replace
19	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('  ')+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')+  2;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ')+  2;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ')+  2;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ')/  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ')/  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
23	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
24	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
26	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
27	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.')+  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	14	None	replace
29	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('.',  decPos);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	14	None	replace
30	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.indexOf('  ',  expPos)+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
31	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.')+  1;	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
32	[BUG]  [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1,  expPos);  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
33	[BUG]  [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
34	[BUG]  [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  null;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  null;  }  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  dec  =  null;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
35	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  Integer  expPos  =  str.indexOf('.');  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  expPos  =  str.indexOf('.');	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
36	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos);	      if(expPos    >    -1)    {    if(expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
37	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  dec);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
38	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	492	492	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
