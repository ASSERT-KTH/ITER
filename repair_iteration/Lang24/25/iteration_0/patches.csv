bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  start  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]  int  i  =  start  +  1;  [BUGGY]  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	int  i  =  start  +  1;	int  i  =  start  +  2;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  int  i  =  start  +  3;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]  int  i  =  start  +  3;  [BUGGY]  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	int  i  =  start  +  3;	int  i  =  start  +  2;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    [BUGGY]  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	  	int  i  =  start  +  2;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]    char[]  chars  =  str.toCharArray();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    char[]  chars  =  str.toCharArray();  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    char[]  chars  =  str.toCharArray();		non-compiled	[CE]  illegal  start  of  type	50	None	add
5	[BUG]  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  '  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  '  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  '		non-compiled	[CE]  illegal  start  of  type	50	None	add
6	[BUG]  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[0]  <  'a'  ||  chars[0]  >  'f')&&(chars[0]  <  '  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[0]  <  'a'  ||  chars[0]  >  'f')&&(chars[0]  <  '  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[0]  <  'a'  ||  chars[0]  >  'f')&&(chars[0]  <  '		non-compiled	[CE]  illegal  start  of  type	50	None	add
7	[BUG]  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  'A'  ||  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  'A'  ||  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    ((  chars[0]  ==  '0'  ||  chars[0]  >  '9')&&(chars[1]  <  'a'  ||  chars[1]  >  'f')&&(chars[1]  <  'A'  ||		non-compiled	[CE]  illegal  start  of  type	50	None	add
8	[BUG]  [BUGGY]    int  start  =(chars[start  +  1]  ==  '0'  ||  chars[start  +  1]  ==  'x')?  1  :  0;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  start  =(chars[start  +  1]  ==  '0'  ||  chars[start  +  1]  ==  'x')?  1  :  0;  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  start  =(chars[start  +  1]  ==  '0'  ||  chars[start  +  1]  ==  'x')?  1  :  0;		non-compiled	[CE]  illegal  start  of  type	50	None	add
9	[BUG]  [BUGGY]    int  start  =(chars[1]  ==  '0'  &&  chars[1]  ==  'x')?  1  :  0;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  start  =(chars[1]  ==  '0'  &&  chars[1]  ==  'x')?  1  :  0;  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  start  =(chars[1]  ==  '0'  &&  chars[1]  ==  'x')?  1  :  0;		non-compiled	[CE]  illegal  start  of  type	50	None	add
10	[BUG]  [BUGGY]    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  'f')?  1  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  'f')?  1  :  0;  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  'f')?  1  :  0;		non-compiled	[CE]  illegal  start  of  type	50	None	add
11	[BUG]  [BUGGY]    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  '9')?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  '9')?  1  :  0;  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  start  =(chars[1]  ==  '0'  ||  chars[1]  ==  '9')?  1  :  0;		non-compiled	[CE]  illegal  start  of  type	50	None	add
12	[BUG]  [BUGGY]    chars[]  =  str.toCharArray();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    chars[]  =  str.toCharArray();  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    chars[]  =  str.toCharArray();		non-compiled	[CE]  illegal  start  of  type	50	None	add
13	[BUG]  [BUGGY]    int  chars  =  str.toCharArray();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  chars  =  str.toCharArray();  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  chars  =  str.toCharArray();		non-compiled	[CE]  illegal  start  of  type	50	None	add
14	[BUG]  [BUGGY]    int  sz  =  str.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    int  sz  =  str.length();  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    int  sz  =  str.length();		non-compiled	[CE]  illegal  start  of  type	50	None	add
15	[BUG]  [BUGGY]    chars[start]  =  str.charAt(0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars  =  str.toCharArray();  int  sz  =  chars.length;  boolean  hasExp  =  false;  boolean  hasDecPoint  =  false;  boolean  allowSigns  =  false;  boolean  foundDigit  =  false;  int  start  =  (chars[0]  ==  '-')  ?  1  :  0;  if  (sz  >  start  +  1)  {  if  (chars[start]  ==  '0'  &&  chars[start  +  1]  ==  'x')  {  [BUGGY]    chars[start]  =  str.charAt(0);  [BUGGY]  int  i  =  start  +  2;  if  (i  ==  sz)  {  return  false;  //  str  ==   "0x "  }  for  (;  i  <  chars.length;  i++)  {  if  ((chars[i]  <  '0'  ||  chars[i]  >  '9')  &&  (chars[i]  <  'a'  ||  chars[i]  >  'f')  &&  (chars[i]  <  'A'  ||  chars[i]  >  'F'))  {  return  false;  }  [CLASS]  NumberUtils  [METHOD]  isNumber  [RETURN_TYPE]  boolean  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allowSigns  foundDigit  hasDecPoint  hasExp  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  i  start  sz  char[]  chars  	projects/Lang24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	1333	1333	1	replace	    chars[start]  =  str.charAt(0);		non-compiled	[CE]  illegal  start  of  type	50	None	add
