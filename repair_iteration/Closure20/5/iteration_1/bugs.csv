bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  n.getParent().removeChild(addition);  [CE]  ')'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.getParent().removeChild(addition);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.getParent().removeChild(addition);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
2	[BUG]  [BUGGY]  n.removeChild(addition);  [CE]  ')'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.removeChild(addition);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.removeChild(addition);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
3	[BUG]  [BUGGY]  n.getParent().removeChild(value);  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.getParent().removeChild(value);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.getParent().removeChild(value);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
4	[BUG]  [BUGGY]  n.getParent().replaceChild(n,  addition);  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.getParent().replaceChild(n,  addition);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.getParent().replaceChild(n,  addition);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
5	[BUG]  [BUGGY]  n.getParent().removeChild(address);  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.getParent().removeChild(address);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.getParent().removeChild(address);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
6	[BUG]  [BUGGY]    [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]    [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	  	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
7	[BUG]  [BUGGY]  if(addition!=  null)  {  reportCodeChange();  }  [CE]  ')'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  if(addition!=  null)  {  reportCodeChange();  }  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	if(addition!=  null)  {  reportCodeChange();  }	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  Preconditions.checkState(a.getType()  ==  Token.FUNCTION);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	Preconditions.checkState(a.getType()  ==  Token.FUNCTION);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
9	[BUG]  [BUGGY]  reportError();  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  reportError();  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	reportError();	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  n.removeChild(address);  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.removeChild(address);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.removeChild(address);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]  n.removeChild(value);  [CE]  ')'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  var  a=String( "hello "  [CONTEXT]      Node  value  =  callTarget.getNext();  if  (value  !=  null)  {  Node  addition  =  IR.add(  IR.string( " ").srcref(callTarget),  value.detachFromParent());  n.getParent().replaceChild(n,  addition);  [BUGGY]  n.removeChild(value);  [BUGGY]  return  addition;  }  }  return  n;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  tryFoldSimpleFunctionCall  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  late  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  addition  callTarget  n  value  int  AND_PRECEDENCE  NOT_PRECEDENCE  OR_PRECEDENCE  STRING_SPLIT_OVERHEAD  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	n.removeChild(value);	reportCodeChange();  	non-compiled	[CE]  ')'  expected	9	None	replace
