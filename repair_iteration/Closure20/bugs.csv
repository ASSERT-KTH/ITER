bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Node value = callTarget.getNext(); [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] Preconditions.checkState(n.isCall()); Node callTarget = n.getFirstChild(); if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       [BUGGY] Node value = callTarget.getNext(); [BUGGY] if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	219	219	1	replace	
2	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] Preconditions.checkState(n.isCall()); Node callTarget = n.getFirstChild(); if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       [BUGGY] [BUGGY] Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	219	219	1	add	
3	[BUG] [BUGGY] if (value != null) { [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] Node callTarget = n.getFirstChild(); if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       Node value = callTarget.getNext(); [BUGGY] if (value != null) { [BUGGY] Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	220	220	1	replace	
4	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] Node callTarget = n.getFirstChild(); if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       Node value = callTarget.getNext(); [BUGGY] [BUGGY] if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	220	220	1	add	
5	[BUG] [BUGGY] Node addition = IR.add( IR.string("").srcref(callTarget),  value.detachFromParent()); [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       Node value = callTarget.getNext(); if (value != null) { [BUGGY] Node addition = IR.add(   IR.string("").srcref(callTarget),      value.detachFromParent()); [BUGGY] IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	221	223	1	replace	
6	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT] if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")) {       Node value = callTarget.getNext(); if (value != null) { [BUGGY] [BUGGY] Node addition = IR.add(   IR.string("").srcref(callTarget),      value.detachFromParent()); IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	221	223	1	add	
7	[BUG] [BUGGY] n.getParent().replaceChild(n, addition); [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]      Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); [BUGGY] n.getParent().replaceChild(n, addition); [BUGGY] reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	224	224	1	replace	
8	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]      Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); [BUGGY] [BUGGY] n.getParent().replaceChild(n, addition); reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	224	224	1	add	
9	[BUG] [BUGGY] reportCodeChange(); [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]     Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); [BUGGY] reportCodeChange(); [BUGGY] return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	replace	
10	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]     Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); [BUGGY] [BUGGY] reportCodeChange(); return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	225	225	1	add	
11	[BUG] [BUGGY] return addition; [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]    Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); [BUGGY] return addition; [BUGGY] } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	226	226	1	replace	
12	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: var a=String("hello" [CONTEXT]    Node value = callTarget.getNext(); if (value != null) { Node addition = IR.add( IR.string("").srcref(callTarget), value.detachFromParent()); n.getParent().replaceChild(n, addition); reportCodeChange(); [BUGGY] [BUGGY] return addition; } } return n; } [CLASS] PeepholeSubstituteAlternateSyntax 1 2 3 FoldArrayAction [METHOD] tryFoldSimpleFunctionCall [RETURN_TYPE] Node  Node n [VARIABLES] Pattern REGEXP_FLAGS_RE FoldArrayAction NOT_SAFE_TO_FOLD SAFE_TO_FOLD_WITHOUT_ARGS SAFE_TO_FOLD_WITH_ARGS boolean late ImmutableSet STANDARD_OBJECT_CONSTRUCTORS DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS Node addition callTarget n value int AND_PRECEDENCE NOT_PRECEDENCE OR_PRECEDENCE STRING_SPLIT_OVERHEAD Predicate DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	1.0	226	226	1	add	
