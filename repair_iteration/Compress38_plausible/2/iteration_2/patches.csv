bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
2	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
3	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
4	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
5	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
6	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
7	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	114	None	replace
8	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	114	None	replace
9	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)	114	None	replace
10	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	114	None	replace
11	[BUG]  [BUGGY]  final  String  prefix  =  Predicates.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  Predicates.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  Predicates.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    encoding?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	19	None	replace
12	[BUG]  [BUGGY]  final  String  prefix  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    encoding?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	19	None	replace
13	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	92	None	add
14	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	92	None	add
15	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN	  	non-compiled	[CE]  ')'  expected	92	None	add
16	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	92	None	add
17	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	134	None	replace
18	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	134	None	replace
19	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	134	None	replace
20	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
21	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
22	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
23	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
24	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
25	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
26	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
27	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
28	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
29	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
30	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	93	None	replace
31	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
32	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
33	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]            IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
34	[BUG]  [BUGGY]  name  =  isDir?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  isDir?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  isDir?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	103	None	replace
35	[BUG]  [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  oldStyle);  [CE]  incompatible  types  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  oldStyle);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	103	None	replace
36	[BUG]  [BUGGY]  name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	103	None	replace
37	[BUG]  [BUGGY]  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	103	None	replace
38	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	103	None	replace
39	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	82	None	replace
40	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  [CE]  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	82	None	replace
41	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	82	None	replace
42	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	24	None	replace
43	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	24	None	replace
44	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	24	None	replace
45	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	24	None	replace
46	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	24	None	replace
47	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
48	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
49	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
50	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
51	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
52	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
53	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
54	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
55	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
56	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
57	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
58	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
59	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
60	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
61	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XX  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XX	120	None	replace
62	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	120	None	replace
63	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	120	1	replace
64	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	120	1	replace
65	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXED_XX  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXED_XX	120	None	replace
66	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
67	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
68	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
69	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
70	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
71	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
72	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	90	None	replace
73	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	90	None	replace
74	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
75	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	7	replace
76	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	42	None	replace
77	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	42	None	replace
78	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	42	None	replace
79	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	42	None	replace
80	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  header);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	42	None	replace
81	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	36	None	replace
82	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	36	None	replace
83	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	36	None	replace
84	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	36	None	replace
85	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	36	None	replace
86	[BUG]  [BUGGY]  final  String  prefix  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  originalStyle  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    currentStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  originalStyle	124	None	replace
87	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	32	None	add
88	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	32	None	add
89	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  ';'  expected	32	None	add
90	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	88	None	replace
91	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	88	None	replace
92	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	88	None	replace
93	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	88	None	replace
94	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
95	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
96	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
97	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  header);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  header);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
98	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
99	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
100	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
101	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
102	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
103	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
104	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	7	replace
105	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	13	None	replace
106	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	138	None	replace
107	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	138	None	replace
108	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	138	None	replace
109	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
110	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
111	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  ';'  expected	5	None	add
112	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
113	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
114	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
115	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
116	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
117	[BUG]  [BUGGY]  final  String  prefix  =  PRFIXLEN?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PRFIXLEN?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PRFIXLEN?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	123	None	replace
118	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	123	None	replace
119	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	123	None	replace
120	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XML  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XML	135	None	replace
121	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	135	None	replace
122	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XSL  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XSL	135	None	replace
123	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	135	None	replace
124	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XS  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XS	135	None	replace
125	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_X  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_X	66	None	replace
126	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXED_X  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXED_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXED_X	66	None	replace
127	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
128	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	7	replace
129	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(File,int,int)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(File,int,int)	11	None	replace
130	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	60	None	replace
131	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	60	None	replace
132	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	51	None	replace
133	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	51	1	replace
134	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	51	1	replace
135	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDirectory  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDirectory	51	None	replace
136	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	23	None	replace
137	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_POSIX  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_POSIX	23	None	replace
138	[BUG]  [BUGGY]  final  String  prefix  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	110	None	replace
139	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	110	None	replace
140	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	110	None	replace
141	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	110	None	replace
142	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	84	None	replace
143	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	84	None	replace
144	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  headerStyle);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  headerStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  headerStyle);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	84	None	replace
145	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	84	None	replace
146	[BUG]  [BUGGY]  final  String  name  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	84	None	replace
147	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	31	None	replace
148	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	31	None	replace
149	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)	31	None	replace
150	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_XSTAR  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_XSTAR	14	None	replace
151	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
152	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
153	[BUG]  [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
154	[BUG]  [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  cannot  find  symbol  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
155	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XPRESSION  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XPRESSION):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XPRESSION	122	None	replace
156	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XPREFIX  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XPRESSION):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XPREFIX	122	None	replace
157	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XSION  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XPRESSION):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XSION	122	None	replace
158	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XS  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XPRESSION):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XS	122	None	replace
159	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	86	None	replace
160	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	86	None	replace
161	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	86	None	replace
162	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
163	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
164	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
165	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	7	replace
166	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	54	7	replace
167	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	54	None	replace
168	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XS  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XS):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XS	16	None	replace
169	[BUG]  [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
170	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
171	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
172	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
173	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
174	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
175	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	8	None	replace
176	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	7	replace
177	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	7	replace
178	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSL  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSL):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSL	15	None	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFILEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
180	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFILEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
181	[BUG]  [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFILEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
182	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [CE]  cannot  find  symbol  PREFILEN  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFILEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFILEN	4	None	replace
183	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDirectory  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDirectory	9	None	replace
184	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	9	None	replace
185	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	7	replace
186	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	7	replace
187	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	89	None	replace
188	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	89	None	replace
189	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	89	None	replace
190	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	89	None	replace
191	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
192	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
194	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
195	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	91	None	replace
196	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	91	None	replace
197	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
198	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	7	replace
199	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	57	None	replace
200	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	72	None	replace
201	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	72	None	replace
202	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	72	None	replace
203	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XX  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XX	18	None	replace
204	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	18	None	replace
205	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	18	None	replace
206	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
207	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
208	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
209	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
210	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	46	None	replace
211	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	46	None	replace
212	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	46	None	replace
213	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	46	None	replace
214	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	46	None	replace
215	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	68	1	replace
216	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	68	1	replace
217	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    name?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	49	None	replace
218	[BUG]  [BUGGY]  final  String  name  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	49	None	replace
219	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	49	None	replace
220	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	83	None	replace
221	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	83	None	replace
222	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	83	None	replace
223	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	105	1	replace
224	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	105	1	replace
225	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	105	1	replace
226	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	105	1	replace
227	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	105	None	replace
228	[BUG]  [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
229	[BUG]  [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
230	[BUG]  [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  cannot  find  symbol  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
231	[BUG]  [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
232	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
233	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
234	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XL  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XL):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XL	125	None	replace
235	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  no  suitable  method  found  for  parseName(boolean,byte[],int,int,ZipEncoding)  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(boolean,byte[],int,int,ZipEncoding)	76	None	replace
236	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	76	None	replace
237	[BUG]  [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int,ZipEncoding)  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int,ZipEncoding)	76	None	replace
238	[BUG]  [BUGGY]  name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  incompatible  types  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  encoding?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  incompatible  types	76	None	replace
239	[BUG]  [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(oldStyle,  header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  incompatible  types	76	None	replace
240	[BUG]  [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
241	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    header);    	non-compiled	[CE]  incompatible  types	41	None	replace
242	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    header);    	non-compiled	[CE]  incompatible  types	41	None	replace
243	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    header);    	non-compiled	[CE]  incompatible  types	41	None	replace
244	[BUG]  [BUGGY]  final  String  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  header?  TarUtils.parseName(oldStyle,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	52	None	replace
245	[BUG]  [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	52	None	replace
246	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	52	None	replace
247	[BUG]  [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	52	None	replace
248	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	52	None	replace
249	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
250	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
251	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
252	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  CheckSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  CheckSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  CheckSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
253	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	38	None	replace
254	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)	38	None	replace
255	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	38	None	replace
256	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
257	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
258	[BUG]  [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  cannot  find  symbol  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  encoding?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
259	[BUG]  [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
260	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XFF  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XF):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XFF	56	None	replace
261	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XF  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XF):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XF	56	None	replace
262	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head  [CE]  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	116	None	replace
263	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  [CE]  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	116	None	replace
264	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parse  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parse  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parse	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	116	None	replace
265	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	85	None	replace
266	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	85	None	replace
267	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
268	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	6	None	replace
269	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XSL  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XSL	121	None	replace
270	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XTE  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XTE	121	None	replace
271	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
272	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
273	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
274	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
275	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  xstarPrefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
276	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
277	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
278	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    name);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
279	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  header);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  header);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    name);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
280	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    name);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
281	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    name);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
282	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    name);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
283	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN_XML  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN_XML	111	None	replace
284	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	69	None	replace
285	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	69	None	replace
286	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN_XSTAR	69	None	replace
287	[BUG]  [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
288	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	69	None	replace
289	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
290	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
291	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
292	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
293	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
294	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
295	[BUG]  [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
296	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE,  header);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE,  header);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
297	[BUG]  [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
298	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
299	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PreFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	37	None	replace
300	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
301	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
302	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
303	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
304	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    encoding?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    oldStyle);    	non-compiled	[CE]  incompatible  types	48	None	replace
305	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	70	None	replace
306	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	70	None	replace
307	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	70	None	replace
308	[BUG]  [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
309	[BUG]  [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	static  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
310	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,byte[])  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  header):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,byte[])	28	None	replace
311	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	28	1	replace
312	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	28	1	replace
313	[BUG]  [BUGGY]  if(oldStyle)  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  prefix  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(oldStyle)  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(oldStyle)  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	3	None	replace
314	[BUG]  [BUGGY]  final  byte[]  header  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  header  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  byte[]  header  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  byte[]  header  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	3	None	replace
315	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PreFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN_XSTAR	71	None	replace
316	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN_XSTAR  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PreFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN_XSTAR	71	None	replace
317	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
318	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
319	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
320	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(file,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(file,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(file,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
321	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
322	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
323	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_SECOND,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
324	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_SECOND,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
325	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	29	None	replace
326	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
327	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	29	None	replace
328	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
329	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
330	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
331	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
332	[BUG]  [BUGGY]  final  String  nameStyle  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  nameStyle  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  nameStyle  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    nameStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	44	None	replace
333	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
334	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
335	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
336	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
337	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
338	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	94	None	replace
339	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	94	None	replace
340	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	94	None	replace
341	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
342	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
343	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
344	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_YEAR  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_YEAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_YEAR	73	None	replace
345	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	25	None	replace
346	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	25	None	replace
347	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	25	None	replace
348	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	25	None	replace
349	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int,ZipEncoding)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int,ZipEncoding)	34	None	replace
350	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int)	34	None	replace
351	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int,byte[])  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    isExtended?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,int,int,byte[])	34	None	replace
352	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	112	None	replace
353	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	112	None	replace
354	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(name,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	112	None	replace
355	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	95	None	replace
356	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	95	None	replace
357	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	95	None	replace
358	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	95	None	replace
359	[BUG]  [BUGGY]  final  byte  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  byte  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  byte  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	87	None	replace
360	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	87	None	replace
361	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	87	None	replace
362	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	58	None	replace
363	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	58	None	replace
364	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	58	None	replace
365	[BUG]  [BUGGY]  final  String  name  =  standardizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  standardizedName  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  standardizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  standardizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  standardizedName	137	None	replace
366	[BUG]  [BUGGY]  final  String  name  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  originalStyle  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  originalStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  originalStyle	137	None	replace
367	[BUG]  [BUGGY]  final  String  name  =  normalizedName.name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  normalizedName.name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  normalizedName.name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	137	None	replace
368	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	117	None	replace
369	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [CE]  cannot  find  symbol  encode  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	117	None	replace
370	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	117	None	replace
371	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	27	None	replace
372	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	27	None	replace
373	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	27	None	replace
374	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);  [CE]  cannot  find  symbol  DEFAULT_POSIX  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_POSIX	27	None	replace
375	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
376	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
377	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  no  suitable  method  found  for  parseName(File,int,int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(File,int,int)	107	None	replace
378	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  no  suitable  method  found  for  parseName(File,int,int)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(File,int,int)	107	None	replace
379	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  MIN_NAMELEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  MIN_NAMELEN	26	None	replace
380	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  MIN_NAMELEN  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  MIN_NAMELEN	26	None	replace
381	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  MIN_NAMELEN  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  MIN_NAMELEN	26	None	replace
382	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  MIN_NAMELEN  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  MIN_NAMELEN	26	None	replace
383	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_X  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_X	26	None	replace
384	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  MIN_NAMELEN  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  MIN_NAMELEN	26	None	replace
385	[BUG]  [BUGGY]  final  String  prefix  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parsePrefix(oldStyle,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	45	None	replace
386	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parsePrefix(oldStyle,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	45	None	replace
387	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parsePrefix(oldStyle,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	45	None	replace
388	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	133	None	replace
389	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
390	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
391	[BUG]  [BUGGY]  final  String  prefix  =  checkStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  checkStyle  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  checkStyle	21	None	replace
392	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
393	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	21	1	replace
394	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	21	1	replace
395	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]            IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	21	None	replace
396	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	35	None	replace
397	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int)  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(prefix,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int)	35	None	replace
398	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	35	None	replace
399	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);  [CE]  cannot  find  symbol  DEFAULT_POSIX  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_POSIX	62	None	replace
400	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
401	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
402	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
403	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
404	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]          IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
405	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]            IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
406	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]              IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
407	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	136	None	replace
408	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	136	None	replace
409	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	81	None	replace
410	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	81	None	replace
411	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	81	None	replace
412	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    name?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	39	None	replace
413	[BUG]  [BUGGY]  final  String  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	39	None	replace
414	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	2	None	replace
415	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	2	None	replace
416	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	2	None	replace
417	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	115	None	replace
418	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	115	None	replace
419	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XTE  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XTE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XTE	17	None	replace
420	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XEND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XEND  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XEND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XEND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XTE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XEND	17	None	replace
421	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(oldStyle,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
422	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
423	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
424	[BUG]  [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
425	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XMODE  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XMODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XMODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XMODE	119	None	replace
426	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	113	None	replace
427	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
428	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
429	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
430	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
431	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	118	None	replace
432	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XS  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XS	118	None	replace
433	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE,  header);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE,  header);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
434	[BUG]  [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(name,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
435	[BUG]  [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
436	[BUG]  [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(file,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(file,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
437	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	106	None	add
438	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    Final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  ';'  expected	106	None	add
439	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	106	None	add
440	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	63	None	add
441	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	63	None	add
442	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	63	None	add
443	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	7	None	add
444	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
445	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN	47	None	replace
446	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	47	None	replace
447	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	49	None	replace
448	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	49	None	replace
449	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	30	None	add
450	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	63	None	add
451	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	63	None	add
452	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
453	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
454	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_PREFIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
455	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
456	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
457	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
458	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	5	None	add
459	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	134	None	replace
460	[BUG]  [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	134	None	replace
461	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,String)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,String)	83	None	replace
462	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	83	None	replace
463	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	compilable	  [FE]  IOException  	24	1	replace
464	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	compilable	  [FE]  IOException  	24	1	replace
465	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	60	None	replace
466	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	60	None	replace
467	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	64	1	replace
468	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	64	1	replace
469	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	64	None	replace
470	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	64	None	replace
471	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	compilable	  [FE]  IOException  	27	1	replace
472	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [FE]  IOException  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	compilable	  [FE]  IOException  	27	1	replace
473	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	27	None	replace
474	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	compilable	  [FE]  IOException  	27	1	replace
475	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [FE]  IOException  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	compilable	  [FE]  IOException  	27	1	replace
476	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	36	None	replace
477	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	36	None	replace
478	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
479	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  name);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    name);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
480	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	6	None	replace
481	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	33	1	replace
482	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	33	1	replace
483	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	62	1	replace
484	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	62	1	replace
485	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	62	None	replace
486	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  xStart):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  xStart  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  xStart):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  xStart):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  xStart	132	None	replace
487	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(encoding,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    header);    	non-compiled	[CE]  incompatible  types	41	None	replace
488	[BUG]  [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    prefix    =    header?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    header);    	non-compiled	[CE]  incompatible  types	41	None	replace
489	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
490	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	136	None	replace
491	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	136	None	replace
492	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	136	None	replace
493	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	136	None	replace
494	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	86	None	replace
495	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	129	None	replace
496	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  DEFAULT_POSIX  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_POSIX	91	None	replace
497	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	113	None	replace
498	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	113	None	replace
499	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
500	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
501	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(format_POSIX,  offset):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	65	None	replace
502	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	65	None	replace
503	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
504	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
505	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
506	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	114	None	replace
507	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,String)  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,String)	114	None	replace
508	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	87	None	replace
509	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	87	None	replace
510	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	14	1	replace
511	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	14	1	replace
512	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	38	None	replace
513	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	38	None	replace
514	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encode);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX,  encode);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	38	None	replace
515	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
516	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
517	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
518	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
519	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  MAX_NAMELEN);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  MAX_NAMELEN);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  MAX_NAMELEN);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
520	[BUG]  [BUGGY]  final  byte  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  byte  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  byte  prefix  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    encoding?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    oldStyle);    	non-compiled	[CE]  incompatible  types	48	None	replace
521	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  encoding?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    encoding?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    oldStyle);    	non-compiled	[CE]  incompatible  types	48	None	replace
522	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  oldStyle);	  final    String    prefix    =    encoding?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    oldStyle);    	non-compiled	[CE]  incompatible  types	48	None	replace
523	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
524	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
525	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
526	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
527	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	79	None	replace
528	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	118	None	replace
529	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	118	None	replace
530	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	70	None	replace
531	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	70	None	replace
532	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	94	None	replace
533	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	94	None	replace
534	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_SECOND,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
535	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_SECOND,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_SECOND,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
536	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
537	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
538	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	20	None	add
539	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
540	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
541	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
542	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	10	None	add
543	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	55	1	replace
544	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [FE]  IOException  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PRFIXLEN_X):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  IOException  	55	1	replace
545	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	53	None	add
546	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	133	None	replace
547	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	133	None	replace
548	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	133	None	replace
549	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	116	None	replace
550	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head  [CE]  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(head	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  	116	None	replace
551	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	116	None	replace
552	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	72	None	replace
553	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(String,int,int,ZipEncoding)  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(String,int,int,ZipEncoding)	72	None	replace
554	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
555	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
556	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
557	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	107	7	replace
558	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  encoding):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,ZipEncoding)	107	None	replace
559	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	138	None	replace
560	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	32	None	add
561	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFILEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	32	None	add
562	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
563	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	compilable	  [FE]  IOException  	93	1	replace
564	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	58	None	replace
565	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	58	None	replace
566	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	108	None	replace
567	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	137	None	replace
568	[BUG]  [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
569	[BUG]  [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  cannot  find  symbol  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
570	[BUG]  [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  ';'  expected	75	None	replace
571	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	25	None	replace
572	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	25	None	replace
573	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,int)	54	None	replace
574	[BUG]  [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  normalizedName  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  normalizedName?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isDir?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  normalizedName	51	None	replace
575	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FIELD_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  DEFAULT_FIELD_MODE  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FIELD_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FIELD_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    Final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_MODE	3	None	replace
576	[BUG]  [BUGGY]  final  String  nameStyle  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  nameStyle  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  nameStyle  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    nameStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	44	None	replace
577	[BUG]  [BUGGY]  final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	67	None	replace
578	[BUG]  [BUGGY]  name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  header?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	103	None	replace
579	[BUG]  [BUGGY]  name  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	103	None	replace
580	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XML  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XML	121	None	replace
581	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	92	None	add
582	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	92	None	add
583	[BUG]  [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  header);	  final    String    name    =    headerStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	84	None	replace
584	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
585	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	52	None	replace
586	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	52	None	replace
587	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	85	None	replace
588	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	85	None	replace
589	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	115	None	replace
590	[BUG]  [BUGGY]  final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  xstarPrefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	115	None	replace
591	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_YEAR  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_YEAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_YEAR	73	None	replace
592	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_YEAR  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_YEAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_YEAR	73	None	replace
593	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_YEAR  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_YEAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_YEAR	73	None	replace
594	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parsePrefix(oldStyle,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	45	None	replace
595	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	12	None	add
596	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parsePrefix(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
597	[BUG]  [BUGGY]  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	76	None	replace
598	[BUG]  [BUGGY]  name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  prefix?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	76	None	replace
599	[BUG]  [BUGGY]  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	76	None	replace
600	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROPERTY  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	28	None	replace
601	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
602	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
603	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
604	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
605	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
606	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [FE]  ArrayIndexOutOfBoundsException  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	7	replace
607	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [CE]  cannot  find  symbol  encode  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	117	None	replace
608	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [CE]  cannot  find  symbol  encode  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  encode	117	None	replace
609	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  preFIXLEN,  encoding);  [CE]  cannot  find  symbol  preFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  preFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  preFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  preFIXLEN	69	None	replace
610	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	69	None	replace
611	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  name);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
612	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
613	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
614	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
615	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
616	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
617	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
618	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
619	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
620	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  MILLIS_PER_SECOND):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
621	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	88	None	replace
622	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	88	None	replace
623	[BUG]  [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	123	None	replace
624	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(name,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	89	None	replace
625	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN_XSTAR  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PreFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN_XSTAR	71	None	replace
626	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN_XSTAR  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PreFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PreFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN_XSTAR	71	None	replace
627	[BUG]  [BUGGY]  final  String  name  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  name?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    name?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	39	None	replace
628	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  isDir  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDir?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  isDir	46	None	replace
629	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
630	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
631	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	59	None	replace
632	[BUG]  [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PreFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  isExtended?  TarUtils.parseName(header,  offset,  PreFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PreFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PreFIXLEN	37	None	replace
633	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
634	[BUG]  [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  prefix  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	82	None	replace
635	[BUG]  [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
636	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  :  expected  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  :  expected	82	None	replace
637	[BUG]  [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(encoding,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(encoding,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(encoding,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
638	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
639	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	61	None	add
640	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XL):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	125	None	replace
641	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	57	None	replace
642	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN	132	None	replace
643	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  FORMAT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    FORMAT_PREFIX,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
644	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XF):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	56	None	replace
645	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XFL  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XFL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XF):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XFL	56	None	replace
646	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,ZipEncoding)  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(encoding,  header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(encoding,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(ZipEncoding,byte[],int,int,ZipEncoding)	34	None	replace
647	[BUG]  [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  prefix  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  prefix	38	None	replace
648	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	95	None	replace
649	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XL  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XL):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XL	66	None	replace
650	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XF  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XF):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_X):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XF	66	None	replace
651	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  assign  a  value  to  final  variable  name  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  name	116	None	replace
652	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.pars  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.pars  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.pars	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	116	None	replace
653	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  :  expected  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    encoding):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  :  expected	28	None	replace
654	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	85	None	replace
655	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_X):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
656	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  incompatible  types	93	None	replace
657	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	93	None	replace
658	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPRESSION):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XPRESSION):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	122	None	replace
659	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
660	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
661	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	121	None	replace
662	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	89	None	replace
663	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PROPERTY,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	89	None	replace
664	[BUG]  [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  prefix?  TarUtils.parseName(header,  offset,  PROPERTY):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PROPERTY):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	89	None	replace
665	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	110	None	replace
666	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	21	None	replace
667	[BUG]  [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  checkSumOK?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    checkSumOK?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	21	None	replace
668	[BUG]  [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	79	None	replace
669	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	11	None	replace
670	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encode);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encode);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	117	None	replace
671	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN	13	None	replace
672	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  :  expected  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  :  expected	120	None	replace
673	[BUG]  [BUGGY]  if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  prefix  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	36	None	replace
674	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	36	None	replace
675	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	135	None	replace
676	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	135	None	replace
677	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	65	None	replace
678	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRIFIXLEN,  encoding);  [CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRIFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PRIFIXLEN,  encoding);	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  parseTarHeader(byte[],ZipEncoding,boolean)	104	None	add
679	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  incompatible  types	8	None	replace
680	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XS):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XS):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	16	None	replace
681	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
682	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  prefix):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
683	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  ?    TarUtils.parseName(name,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
684	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
685	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  MIN_NAMELEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    MIN_NAMELEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	26	None	replace
686	[BUG]  [BUGGY]  if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  PRFIXLEN  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(isDirectory())  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	113	None	replace
687	[BUG]  [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  PRFIXLEN  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  }	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	113	None	replace
688	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  :  expected  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    encoding);    	non-compiled	[CE]  :  expected	27	None	replace
689	[BUG]  [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding);  [CE]  cannot  find  symbol  PrefixUtils  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  PrefixUtils.parseName(header,  offset,  encoding);	  final    String    prefix    =    PrefixUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PrefixUtils	59	None	replace
690	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
691	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  illegal  start  of  expression  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  ?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
692	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	86	None	replace
693	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	86	None	replace
694	[BUG]  [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  cannot  find  symbol  [FE]                          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
695	[BUG]  [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
696	[BUG]  [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
697	[BUG]  [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  }  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(encoding!=  null)  {  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  }	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    name);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,String)	114	None	replace
698	[BUG]  [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [CE]  cannot  find  symbol  prefix  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	if(!isDirectory())  {  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  }	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	67	None	replace
699	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    header?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	123	None	replace
700	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PreFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	24	None	replace
701	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XSTAR  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XSTAR	64	None	replace
702	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	add	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	64	1	replace
703	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [FE]  IOException  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	compilable	  [FE]  IOException  	64	1	replace
704	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN  [FE]        IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN	64	None	replace
705	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_YEAR  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isDirectory()?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_YEAR,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_YEAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_YEAR	73	None	replace
706	[BUG]  [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  name  =  header?  TarUtils.parseName(header,  offset,  PRFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    name    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	52	None	replace
707	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XTE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	17	None	replace
708	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XTE  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XTE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XTE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XTE	17	None	replace
709	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XPREFIX  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XPREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_PREFIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XPREFIX	14	None	replace
710	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parsePrefix(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	109	None	replace
711	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  incompatible  types	54	None	replace
712	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    FORMAT_POSIX,    encoding);    	non-compiled	[CE]  incompatible  types	62	None	replace
713	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSL):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSL):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	15	None	replace
714	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  illegal  start  of  expression  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  DEFAULT_PREFIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
715	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
716	[BUG]  [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  illegal  start  of  expression  [FE]                                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  ?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
717	[BUG]  [BUGGY]  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  cannot  find  symbol  prefix  [FE]                            IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  cannot  find  symbol  prefix	76	None	replace
718	[BUG]  [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  incompatible  types  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  encoding?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  incompatible  types	76	None	replace
719	[BUG]  [BUGGY]  name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  incompatible  types  [FE]                                IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  header?  TarUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  incompatible  types	76	None	replace
720	[BUG]  [BUGGY]  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [CE]  no  suitable  method  found  for  parseName(byte[],int,int,boolean)  [FE]                                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  oldStyle);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  no  suitable  method  found  for  parseName(byte[],int,int,boolean)	76	None	replace
721	[BUG]  [BUGGY]  name  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [CE]  ';'  expected  [FE]                                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  name  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	name  =  PrefixUtils.parseName(name,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);	  name    =    oldStyle?    TarUtils.parseName(name,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR,    encoding);    	non-compiled	[CE]  ';'  expected	76	None	replace
722	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	18	None	replace
723	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  :  expected  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX),  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  :  expected	18	None	replace
724	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	18	None	replace
725	[BUG]  [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  Name  name  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	Name  name  =  TarUtils.parseName(header,  offset,  FORMAT_POSIX):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  Name    name    =    oldStyle?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  ';'  expected	129	None	replace
726	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	87	None	replace
727	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  incompatible  types	118	None	replace
728	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  cannot  find  symbol  PRFIXLEN_XML  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PRFIXLEN_XML):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XML):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PRFIXLEN_XML	118	None	replace
729	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XMODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  incompatible  types	119	None	replace
730	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XX  [FE]    IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XX):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XX	105	None	replace
731	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [CE]  cannot  find  symbol  PREFIXLEN_XML  [FE]      IOException    [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN_XML):  TarUtils.parseName(header,  offset,  FORMAT_POSIX,  encoding);	  final    String    prefix    =    isExtended?    TarUtils.parseName(header,    offset,    FORMAT_POSIX):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PREFIXLEN_XML	105	None	replace
732	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PRFIXLEN):  TarUtils.parseName(header,  offset,  PreFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PRFIXLEN):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	58	None	replace
733	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  cannot  find  symbol  PROFIXLEN_XSTAR  [FE]          IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PROFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PRFIXLEN,    encoding);    	non-compiled	[CE]  cannot  find  symbol  PROFIXLEN_XSTAR	94	None	replace
734	[BUG]  [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      final  String  xstarPrefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR)  :  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR,  encoding);  if  (xstarPrefix.length()  >  0)  {  name  =  xstarPrefix  +       "/     "  +  name;  }  break;  }  case  FORMAT_POSIX:  default:  {      [BUGGY]  final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);  [BUGGY]      ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }  if  (prefix.length()  >  0){  name  =  prefix  +       "/     "  +  name;  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1153	1155	1	replace	final  String  prefix  =  prefix?  TarUtils.parseName(header,  offset,  PREFIXLEN_XSTAR):  TarUtils.parseName(header,  offset,  PRFIXLEN,  encoding);	  final    String    prefix    =    prefix?    TarUtils.parseName(header,    offset,    PREFIXLEN_XSTAR):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  incompatible  types	60	None	replace
