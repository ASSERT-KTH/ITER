projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()[Delete]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()[BUGGY]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){If(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){if(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){if(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){if(prefix.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){if(Prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0){If(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0){name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0){}name=prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0)<name=prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0)<name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=encoding.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){if(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){if(Prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){if(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){If(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix>=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix>>null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){If(prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(Prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix[Delete]null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){if(prefix!=null&&Prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(Name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(Prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,prefix.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(nameLength-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0){if(prefix.length(){0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){if(name.length()>0){}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=TarUtils.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=zipEncoding.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=TarArchiveEntry.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=TarEncoding.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=ZipEncoding.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(!name.endsWith("/")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,prefix.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=prefix.substring(0,fileName.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,prefix.length()-2);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,header.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,prefix.length()+1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){If(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(Prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)[Delete]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName()),name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(parent,newFile(encoding.getSimpleName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName()+1));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName()),prefix);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName()),encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getSimpleName(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength-=encoding.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.length()+1;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.length()*2;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=header.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.length()*4;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0&&name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0&&name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix!=null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix==null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix!=null&&prefix.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix>=null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){if(prefix==null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){If(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()!=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()==0||name.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||name.charAt(prefix.length()-1)!='/'){if(Prefix.length()==0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null||name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161Namename=prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161names.add(prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,nameLength);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){If(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(Prefix.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)[Delete]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name==null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name>=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){If(name!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name>>null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name[BUGGY]null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()>0){if(name[Delete]null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),name));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(parent,newFile(encoding.getPath(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),prefix),name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),oldStyle));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getName(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getURL(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(prefix,newFile(encoding.getPath(),header));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()<=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){If(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()!=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()==0||prefix.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){if(Prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161names.add(prefix+"/"+name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||prefix.charAt(prefix.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||prefix.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){If(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||prefix.charAt(prefix.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||Prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix>=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(Prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){If(prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix==null&&Prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix>>null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name==null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0&&name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0&&name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath()+1));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath()),name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(parent,newFile(encoding.getPath()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getAbsolutePath()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getURL()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath()),encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(prefix-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.charAt(nameLength-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(nameLength-1));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength-=encoding.charAt(nameLength-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(nameLength-2);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0&&name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(prefix!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(prefix==null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(prefix>=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){If(prefix!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(prefix>>null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(Prefix!=null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0){if(prefix[Delete]null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0&&prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name==null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name>=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){If(name!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name>>null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name[BUGGY]null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name[Delete]null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0||prefix.charAt(prefix.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0||prefix.charAt(prefix.length()-1)!='n'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()==0||name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix==null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix!=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix==null||prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){If(prefix==null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix==null||prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(Prefix==null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix>=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){if(prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){if(Prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){if(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){If(prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){if(name.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){if(prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null&&prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix==null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix>=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){If(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix>>null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(Prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){If(name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()[BUGGY]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=prefix.substring(0,fileName.length()-fileName.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,prefix.length()-fileName.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=name.substring(0,prefix.length()-fileName.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length()+1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=oldStyle.substring(0,fileName.length()-prefix.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length()-2);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parsePrefix(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||prefix.charAt(name.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||prefix.charAt(name.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){If(name.length()>0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||prefix.charAt(name.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix!=null&&prefix.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix==null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix>=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){If(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix!=null&&prefix.length()[Delete]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-2);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()+1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){If(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()[Delete]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()[BUGGY]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode()+1));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode(),name));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode(),oldStyle));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode()),name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(prefix!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(prefix==null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(prefix>=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){If(prefix!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(prefix>>null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(Prefix!=null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null||prefix.length()>0){if(prefix[Delete]null||prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length()+1;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length()-1;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength-=prefix.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length()*2;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length()+2;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=prefix.length()-2;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name==null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name>=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){If(name!=null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name>>null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name[BUGGY]null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&prefix.length()>0){if(name!=null&&Prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){If(name.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)[Delete]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length()-1)[BUGGY]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>=0){if(prefix.length()
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0){If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){If(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0){If(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)=='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)>='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){If(name.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)>>'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)[Delete]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length()-1)[BUGGY]'/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(!name.endsWith(".java")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(!name.endsWith(".js")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,offset);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(parent,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,prefix);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(file,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,encoding,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isExtended?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDir?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringname=oldStyle?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parsePrefix(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){if(name.length()>0)<name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()>0)<name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()>0)<prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0){name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){If(prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length())+1;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(prefix.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(Name.length()>0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(Name.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(prefix.length()>0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0&&name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=name.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,MAX_NAMELEN):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){if(name.length()>0){}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){If(name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&Prefix.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0&&name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){if(name.length()>0)<prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){if(name.length()>0)<name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){if(name.length()>0){name=prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(file.getPath()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath()),prefix);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null){If(name.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null){If(prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0){if(name.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name==null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()!=0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(file.getMode()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newZipEncoding(encoding));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,oldStyle);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,this.encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=name.charAt(nameLength-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(nameLength-1)+1;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){If(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){If(prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null&&prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix>>null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=prefix.substring(0,fileName.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(Name.length()>0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-header.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=TarEncodingUtils.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=ZipEncodingUtils.restrictByNotNullOrUndefined();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161Name[]prefixes=newName[name.length()];
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161Name[]prefixes=getPrefixes();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(file.getPath(),prefix));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()<=0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()<=0||prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()<=0||name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(fileName.getSimpleName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(file.getName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(file.getSimpleName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getName().replaceChild(header,newFile(encoding.getSimpleName()));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){if(Prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){if(Prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0&&name.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,MAX_NAMELEN):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(encoding,header,offset);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()!=0){If(prefix!=null&&prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()>0&&prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0&&prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null){If(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){If(prefix.length()!=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(prefix.length()>0||prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength/=encoding.length();
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE,DEFAULT_FILE_
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,DEFAULT_D
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&name.length()>0&&name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<=0||name.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()!=0){if(name.length()[Delete]0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.endsWith("/")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.endsWith(".js")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(!name.endsWith(".prototype")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&header.length>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&oldStyle>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0)<prefix+"/"+name;}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0||prefix.charAt(prefix.length())!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,name);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=header?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getMode()),prefix);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=encoding.restrictByNotNullOrUndefined(prefix);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161encoding=encoding.restrictByNotNullOrUndefined(header);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=header?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null){if(name.length()>0){}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=oldStyle?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,DEFAULT_FILE_MODE,DEFAULT_NAMELEN);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.endsWith("/")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.endsWith(".js")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name="/"+fileName.substring(0,fileName.length()-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,header.length());
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null&&name.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(prefix.length()-1)!='/'){if(name.length()>0||prefix.charAt(prefix.length())!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0){if(prefix!=null&&prefix.length(){0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161nameLength+=encoding.charAt(offset-1);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name!=null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(name!=null&&name.endsWith("/")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name!=null||prefix.length()>0){if(name!=null||Prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0)<prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()==0&&prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>0){}
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix!=null&&prefix.length()>=0){if(prefix!=null&&prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix==null){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()>0){if(prefix{null&&prefix.length()>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(name.length()-1)!='/'){if(name.length()>0||name.charAt(name.length())!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length()-4);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161name=fileName.substring(0,fileName.length()-prefix.length()-3);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()<0){for(prefix.length()<0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||name.charAt(prefix.length()-1)!='/'){if(name.length()>0||name.charAt(prefix.length())!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null&&prefix.length()<=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=header?TarUtils.parseName(header,offset,DEFAULT_DIR_MODE):TarUtils.parseName(header,offset,PREFIXLEN,encoding);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()>0||prefix.charAt(name.length()-1)!='/'){if(name.length()>0||Prefix.charAt(name.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),DEFAULT_DIR_MODE));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161file.getParent().replaceChild(header,newFile(encoding.getPath(),DEFAULT_FILE_MODE));
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix.length()==0||prefix.charAt(prefix.length()-1)!='/'){if(prefix.length()==0||Prefix.charAt(prefix.length()-1)!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161If(prefix!=null&&prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length(){0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()==0){if(name.length()>>0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix>=null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()>=0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.length()<=0||prefix.charAt(prefix.length())!='/'){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(name.endsWith(".java")){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=isDirectory?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=header?TarUtils.parseName(header,offset,DEFAULT_FILE_MODE):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161naming=prefix+"/"+name;
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161finalStringprefix=header?TarUtils.parseName(header,offset,PREFIXLEN):TarUtils.parseName(header,offset,DEFAULT_DIR_MODE);
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(prefix==null||prefix.length()==0){if(prefix{null||prefix.length()==0){
projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java1161if(Prefix!=null&&prefix.length()>0){
