bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	26	None	replace
2	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,ParseException)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,ParseException)	25	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
5	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	25	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	97	None	replace
8	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + ",]: "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + ",]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + ",]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	97	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	97	None	replace
10	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getIndex()  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	97	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,int)	97	None	replace
12	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
13	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
14	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  ex.getCause();  [CE]  unreachable  statement  [FE]      IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  ex.getCause();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  cause  =  ex.getCause();	  	non-compiled	[CE]  unreachable  statement	38	None	add
15	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  ex.getMessage();  [CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  msg  =  ex.getMessage();	  	non-compiled	[CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)	38	None	add
16	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ",   ");  [CE]  unreachable  statement  [FE]          IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ",   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( ",   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
17	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   ") ");  [CE]  unreachable  statement  [FE]            IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   ") ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException(   ") ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
18	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ".   ");  [CE]  unreachable  statement  [FE]              IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ".   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( ".   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
19	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   "   ");  [CE]  unreachable  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  unreachable  statement	99	None	add
20	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ",   ");  [CE]  unreachable  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ",   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException( ",   ");	  	non-compiled	[CE]  unreachable  statement	99	None	add
21	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   ") ");  [CE]  unreachable  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   ") ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(   ") ");	  	non-compiled	[CE]  unreachable  statement	99	None	add
22	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throw  new  IndexOutOfBoundsException(   "   ");  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throw  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    Throw  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  not  a  statement	99	None	add
23	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ".   ");  [CE]  unreachable  statement  [FE]            IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ".   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException( ".   ");	  	non-compiled	[CE]  unreachable  statement	99	None	add
24	[BUG]  [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(fail.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
25	[BUG]  [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
26	[BUG]  [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  e  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(e.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  e	64	None	replace
27	[BUG]  [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IllegalStateException( " ");  }  [CE]  unclosed  string  literal  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.weirdStringException( "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
28	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	compilable	  [FE]  IllegalArgumentException  	24	1	replace
29	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [FE]  IllegalArgumentException  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	compilable	  [FE]  IllegalArgumentException  	24	1	replace
30	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  }	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	24	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,ParseException)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,ParseException)	24	None	replace
32	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,ParsePosition)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,ParsePosition)	24	None	replace
33	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg);  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg);	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	32	None	replace
38	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	32	None	replace
39	[BUG]  [BUGGY]  Throwable  tz  =  e.weirdStringException( " ");  [CE]  cannot  find  symbol  e  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  e.weirdStringException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  e.weirdStringException( " ");	  throw    e.weirdStringException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  e	41	None	replace
40	[BUG]  [BUGGY]  throw  ex.weirdStringException( " ".equals(msg));  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " ".equals(msg));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " ".equals(msg));	  throw    e.weirdStringException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
43	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	35	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [FE]  IllegalArgumentException  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,ParseException)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,ParseException)	21	None	replace
49	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	21	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,ParsePosition)	21	None	replace
52	[BUG]  [BUGGY]  msg.add(ex);  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  msg.add(ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	msg.add(ex);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  msg.add(msg);  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  msg.add(msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	msg.add(msg);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
54	[BUG]  [BUGGY]  result.add(msg,  ex);  [CE]  cannot  find  symbol  result  [FE]                                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  result.add(msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	result.add(msg,  ex);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
55	[BUG]  [BUGGY]  msg.add(input);  [CE]  cannot  find  symbol  [FE]                                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  msg.add(input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	msg.add(input);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
56	[BUG]  [BUGGY]  ex.add(msg);  [CE]  cannot  find  symbol  [FE]                                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ex.add(msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ex.add(msg);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
57	[BUG]  [BUGGY]  parse(msg);  [CE]  method  parse  in  class  ISO8601Utils  cannot  be  applied  to  given  types;  [FE]                                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parse(msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parse(msg);	  result.add(msg);    	non-compiled	[CE]  method  parse  in  class  ISO8601Utils  cannot  be  applied  to  given  types;	11	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	89	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)	89	None	replace
60	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)	89	None	replace
62	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	43	None	replace
63	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	43	None	replace
64	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  IllegalArgumentException    ex    =    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	67	None	replace
65	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  IllegalArgumentException    ex    =    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	67	None	replace
66	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  IllegalArgumentException    ex    =    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	67	None	replace
67	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  Date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  Date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( "Failed  to  parse  Date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  IllegalArgumentException    ex    =    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	67	None	replace
68	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
69	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	3	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)	3	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
72	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + ",Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + ",Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + ",Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	3	None	replace
73	[BUG]  [BUGGY]  Throwable  msg  =  ex.getMessage();  [CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  msg  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  msg  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
74	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
75	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
76	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(fail);	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
77	[BUG]  [BUGGY]  throw  ex.weirdStringException( " ", "msg);  [CE]  unclosed  string  literal  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " ", "msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " ", "msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  unclosed  string  literal	101	None	replace
78	[BUG]  [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  msg);  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " "  +  msg,  msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
79	[BUG]  [BUGGY]  throw  msg.weirdStringException( " ",  ex);  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  msg.weirdStringException( " ",  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  msg.weirdStringException( " ",  ex);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
80	[BUG]  [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  ex);  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " "  +  msg,  ex);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
81	[BUG]  [BUGGY]  aught(e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(e)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
82	[BUG]  [BUGGY]  reason(ex.getMessage()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  reason(ex.getMessage()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	reason(ex.getMessage()))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
83	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSyntaxException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtExceptionHandler.throwAsSyntaxException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtExceptionHandler.throwAsSyntaxException( " ");	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	68	None	replace
84	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIllegalArgumentException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtExceptionHandler.throwAsIllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtExceptionHandler.throwAsIllegalArgumentException( " ");	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	68	None	replace
85	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	68	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	68	None	replace
87	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtExceptionHandler.throwInternal();	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	68	None	replace
88	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	52	None	replace
89	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
90	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  input);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
91	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLineno());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getLineno());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getLineno());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
94	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException('       ");    	non-compiled	[CE]  missing  return  statement	17	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  data,  pos.getIndex());  [CE]  cannot  find  symbol  data  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  data,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  data,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  data	92	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	92	None	replace
97	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getStartIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
98	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
99	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
100	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
101	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getLineno());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
102	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartIndex());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
103	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getSourceName());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
104	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getCode());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getCode());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getCode());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
106	[BUG]  [BUGGY]  if(!hasMillis)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasMillis  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasMillis)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasMillis)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	7	None	replace
107	[BUG]  [BUGGY]  if(!hasFailed)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasFailed  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasFailed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasFailed)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	7	None	replace
108	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ".equals(input));  }  [CE]  cannot  find  symbol  hasT  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ".equals(input));  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalStateException( " ".equals(input));  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	7	None	replace
109	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	7	None	replace
110	[BUG]  [BUGGY]  if(!timezoneIndicator)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!timezoneIndicator)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!timezoneIndicator)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	7	None	replace
111	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasMilliseconds)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasMilliseconds)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	7	None	replace
112	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  not  a  statement	82	None	replace
113	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	82	None	replace
114	[BUG]  [BUGGY]  Throwable  cause  =  ex.getMessage();  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  cause  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  cause  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	non-compiled	[CE]  incompatible  types	83	None	replace
115	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ex.getMessage();  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
116	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  cause  =  ex.getMessage();  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  cause  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( " ");  Throwable  cause  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
117	[BUG]  [BUGGY]  if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	non-compiled	[CE]  missing  return  statement	83	None	replace
118	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
119	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  ex);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
120	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
121	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
122	[BUG]  [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	90	None	replace
123	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)	90	None	replace
124	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,int)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,int)	90	None	replace
125	[BUG]  [BUGGY]  new  IllegalArgumentException(msg,   "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException(msg,   "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException(msg,   "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	90	None	replace
126	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  act,  pos.getIndex());  [CE]  cannot  find  symbol  act  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  act,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  act,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  act	90	None	replace
127	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
128	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,int)  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,int)	100	None	replace
129	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,int)  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,int)	100	None	replace
130	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]        IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	100	None	replace
131	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    Throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	non-compiled	[CE]  not  a  statement	58	None	replace
132	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    Throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	non-compiled	[CE]  not  a  statement	58	None	replace
133	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    Throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	non-compiled	[CE]  not  a  statement	58	None	replace
134	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    Throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	58	1	replace
135	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    Throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	58	1	replace
136	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);	  	non-compiled	[CE]  unreachable  statement	49	None	add
137	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);	  	non-compiled	[CE]  not  a  statement	49	None	add
138	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,ParsePosition)	30	None	replace
139	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int,ParseException)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int,ParseException)	30	None	replace
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex(),  date);  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex(),  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex(),  date);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
142	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getCode(),  pos);  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getCode(),  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getCode(),  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
143	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input,    pos);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
144	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	76	None	replace
145	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);	  	non-compiled	[CE]  unreachable  statement	61	None	add
147	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);	  	non-compiled	[CE]  not  a  statement	61	None	add
148	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  pos,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  pos,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    pos,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	4	None	replace
149	[BUG]  [BUGGY]  if(fail.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(fail.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(fail.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
150	[BUG]  [BUGGY]  if(input.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
151	[BUG]  [BUGGY]  if(e.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  e  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(e.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(e.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  e	65	None	replace
152	[BUG]  [BUGGY]  If(ex.weirdStringException( " ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(ex.weirdStringException( " ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(ex.weirdStringException( " ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	65	None	replace
153	[BUG]  [BUGGY]  pos.setIndex(input,  date);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(input,  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(input,  date);	  pos.setIndex(date);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	10	None	replace
154	[BUG]  [BUGGY]  pos.setIndex(input);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(input);	  pos.setIndex(date);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	10	None	replace
155	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(date));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.toHexString(date));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.toHexString(date));	  pos.setIndex(date);    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	10	None	replace
156	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(input));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(input));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.toHexString(date),  Integer.toHexString(input));	  pos.setIndex(date);    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	10	None	replace
157	[BUG]  [BUGGY]  pos.setIndex(Integer.toString(date));  [CE]  no  suitable  method  found  for  toString(String)  [FE]                                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.toString(date));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.toString(date));	  pos.setIndex(date);    	non-compiled	[CE]  no  suitable  method  found  for  toString(String)	10	None	replace
158	[BUG]  [BUGGY]  pos.setIndex(date,  ex);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(date,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(date,  ex);	  pos.setIndex(date);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	10	None	replace
159	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(msg));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(msg));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.toHexString(date),  Integer.toHexString(msg));	  pos.setIndex(date);    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	10	None	replace
160	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
161	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
162	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  Throwables.throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
163	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( " "), "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  Throwables.throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
164	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);	  	non-compiled	[CE]  unreachable  statement	51	None	add
165	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);	  	non-compiled	[CE]  not  a  statement	51	None	add
166	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }  [CE]  cannot  find  symbol  hasT  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	87	None	replace
167	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  }  [CE]  cannot  find  symbol  hasT  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg);  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	87	None	replace
168	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }  [CE]  cannot  find  symbol  hasT  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex);  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	87	None	replace
169	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  not  a  statement	53	None	replace
170	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  not  a  statement	53	None	replace
171	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }  [CE]  missing  return  statement  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  missing  return  statement	53	None	replace
172	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [CE]  missing  return  statement  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  missing  return  statement	53	None	replace
173	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }  [CE]  missing  return  statement  [FE]                    IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  ex);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  missing  return  statement	53	None	replace
174	[BUG]  [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
175	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  hasT	85	None	replace
176	[BUG]  [BUGGY]  while(pos!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  while(pos!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	while(pos!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	42	None	replace
177	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	42	None	replace
178	[BUG]  [BUGGY]  while(pos!=  null)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  while(pos!=  null)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	while(pos!=  null)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
179	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
180	[BUG]  [BUGGY]  If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	42	None	replace
181	[BUG]  [BUGGY]  If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	42	None	replace
182	[BUG]  [BUGGY]  if(fail.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(fail.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(fail.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
183	[BUG]  [BUGGY]  if(!ex.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!ex.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!ex.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
184	[BUG]  [BUGGY]  if(!timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	40	None	replace
185	[BUG]  [BUGGY]  if(date.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
186	[BUG]  [BUGGY]  if(pos.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(pos.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(pos.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
187	[BUG]  [BUGGY]  if(input.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
188	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
189	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  JsonSyntaxException( " ");  }	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	98	None	replace
190	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  JsonSyntaxException( " ");  }	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
191	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
192	[BUG]  [BUGGY]  ParseException  ex  =  new  JsonSyntaxException( " ");  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  JsonSyntaxException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  JsonSyntaxException( " ");	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	73	None	replace
193	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
194	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
195	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
196	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	95	None	replace
197	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	95	None	replace
198	[BUG]  [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	95	None	replace
199	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex);  [CE]  missing  return  statement  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  missing  return  statement	95	None	replace
200	[BUG]  [BUGGY]  Throwable  tz  =  ex.getCause();  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  ex.getCause();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  ex.getCause();	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  missing  return  statement	74	None	replace
201	[BUG]  [BUGGY]  if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  tz  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  cannot  find  symbol  tz	74	None	replace
202	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	74	None	replace
203	[BUG]  [BUGGY]  new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	28	None	replace
204	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,ParseException)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex(),  ex);	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,ParseException)	28	None	replace
205	[BUG]  [BUGGY]  new  IllegalStateException(msg,   "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException(msg,   "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException(msg,   "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	28	None	replace
206	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
207	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
208	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	28	None	replace
209	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	78	None	replace
210	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
211	[BUG]  [BUGGY]  if(ex.hasMoreElements())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreElements())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreElements())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreElements())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
212	[BUG]  [BUGGY]  because(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  because(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	because(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }	  if(ex.hasMoreElements())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
213	[BUG]  [BUGGY]  if(ex.hasMoreElements())  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreElements())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreElements())  {  throw  new  IllegalStateException( " ");  }	  if(ex.hasMoreElements())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
214	[BUG]  [BUGGY]  while(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  while(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	while(ex.hasMoreElements())  {  throw  ex.weirdStringException( " ");  }	  if(ex.hasMoreElements())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
215	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	22	None	replace
216	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	22	None	replace
217	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input);  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
218	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	94	None	replace
219	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
220	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
221	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
222	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	45	None	replace
223	[BUG]  [BUGGY]  because(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  because(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	because(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }	  if(ex.hasMoreTokens())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
224	[BUG]  [BUGGY]  while(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  while(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	while(ex.hasMoreTokens())  {  throw  ex.weirdStringException( " ");  }	  if(ex.hasMoreTokens())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
225	[BUG]  [BUGGY]  if(ex.hasMoreTokens())  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreTokens())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreTokens())  {  throw  new  IllegalStateException( " ");  }	  if(ex.hasMoreTokens())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
226	[BUG]  [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(fail.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
227	[BUG]  [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
228	[BUG]  [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  e  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(e.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  e	66	None	replace
229	[BUG]  [BUGGY]  If(ex.weirdStringException( " "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(ex.weirdStringException( " "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(ex.weirdStringException( " "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	66	None	replace
230	[BUG]  [BUGGY]  Throwable  cause  =  ex.getCause();  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  cause  =  ex.getCause();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  cause  =  ex.getCause();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getCause();    	non-compiled	[CE]  missing  return  statement	13	None	replace
231	[BUG]  [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(fail.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(fail.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
232	[BUG]  [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
233	[BUG]  [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  e  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(e.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(e.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  e	63	None	replace
234	[BUG]  [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.weirdStringException( "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	63	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition,int)	31	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  error,  pos.getIndex());  [CE]  cannot  find  symbol  error  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  error,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  error,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  error	31	None	replace
237	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());  }	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	31	None	replace
238	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  date,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  date,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  date,  pos.getIndex());  }	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	31	None	replace
239	[BUG]  [BUGGY]  if(!timezoneIndicator)  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!timezoneIndicator)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!timezoneIndicator)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	69	None	replace
240	[BUG]  [BUGGY]  if(!hasMillis)  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  hasMillis  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasMillis)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasMillis)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	69	None	replace
241	[BUG]  [BUGGY]  if(!input.isEmpty())  {  ex.initCause(fail);  }  [CE]  missing  return  statement  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.isEmpty())  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.isEmpty())  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  missing  return  statement	69	None	replace
242	[BUG]  [BUGGY]  if(!hasFailed)  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  hasFailed  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasFailed)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasFailed)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	69	None	replace
243	[BUG]  [BUGGY]  if(!fail)  {  ex.initCause(fail);  }  [CE]  bad  operand  type  Exception  for  unary  operator  '!'  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!fail)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!fail)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  bad  operand  type  Exception  for  unary  operator  '!'	69	None	replace
244	[BUG]  [BUGGY]  if(!hasT)  {  ex.initCause(msg);  }  [CE]  cannot  find  symbol  hasT  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  ex.initCause(msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  ex.initCause(msg);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
245	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  data  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  data  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  data  + "]: "  +  msg,  pos.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
246	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  data.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  data.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  data.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
247	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  not  a  statement	80	None	replace
248	[BUG]  [BUGGY]  If(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
249	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	80	None	replace
250	[BUG]  [BUGGY]  If(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
251	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  ';'  expected	80	None	replace
252	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();  [CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger	80	None	replace
253	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();  [CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger  =  Logger.getInstance();	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriloggerlogger	80	None	replace
254	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  if(ex    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	79	None	replace
255	[BUG]  [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(ex    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	79	None	replace
256	[BUG]  [BUGGY]  if(date  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
258	[BUG]  [BUGGY]  if(!hasT)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
259	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  missing  return  statement	81	None	replace
260	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	20	None	replace
261	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
262	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	20	None	replace
263	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:   ",    msg);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
264	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos);  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:   ",    msg);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	59	None	replace
265	[BUG]  [BUGGY]  While(msg!=  null  &&  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  While(msg!=  null  &&  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	While(msg!=  null  &&  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
266	[BUG]  [BUGGY]  While(msg!=  null  &&  msg.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  While(msg!=  null  &&  msg.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	While(msg!=  null  &&  msg.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
267	[BUG]  [BUGGY]  aught(msg)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(msg)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(msg)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
268	[BUG]  [BUGGY]  While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	While(msg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
269	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	55	1	replace
270	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg);    	compilable	  [FE]  IllegalArgumentException  	55	1	replace
271	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  hasT	84	None	replace
272	[BUG]  [BUGGY]  If(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	84	None	replace
273	[BUG]  [BUGGY]  Throwable  tz  =  ex.getTargetException( " ");  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  ex.getTargetException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  ex.getTargetException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
274	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  tz  =  ex.getTargetException( " ");  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  tz  =  ex.getTargetException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( " ");  Throwable  tz  =  ex.getTargetException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
275	[BUG]  [BUGGY]  Throwable  ex  =  ex.getTargetException( " ");  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  ex  =  ex.getTargetException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  ex  =  ex.getTargetException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
276	[BUG]  [BUGGY]  Throwable  tz  =  this.timezoneIndicator.getTargetException( " ");  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  this.timezoneIndicator.getTargetException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  this.timezoneIndicator.getTargetException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	75	None	replace
277	[BUG]  [BUGGY]  Throwable  tz  =  ex.getTargetException( ", ");  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  ex.getTargetException( ", ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  ex.getTargetException( ", ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
278	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getMessage(),  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	91	None	replace
279	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  ex.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  ex.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
281	[BUG]  [BUGGY]  if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasMillis  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	6	None	replace
282	[BUG]  [BUGGY]  if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasFailed  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	6	None	replace
283	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	6	None	replace
284	[BUG]  [BUGGY]  if(!timezoneIndicator)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!timezoneIndicator)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!timezoneIndicator)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	6	None	replace
285	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(input));  }  [CE]  cannot  find  symbol  hasT  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(input));  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( " ".equals(input));  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	6	None	replace
286	[BUG]  [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	6	None	replace
287	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);	  	non-compiled	[CE]  unreachable  statement	54	None	add
288	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg);    Throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]:   "  +  msg);	  	non-compiled	[CE]  not  a  statement	54	None	add
289	[BUG]  [BUGGY]  if(date!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
290	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	39	None	replace
291	[BUG]  [BUGGY]  if(msg!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]      IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	39	None	replace
292	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
293	[BUG]  [BUGGY]  AssertionError(ex,  date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  AssertionError(ex,  date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	AssertionError(ex,  date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
294	[BUG]  [BUGGY]  DeserializationException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  DeserializationException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	DeserializationException  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
295	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	21	None	replace
296	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,ParsePosition)	21	None	replace
297	[BUG]  [BUGGY]  msg  =  ex.getMessage();  [CE]  missing  return  statement  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  msg  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	msg  =  ex.getMessage();	  result.add(msg);    	non-compiled	[CE]  missing  return  statement	11	None	replace
298	[BUG]  [BUGGY]  result.add(ex);  [CE]  cannot  find  symbol  result  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  result.add(ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	result.add(ex);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
299	[BUG]  [BUGGY]  result.add(input);  [CE]  cannot  find  symbol  result  [FE]                                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  result.add(input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	result.add(input);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
300	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLength());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLength());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLength());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
301	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getText());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getText());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getText());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
302	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
303	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartOffset());  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartOffset());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getStartOffset());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
304	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
305	[BUG]  [BUGGY]  if(input!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
306	[BUG]  [BUGGY]  if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  tz  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  cannot  find  symbol  tz	74	None	replace
307	[BUG]  [BUGGY]  if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  tz  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(tz!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  cannot  find  symbol  tz	74	None	replace
308	[BUG]  [BUGGY]  if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  tz  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(tz  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  cannot  find  symbol  tz	74	None	replace
309	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  tz,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  tz,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  tz,  pos.getIndex());	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	74	None	replace
310	[BUG]  [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!ex.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
311	[BUG]  [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date.weirdStringException( "   "))  {  throw  new  IllegalStateException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
312	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex(),  ex);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex(),    ex);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int,ParseException)	30	None	replace
313	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
314	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }  [CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
315	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }  [CE]  cannot  find  symbol  hasT  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( " ");  Throwable  msg  =  ex.getMessage();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  cannot  find  symbol  hasT	14	None	replace
316	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  msg  =  ex.getMessage();  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( " ");  Throwable  msg  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( " ");  Throwable  msg  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	14	None	replace
317	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLineno());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLineno());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
318	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSource());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSource());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSource());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
319	[BUG]  [BUGGY]  if(date.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
320	[BUG]  [BUGGY]  if(ex.weirdStringException( ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.weirdStringException( ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.weirdStringException( ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	65	None	replace
321	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:    [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( ", ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	compilable	  [FE]  java.lang.IllegalArgumentException:    	15	1	replace
322	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ", ");  [FE]  java.lang.IllegalArgumentException:    [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( ", ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	compilable	  [FE]  java.lang.IllegalArgumentException:    	15	1	replace
323	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
324	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	92	None	replace
325	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	92	None	replace
326	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
327	[BUG]  [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
328	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	33	None	replace
329	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Invalid  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	33	None	replace
330	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  	33	None	replace
331	[BUG]  [BUGGY]  if(!input)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  type  String  for  unary  operator  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  	6	None	replace
332	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	compilable	  [FE]  IllegalArgumentException  	83	1	replace
333	[BUG]  [BUGGY]  if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	compilable	  [FE]  IllegalArgumentException  	83	1	replace
334	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]: ",  msg);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +     "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]: ",  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  pos  +   "]: ",  msg);	  	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	54	None	add
335	[BUG]  [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!ex.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
336	[BUG]  [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  unclosed  string  literal  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.weirdStringException( "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.weirdStringException( "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
337	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	3	None	replace
338	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
339	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  input,  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	96	None	replace
340	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input.getIndex());  [CE]  <identifier>  expected  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  input.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
341	[BUG]  [BUGGY]  if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getCause();    	non-compiled	[CE]  missing  return  statement	13	None	replace
342	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
343	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
344	[BUG]  [BUGGY]  if(date!=  null)  {  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date.getIndex());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date!=  null)  {  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date!=  null)  {  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date.getIndex());  }	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
345	[BUG]  [BUGGY]  if(!hasT)  {  ex.initCause(date);  }  [CE]  cannot  find  symbol  hasT  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  ex.initCause(date);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  ex.initCause(date);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
346	[BUG]  [BUGGY]  if(!hasT)  {  ex.initCause(timezoneIndicator);  }  [CE]  cannot  find  symbol  hasT  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  ex.initCause(timezoneIndicator);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  ex.initCause(timezoneIndicator);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
347	[BUG]  [BUGGY]  if(hasT)  {  ex.initCause(date);  }  [CE]  cannot  find  symbol  hasT  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  ex.initCause(date);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  ex.initCause(date);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
348	[BUG]  [BUGGY]  if(!hasTimeZone)  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasTimeZone)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasTimeZone)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	69	None	replace
349	[BUG]  [BUGGY]  if(hasT)  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  hasT  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
350	[BUG]  [BUGGY]  if(!hasT)  {  ex.initCause(desc);  }  [CE]  cannot  find  symbol  hasT  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  ex.initCause(desc);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  ex.initCause(desc);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
351	[BUG]  [BUGGY]  if(ex.hasMoreElements())  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreElements())  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreElements())  {  throw  new  JsonSyntaxException( " ");  }	  if(ex.hasMoreElements())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
352	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [CE]  cannot  find  symbol  hasT  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	87	None	replace
353	[BUG]  [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    	non-compiled	[CE]  missing  return  statement	19	None	replace
354	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(input));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equals(input));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equals(input));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	81	None	replace
355	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(input));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(input));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equalsIgnoreCase(input));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	81	None	replace
356	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(Integer.toHexString(input)));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equals(Integer.toHexString(input)));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equals(Integer.toHexString(input)));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	81	None	replace
357	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(input)?  null  :  input);  [CE]  missing  return  statement  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equals(input)?  null  :  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equals(input)?  null  :  input);	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  missing  return  statement	81	None	replace
358	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [CE]  missing  return  statement  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  }	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  missing  return  statement	53	None	replace
359	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [CE]  ';'  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
360	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoritables();	  if(msg!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
361	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
362	[BUG]  [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||!msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
363	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
364	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
365	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
366	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  missing  return  statement  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( ". ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
367	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
368	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
369	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException(   "   ");	  	non-compiled	[CE]  not  a  statement	38	None	add
370	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "  [ ");  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "  [ ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    JsonSyntaxException  ex  =  new  JsonSyntaxException( "  [ ");	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
371	[BUG]  [BUGGY]  IllegalArgumentException  tz  =  ex.getTargetException( " ");  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  tz  =  ex.getTargetException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  tz  =  ex.getTargetException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getTargetException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
372	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);	  	non-compiled	[CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)	61	None	add
373	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  cause  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [CE]  unreachable  statement  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  cause  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    Throwable  cause  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);	  	non-compiled	[CE]  unreachable  statement	61	None	add
374	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");  [CE]  cannot  find  symbol  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    JsonSyntaxException  ex  =  new  JsonSyntaxException( "   ");	  	non-compiled	[CE]  cannot  find  symbol	99	None	add
375	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(' ");  [CE]  unclosed  character  literal  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(' ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(' ");	  	non-compiled	[CE]  unclosed  character  literal	99	None	add
376	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ",  msg);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( " ",  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( " ",  msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	101	None	replace
377	[BUG]  [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  pos);  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " "  +  msg,  pos);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
378	[BUG]  [BUGGY]  throw  ex.weirdStringException( " "  +  msg);  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  ex.weirdStringException( " "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  ex.weirdStringException( " "  +  msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
379	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ",  msg);  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( " ",  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( " ",  msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String)	101	None	replace
380	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
381	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ", "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ", "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ", "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	89	None	replace
382	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	89	None	replace
383	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	89	None	replace
384	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
385	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
386	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    timezoneId    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  hasT	86	None	replace
387	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  timezoneId  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  timezoneId  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  timezoneId  + "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    timezoneId    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  hasT	86	None	replace
388	[BUG]  [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
389	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "));  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( " "));	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
390	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(msg);  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Thread.currentThread().getContextClassLoader().report(msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Thread.currentThread().getContextClassLoader().report(msg);	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
391	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  missing  return  statement  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Thread.currentThread().interrupt();	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
392	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(date,  ex);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Thread.currentThread().getContextClassLoader().process(date,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Thread.currentThread().getContextClassLoader().process(date,  ex);	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
393	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
394	[BUG]  [BUGGY]  new  IllegalStateException(input, "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException(input, "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException(input, "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	28	None	replace
395	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	95	None	replace
396	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException('       ");    	non-compiled	[CE]  missing  return  statement	17	None	replace
397	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:   ",    msg);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	59	None	replace
398	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }  [CE]  cannot  find  symbol  hasT  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos);  }	  throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:       "    +    msg);    throw    new    IllegalArgumentException(       "Failed    to    parse    date    [       "    +    input    +       "]:   ",    msg);    	non-compiled	[CE]  cannot  find  symbol  hasT	59	None	replace
399	[BUG]  [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!ex.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!ex.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
400	[BUG]  [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	24	None	replace
401	[BUG]  [BUGGY]  if(ex.hasMoreTokens())  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreTokens())  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreTokens())  {  throw  new  JsonSyntaxException( " ");  }	  if(ex.hasMoreTokens())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
402	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  date.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
403	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  input.getIndex());  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos,  input.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
404	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    Throwable  msg  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);	  	non-compiled	[CE]  variable  msg  is  already  defined  in  method  parse(String,ParsePosition)	51	None	add
405	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]: ",  +  input);  [CE]  bad  operand  type  String  for  unary  operator  [FE]      IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]:   "  +  input);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]: ",  +  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    input);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  msg  +   "]: ",  +  input);	  	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  	51	None	add
406	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
407	[BUG]  [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
408	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  data.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
409	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
410	[BUG]  [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
411	[BUG]  [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
412	[BUG]  [BUGGY]  ParseSyntaxException  ex  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseSyntaxException  ex  =  new  JsonSyntaxException( " ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseSyntaxException  ex  =  new  JsonSyntaxException( " ");	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
413	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]:   "  +  msg,  input.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]:   "  +  msg,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  +   "]:   "  +  msg,  input.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
414	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	100	None	replace
415	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ",  ex);  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParseException)  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( " ",  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( " ",  ex);	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParseException)	100	None	replace
416	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:    [FE]        IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IndexOutOfBoundsException( ", ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:    	100	1	replace
417	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [FE]  java.lang.IndexOutOfBoundsException:    [FE]        IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( ", ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:    	100	1	replace
418	[BUG]  [BUGGY]  Throwable  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  ex  =  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	32	None	replace
419	[BUG]  [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasTimeZone)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	7	None	replace
420	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ",  ex);  }  [CE]  cannot  find  symbol  hasT  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ",  ex);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalStateException( " ",  ex);  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	7	None	replace
421	[BUG]  [BUGGY]  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	43	None	replace
422	[BUG]  [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(timezoneIndicator));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.toHexString(date),  Integer.toHexString(timezoneIndicator));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.toHexString(date),  Integer.toHexString(timezoneIndicator));	  pos.setIndex(date);    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	10	None	replace
423	[BUG]  [BUGGY]  if(!hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
424	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  IllegalStateException  	39	1	replace
425	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  IllegalStateException  	39	1	replace
426	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]: ",  msg);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]:   "  +  msg);  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]: ",  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg);    throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  date  +   "]: ",  msg);	  	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	49	None	add
427	[BUG]  [BUGGY]  throw  e.getMessage();  [CE]  cannot  find  symbol  e  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  e.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  e.getMessage();	  throw    e.weirdStringException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  e	41	None	replace
428	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( " ", "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    pos,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	60	None	replace
429	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( ", "), "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "   "),   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    pos,    pos.getIndex());    	non-compiled	[CE]  	60	None	replace
430	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	28	None	replace
431	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParseException,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());	  new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParseException,int)	28	None	replace
432	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ".   "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ".   "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ".   "  +  pos.getIndex();  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
433	[BUG]  [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null)  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }	  if(msg!=    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
434	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  not  a  statement	77	None	replace
435	[BUG]  [BUGGY]  if(!input.hasNext())  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.hasNext())  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.hasNext())  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
436	[BUG]  [BUGGY]  if(!input.hasChildren())  {  ex.initCause(fail);  }  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.hasChildren())  {  ex.initCause(fail);  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.hasChildren())  {  ex.initCause(fail);  }	  if(!hasT)    {    ex.initCause(fail);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
437	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	43	None	replace
438	[BUG]  [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)	43	None	replace
439	[BUG]  [BUGGY]  AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  AssertionError(String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,int)	43	None	replace
440	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
441	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  for(int  i  =  0;  i  <  date.getLength();  ++i)  {  msg  =  msg  +  input  + ": "  +  pos.getIndex();  }	  if(msg    ==    null)    {    for(int    i    =    0;    i    <    date.getLength();    ++i)    {    msg    =    msg    +   ":   "    +    pos.getIndex();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
442	[BUG]  [BUGGY]  parent  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parent  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parent  ==  null  ||  msg.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
443	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(msg  ==  null  ||  msg.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(msg  ==  null  ||  msg.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }	  if(msg    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
444	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  ex.getMessage());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  ex.getMessage());	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getCause();    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
445	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  ex.getMessage());  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  ex.getMessage());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  ex.getMessage());	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getCause();    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
446	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( " ")  if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( " ")  if(ex.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getCause();    	non-compiled	[CE]  	13	None	replace
447	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	100	1	replace
448	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	100	1	replace
449	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	100	1	replace
450	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IndexOutOfBoundsException( "Failed  to  parse  date  [ "  +  input  + "]: ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	100	1	replace
451	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  [CE]  not  a  statement  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    data.getIndex());    	non-compiled	[CE]  not  a  statement	5	None	replace
452	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	78	None	replace
453	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,String,int)	76	None	replace
454	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParsePosition,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParsePosition,int)	76	None	replace
455	[BUG]  [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date.weirdStringException( "   "))  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
456	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
457	[BUG]  [BUGGY]  If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
458	[BUG]  [BUGGY]  While(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  While(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	While(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
459	[BUG]  [BUGGY]  If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(ex!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex.getMessage());  }	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	80	None	replace
460	[BUG]  [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aughtException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  If(ex!=    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
461	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	3	None	replace
462	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	3	None	replace
463	[BUG]  [BUGGY]  if(timezoneIndicator.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(timezoneIndicator.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(timezoneIndicator.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	65	None	replace
464	[BUG]  [BUGGY]  if(!ex.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!ex.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!ex.weirdStringException( "   ")!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.weirdStringException(   "   ")!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
465	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	95	None	replace
466	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  ex,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,String)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  ex,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  ex,  input);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,String)	95	None	replace
467	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,String)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date,  input);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +       "]:       "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,String)	95	None	replace
468	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  input,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  input,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  input,  date.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
469	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	92	None	replace
470	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
471	[BUG]  [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex(),  ex);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int,ParseException)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex(),  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex(),  ex);	  new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int,ParseException)	90	None	replace
472	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
473	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  input.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    input.getIndex());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
474	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException('       ");    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	replace
475	[BUG]  [BUGGY]  pos.setIndex(Integer.parseInt(input));  [CE]  missing  return  statement  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.parseInt(input));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.parseInt(input));	  pos.setIndex(date);    	non-compiled	[CE]  missing  return  statement	10	None	replace
476	[BUG]  [BUGGY]  pos.setIndex(Integer.parseInt(msg));  [CE]  missing  return  statement  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  pos.setIndex(Integer.parseInt(msg));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	pos.setIndex(Integer.parseInt(msg));	  pos.setIndex(date);    	non-compiled	[CE]  missing  return  statement	10	None	replace
477	[BUG]  [BUGGY]  parseAndReturn(msg,  pos);  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parseAndReturn(msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parseAndReturn(msg,  pos);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
478	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(msg);  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parseAndIgnoreWhitespace(msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parseAndIgnoreWhitespace(msg);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
479	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(msg,  pos);  [CE]  cannot  find  symbol  [FE]                                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parseAndIgnoreWhitespace(msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parseAndIgnoreWhitespace(msg,  pos);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
480	[BUG]  [BUGGY]  parseAndReturn(msg,  ex);  [CE]  cannot  find  symbol  [FE]                                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  parseAndReturn(msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	parseAndReturn(msg,  ex);	  result.add(msg);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
481	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  new  IllegalStateException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException(   "   ");  new  IllegalStateException(   "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalStateException(   "   ");    new  IllegalStateException(   "   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
482	[BUG]  [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  date.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
483	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  date.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  date.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    pos    +       "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
484	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  input,  pos.getIndex());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
485	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getMessage());  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getMessage());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
486	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLongIndex());  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLongIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLongIndex());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
487	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  ex,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParseException,int)	35	None	replace
488	[BUG]  [BUGGY]  throw  e.weirdStringException( " ",  msg);  [CE]  cannot  find  symbol  e  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  e.weirdStringException( " ",  msg);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  e.weirdStringException( " ",  msg);	  throw    ex.weirdStringException(   "   ",    msg);    	non-compiled	[CE]  cannot  find  symbol  e	101	None	replace
489	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	96	None	replace
490	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
491	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  new  IndexOutOfBoundsException(   "   ");  [CE]  unreachable  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  unreachable  statement	99	None	add
492	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  date.getIndex());  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  date.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  date.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    date.getIndex());    	non-compiled	[CE]  not  a  statement	2	None	replace
493	[BUG]  [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(date.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(date.weirdStringException( "   "))  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(ex.weirdStringException(   "   "))    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
494	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(msg));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equals(msg));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equals(msg));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	81	None	replace
495	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(msg));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(msg));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equalsIgnoreCase(msg));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	81	None	replace
496	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(Integer.valueOf(input)));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  new  IllegalArgumentException( " ".equals(Integer.valueOf(input)));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	new  IllegalArgumentException( " ".equals(Integer.valueOf(input)));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	81	None	replace
497	[BUG]  [BUGGY]  if(!input.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
498	[BUG]  [BUGGY]  if(!input.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
499	[BUG]  [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
500	[BUG]  [BUGGY]  if(!act)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  act  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!act)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!act)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  act	6	None	replace
501	[BUG]  [BUGGY]  Throwable  tz  =  ex.getMessage();  [CE]  incompatible  types  [FE]          IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwable  tz  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwable  tz  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    tz    =    ex.getCause();    	non-compiled	[CE]  incompatible  types	74	None	replace
502	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]:   "  +  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]:   "  +  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  date  + "]:   "  +  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	93	None	replace
503	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  pos.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
504	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  input,  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  input,  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  input,  msg,  pos.getIndex());	  throw    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:       "    +    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
505	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",  msg: "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	89	None	replace
506	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  input,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "],  msg: "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   ",    msg:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,int)	89	None	replace
507	[BUG]  [BUGGY]  if(timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(timezoneIndicator.hasMoreTokens())  {  throw  new  IllegalArgumentException( " ");  }	  if(ex.hasMoreTokens())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	40	None	replace
508	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	24	None	replace
509	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + ",  Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + ",  Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + ",  Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,ParsePosition)	24	None	replace
510	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException(msg  + "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg,  date);	  throw    new    IllegalArgumentException(msg    +   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	24	None	replace
511	[BUG]  [BUGGY]  While(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  While(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	While(ex!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	68	None	replace
512	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  e);  [CE]  cannot  find  symbol  ioConstants  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  e);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(ioConstants.MILLIS_PER_SECOND,  e);	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  ioConstants	68	None	replace
513	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  input,  pos.getIndex()));  [CE]  ';'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  input,  pos.getIndex()));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(ioConstants.MILLIS_PER_SECOND,  input,  pos.getIndex()));	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
514	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND));  [CE]  ';'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(ioConstants.MILLIS_PER_SECOND));	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
515	[BUG]  [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  pos.getIndex()));  [CE]  ';'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  aught(ioConstants.MILLIS_PER_SECOND,  pos.getIndex()));  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	aught(ioConstants.MILLIS_PER_SECOND,  pos.getIndex()));	  if(ex!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
516	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  pos.getName()  + "]:   "  +  msg,  input,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
517	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos.getIndex(),  input);  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,String)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos.getIndex(),  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]:   "  +  msg,  pos.getIndex(),  input);	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    pos.getIndex()    +   "]:       "    +    msg,    input,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int,String)	97	None	replace
518	[BUG]  [BUGGY]  if(ex.hasMoreTokens())  {  throw  ex;  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(ex.hasMoreTokens())  {  throw  ex;  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(ex.hasMoreTokens())  {  throw  ex;  }	  if(ex.hasMoreTokens())    {    throw    ex.weirdStringException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
519	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  ex  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    IllegalArgumentException    [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  Throwable  ex  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    ex);    Throwable  ex  =  new  IllegalArgumentException(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg,  ex);	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	61	None	add
520	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  input,  pos.getIndex());	  Throwables.throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
521	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  cause  =  ex.getMessage();  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  cause  =  ex.getMessage();  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	IllegalArgumentException  ex  =  new  IllegalArgumentException( " ");  cause  =  ex.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    ex.getMessage();    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	83	None	replace
522	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]        IllegalArgumentException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( " ");  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  hasT	73	None	replace
523	[BUG]  [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
524	[BUG]  [BUGGY]  return  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  return  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	return  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: ");	  throw    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
525	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  date,  input);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,String)  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  date,  input);  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  date,  input);	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    pos    +   "]:   "    +    msg,    input);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String,String)	22	None	replace
526	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  date,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  date,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  date,  pos.getIndex());	  ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    date    +       "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	44	None	replace
527	[BUG]  [BUGGY]  if(!input)  {  throw  new  IllegalStateException( " ");  }  [CE]  bad  operand  type  String  for  unary  operator  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  bad  operand  type  String  for  unary  operator  	7	None	replace
528	[BUG]  [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!hasTimeZone())  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
529	[BUG]  [BUGGY]  if(!input.hasNext())  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!input.hasNext())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!input.hasNext())  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
530	[BUG]  [BUGGY]  if(!removed)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  removed  [FE]                                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!removed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!removed)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  removed	7	None	replace
531	[BUG]  [BUGGY]  if(!act)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  act  [FE]                                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  if(!act)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	if(!act)  {  throw  new  IllegalStateException( " ");  }	  if(!hasT)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  act	7	None	replace
532	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  in.getLineno());  [CE]  cannot  find  symbol  in  [FE]                    JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  in.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  in.getLineno());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol  in	72	None	replace
533	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getLineno());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getLineno());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getLineno());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getLineno());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
534	[BUG]  [BUGGY]  AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  AssertionError(String,int)  [FE]                JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	AssertionError  e  =  new  AssertionError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  if(ex    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,int)	79	None	replace
535	[BUG]  [BUGGY]  If(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  If(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	If(ex  ==  null)  {  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  }	  if(ex    ==    null)    {    throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	79	None	replace
536	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParseException,int)  [FE]            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  ex,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,ParseException,int)	25	None	replace
537	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)  [FE]              JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalStateException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());	  throw    new    IllegalStateException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(String,int)	25	None	replace
538	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",]:   "  +  msg,  pos.getIndex());  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)  [FE]                          JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + ",]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex.getIndex());    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,int)	32	None	replace
539	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [CE]  not  a  statement  [FE]                            JsonSyntaxException      [CONTEXT]      }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());  ex.initCause(fail);      [BUGGY]  Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	Throw  new  IllegalArgumentException( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());	  throw    new    IllegalArgumentException(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    ex.getIndex());    	non-compiled	[CE]  not  a  statement	32	None	replace
